/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 TableLamp.gltf --types -k 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    TableLampe: THREE.Mesh
  }
  materials: {
    SphereLight: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/TableLamp.gltf') as GLTFResult
  return (
    <group
      {...props}
      dispose={null}
    >
      <mesh
        name='TableLampe'
        geometry={nodes.TableLampe.geometry}
        material={materials.SphereLight}
        position={[11.776, 1.012, -9.08]}
      />
    </group>
  )
}

useGLTF.preload('/TableLamp.gltf')
