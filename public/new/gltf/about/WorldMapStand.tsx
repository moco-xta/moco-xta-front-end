/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 WorldMapStand.gltf --types -k 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    WorldMapStand_1: THREE.Mesh
    WorldMapStand_2: THREE.Mesh
  }
  materials: {
    world_map_stand_marble: THREE.MeshStandardMaterial
    world_map_stand_used_metal: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/WorldMapStand.gltf') as GLTFResult
  return (
    <group
      {...props}
      dispose={null}
    >
      <group
        name='WorldMapStand'
        position={[-12.2, 10.333, -14.1]}
        rotation={[0, Math.PI / 6, 0]}
      >
        <mesh
          name='WorldMapStand_1'
          geometry={nodes.WorldMapStand_1.geometry}
          material={materials.world_map_stand_marble}
        />
        <mesh
          name='WorldMapStand_2'
          geometry={nodes.WorldMapStand_2.geometry}
          material={materials.world_map_stand_used_metal}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/WorldMapStand.gltf')
