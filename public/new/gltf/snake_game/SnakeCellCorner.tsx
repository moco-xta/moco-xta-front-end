/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 SnakeCellCorner.gltf --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    SnakeCellCorner_1: THREE.Mesh
    SnakeCellCorner_2: THREE.Mesh
    SnakeCellCorner_3: THREE.Mesh
    SnakeCellCorner_4: THREE.Mesh
    SnakeCellCorner_5: THREE.Mesh
    SnakeCellCorner_6: THREE.Mesh
    SnakeCellCorner_7: THREE.Mesh
    SnakeCellCorner_8: THREE.Mesh
    SnakeCellCorner_9: THREE.Mesh
    SnakeCellCorner_10: THREE.Mesh
  }
  materials: {
    snake_green_M: THREE.MeshStandardMaterial
    snake_green_L: THREE.MeshStandardMaterial
    snake_green_XL: THREE.MeshStandardMaterial
    snake_green_D: THREE.MeshStandardMaterial
    snake_green_XD: THREE.MeshStandardMaterial
    snake_yellow_M: THREE.MeshStandardMaterial
    snake_yellow_L: THREE.MeshStandardMaterial
    snake_yellow_XL: THREE.MeshStandardMaterial
    snake_yellow_D: THREE.MeshStandardMaterial
    snake_yellow_XD: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/SnakeCellCorner.gltf') as GLTFResult
  return (
    <group
      {...props}
      dispose={null}
    >
      <mesh
        geometry={nodes.SnakeCellCorner_1.geometry}
        material={materials.snake_green_M}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_2.geometry}
        material={materials.snake_green_L}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_3.geometry}
        material={materials.snake_green_XL}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_4.geometry}
        material={materials.snake_green_D}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_5.geometry}
        material={materials.snake_green_XD}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_6.geometry}
        material={materials.snake_yellow_M}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_7.geometry}
        material={materials.snake_yellow_L}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_8.geometry}
        material={materials.snake_yellow_XL}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_9.geometry}
        material={materials.snake_yellow_D}
      />
      <mesh
        geometry={nodes.SnakeCellCorner_10.geometry}
        material={materials.snake_yellow_XD}
      />
    </group>
  )
}

useGLTF.preload('/SnakeCellCorner.gltf')
