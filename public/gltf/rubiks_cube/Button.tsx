/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Button.gltf --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Button: THREE.Mesh
    ArrowLeft: THREE.Mesh
    ArrowRight: THREE.Mesh
  }
  materials: {
    button_material: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Button.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Button.geometry} material={materials.button_material} />
      <mesh geometry={nodes.ArrowLeft.geometry} material={nodes.ArrowLeft.material} />
      <mesh geometry={nodes.ArrowRight.geometry} material={nodes.ArrowRight.material} rotation={[0, -1.571, 0]} />
    </group>
  )
}

useGLTF.preload('/Button.gltf')
