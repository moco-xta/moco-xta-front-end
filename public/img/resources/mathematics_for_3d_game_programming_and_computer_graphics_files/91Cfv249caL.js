/*

 slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>
 Copyright (c) 2014 David Bj?rklund
 Available under the MIT license
 <https://github.com/kesla/parse-headers/blob/master/LICENCE>
 Programatically add the following
 @name m3u8-parser @version 4.5.2 @license Apache-2.0  @name mpd-parser @version 0.15.4 @license Apache-2.0  @name @videojs/http-streaming @version 2.6.4 @license Apache-2.0  @name pkcs7 @version 1.0.4 @license Apache-2.0  @name aes-decrypter @version 3.1.2 @license Apache-2.0 */
'use strict'
mix_d(
  'VSEDistributionCards__vse-vw-dp-card:vse-vw-dp-card__VPIW51JN',
  'exports tslib @p/A @c/scoped-dom @c/metrics @c/logger @p/a-modal @c/aui-untrusted-ajax @c/navigation @c/aui-carousel @c/browser-window'.split(
    ' ',
  ),
  function (ji, nb, Xm, Ym, Oc, Zm, $m, an, bn, cn, dn) {
    function Ac(z) {
      return z && 'object' === typeof z && 'default' in z ? z : { default: z }
    }
    var V = Ac(Xm),
      rb = Ac(Ym),
      en = Ac(Zm),
      fn = Ac($m),
      gn = Ac(an),
      ki = Ac(bn),
      hn = Ac(cn),
      Bc = Ac(dn),
      li,
      mi,
      ni,
      oi = function (z, F) {
        li = { schemaId: z, producerId: F, requiredNumOfFields: 14 }
      },
      $b = function (z) {
        Gf(z, li)
      },
      La = function (z) {
        Gf(z, mi)
      },
      Gf = function (z, F) {
        Object.keys(z).length < F.requiredNumOfFields &&
          Oc.count('invalidNumOfFields-' + F.producerId, 1)
        URLSearchParams &&
          '1' === new URLSearchParams(window.location.search).get('iveDebug') &&
          (window.DistributionMetricsDebugInfo
            ? window.DistributionMetricsDebugInfo.push(z)
            : (window.DistributionMetricsDebugInfo = [z]))
        z = JSON.stringify(z).replace(/\\\\/g, '')
        Oc.event(JSON.parse(z), F.producerId, F.schemaId, { ssd: !1 })
      },
      jn = function (z) {
        return function (F) {
          var y = z.eventSource,
            fa = z.placementContext,
            Z = z.clientId,
            S = new Date(),
            X = navigator.userAgent
          var ia = z.stringPayload
          var aa = window.location.href.match(/\/dp\/([A-Z0-9]{10})/)
          ia = aa && aa[1] ? aa[1] : ia
          return V['default'].$.extend(
            {
              eventSource: y,
              placementContext: fa,
              clientId: Z,
              timestamp: S,
              userAgentData: X,
              titleSessionId: '0',
              videoAsin: '',
              pageAsin: ia,
              videoAsinList: z.videoAsinList || '',
              rankingStrategy: z.rankingStrategy || '',
              creativeId: z.creativeId,
              stringPayload: z.stringPayload || '',
            },
            F,
          )
        }
      },
      kn = (function () {
        return function (z, F, y, fa) {
          var Z = this
          this.onIntersectionObserved = function (S, X) {
            S.forEach(function (ia) {
              if (X) {
                var aa = ia.target
                if (ia.isIntersecting)
                  (ia = setTimeout(function () {
                    var qa = Z.childElems.indexOf(aa)
                    Z.callback(qa)
                    Z.viewTimeoutMap.delete(aa)
                  }, 1e3)),
                    Z.viewTimeoutMap.set(aa, ia)
                else if ((ia = Z.viewTimeoutMap.get(aa)))
                  clearTimeout(ia), Z.viewTimeoutMap.delete(aa)
              } else ia.isIntersecting && ((ia = Z.childElems.indexOf(ia.target)), Z.callback(ia))
            })
          }
          void 0 === z && (z = null)
          this.callback = y
          this.childElems = Array.from(document.querySelectorAll(F)).filter(function (S) {
            return null !== S.offsetParent
          })
          this.optionsForIntersection = { root: z, rootMargin: '0px', threshold: 0.5 }
          this.viewTimeoutMap = new Map()
          this.intersectionObserver = new IntersectionObserver(function (S) {
            return Z.onIntersectionObserved(S, fa)
          }, this.optionsForIntersection)
          this.childElems.forEach(function (S) {
            Z.intersectionObserver.observe(S)
          })
        }
      })(),
      cd = function (z) {
        return V['default'].objectIsEmpty(z) || '' === z
      },
      Aa
    ;(function (z) {
      z[(z.loadstart = 0)] = 'loadstart'
      z[(z.ended = 1)] = 'ended'
      z[(z.error = 2)] = 'error'
      z[(z.invokeplay = 3)] = 'invokeplay'
      z[(z.pause = 4)] = 'pause'
      z[(z.playing = 5)] = 'playing'
      z[(z.rebuffering = 6)] = 'rebuffering'
      z[(z.seeked = 7)] = 'seeked'
      z[(z.seeking = 8)] = 'seeking'
      z[(z.timeupdate = 9)] = 'timeupdate'
      z[(z.requestmute = 10)] = 'requestmute'
      z[(z.requestunmute = 11)] = 'requestunmute'
      z[(z.requestpause = 12)] = 'requestpause'
      z[(z.requestplay = 13)] = 'requestplay'
    })(Aa || (Aa = {}))
    var pi
    ;(function (z) {
      z.ATVPDKIKX0DER = 'https://unagi-na.amazon.com'
      z.A21TJRUUN4KGV = 'https://unagi-eu.amazon.com'
    })(pi || (pi = {}))
    var Hf = function (z, F, y, fa, Z) {
        void 0 === Z && (Z = 3)
        Z--
        gn['default']
          .post(
            z,
            { accepts: '*/*', contentType: 'application/json;charset=UTF-8', timeout: 15e3 },
            F,
          )
          .then(function (S) {
            y(S)
          })
          .catch(function (S) {
            0 < Z
              ? Hf(z, F, y, fa, Z)
              : (0 === S.statusCode &&
                  Ib(
                    'Request has failed with unknown status code. Payload: ' + JSON.stringify(F),
                    'ERROR',
                  ),
                fa(S))
          })
      },
      ea = {
        pageType: '',
        clientPrefix: '',
        deviceType: '',
        placement: '',
        metricsPlacement: '',
        cardId: '',
        creativeId: '',
        requester: '',
        buildCsmPayload: function (z) {},
        clientName: '',
        isIvxOpen: !1,
        enableWidgetMetricsAfterOneSecond: !1,
        isDesktopIngressCXUpdated: !1,
        showSocialShare: !1,
        isSingleVideoPresent: !1,
        isClosedCaptionsEnabled: !0,
        playerInstance: void 0,
        isHeroPopoverVisible: !1,
      },
      qi = function (z, F, y) {
        var fa, Z, S, X
        void 0 === y && (y = 'vse_cards')
        ea.deviceType = F
        ea.pageType = z.client || 'Gateway'
        ea.clientName = null !== (fa = z.clientName) && void 0 !== fa ? fa : ''
        ;(F = null === (Z = z.clientPrefix) || void 0 === Z ? void 0 : Z.toLowerCase()) ||
          (F =
            'IVE_VFTP' === ea.clientName || 'VFTPHero' === ea.clientName
              ? ea.clientName.toLowerCase()
              : ea.pageType.toLowerCase())
        ea.clientPrefix = F
        ea.isDesktopIngressCXUpdated = 'true' === z.desktopIngressCxUpdated
        ea.placement =
          ('' !== ea.clientName ? ea.clientName : ea.pageType) + 'Card-' + ea.deviceType
        ea.metricsPlacement =
          (V['default'].capabilities.mobile
            ? V['default'].capabilities.isAmazonApp
              ? 'mobile_app'
              : 'mobile_web'
            : V['default'].capabilities.tablet
              ? V['default'].capabilities.isAmazonApp
                ? 'tablet_app'
                : 'tablet_web'
              : 'desktop_web') +
          '.' +
          ea.placement +
          '.' +
          y
        ea.cardId = null !== (S = z.cardId) && void 0 !== S ? S : ''
        ea.creativeId = null !== (X = z.creativeId) && void 0 !== X ? X : ''
        ea.requester = z.requester || 'VSEWidgetCards'
        ea.enableWidgetMetricsAfterOneSecond = 'T1' === z.enableWidgetMetricsAfterOneSecond
      },
      Ra = function (z, F) {
        void 0 === F && (F = 1)
        try {
          Oc.count('vse:csm:cards:' + ea.clientPrefix + ':' + z, F)
        } catch (y) {
          Ib('failed to post CSM metric', 'ERROR')
        }
      },
      Pc = function (z, F) {
        void 0 === F && (F = 1)
        Ra(z + ':' + ea.deviceType, F)
      },
      Ib = function (z, F) {
        en['default'].log(
          'VSEWidgetCards: ' +
            z +
            '. Client prefix: ' +
            ea.clientPrefix +
            ', Page type: ' +
            ea.pageType,
          F,
          'VSEDistributionCards',
        )
      },
      ri = function (z, F) {
        ea.buildCsmPayload = jn({
          placementContext: ea.metricsPlacement,
          clientId: 'VSE',
          eventSource: null !== z && void 0 !== z ? z : 'VSEWidgetCards',
          stringPayload: null !== F && void 0 !== F ? F : '',
          creativeId: ea.creativeId,
        })
      },
      si = function (z, F, y) {
        try {
          if (V['default'].$('.' + ea.cardId).length) {
            var fa = !1,
              Z = F.map(function (qa) {
                return qa.contentId
              }).join(','),
              S = F.filter(function (qa) {
                return '' !== qa.metadata.rankingStrategy
              })
                .map(function (qa) {
                  return qa.metadata.rankingStrategy
                })
                .join(','),
              X = ea.buildCsmPayload({
                eventName: ea.clientPrefix + ':cardWidgetRendered',
                intPayload: 1,
                videoAsinList: Z,
                rankingStrategy: S,
              })
            $b(X)
            Ra('cardWidgetRendered', 1)
            X = function (qa) {
              ln(F, qa)
            }
            var ia = function () {
                for (var qa = y.carouselItemClassName, xa = 0; xa < F.length; xa++)
                  if (!F[xa].impressionRecorded) {
                    var Wa = V['default'].$(
                      '.' + ea.cardId + ' .' + qa + ':nth-child(' + (xa + 1) + ')',
                    )
                    if (V['default'].onScreen(Wa, 0)) {
                      var Ua = ea.buildCsmPayload({
                        eventName: ea.clientPrefix + ':thumbnailImpression',
                        intPayload: xa,
                        videoAsin: F[xa].contentId,
                        rankingStrategy: F[xa].metadata.rankingStrategy,
                        titleSessionId: If(),
                      })
                      $b(Ua)
                      mn(Wa, F[xa])
                      F[xa].impressionRecorded = !0
                    } else break
                  }
              },
              aa = function () {
                if (fa) V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, aa)
                else {
                  var qa = ea.buildCsmPayload({
                      eventName: ea.clientPrefix + ':cardWidgetScrolledInView',
                      intPayload: 1,
                      videoAsinList: Z,
                      rankingStrategy: S,
                    }),
                    xa = V['default'].$('.' + ea.cardId + ' .' + y.carouselItemClassName).first(),
                    Wa = function () {
                      if (!fa) {
                        $b(qa)
                        var Jb = V['default'].now() - z
                        Ra('cardWidgetScrolledInViewTime', Jb)
                        Pc('cardWidgetScrolledInView')
                      }
                      fa = !0
                      ia()
                    }
                  if (ea.enableWidgetMetricsAfterOneSecond) {
                    var Ua,
                      Bb = function () {
                        xa && V['default'].onScreen(xa, 0)
                          ? Ua ||
                            (Ua = setTimeout(function () {
                              xa &&
                                V['default'].onScreen(xa, 0) &&
                                (Wa(),
                                V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, Bb))
                            }, 1e3))
                          : Ua && (clearTimeout(Ua), (Ua = null))
                      }
                    Bb()
                  } else xa && V['default'].onScreen(xa, 0) && Wa()
                }
              }
            aa()
            V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, aa)
            V['default'].on('vse:' + ea.clientPrefix + ':searchform:focus', function () {
              var qa = ea.buildCsmPayload({
                eventName: ea.clientPrefix + ':serchFormFocus',
                intPayload: 1,
                videoAsinList: Z,
                rankingStrategy: S,
              })
              $b(qa)
            })
            y.widgetMetricsHandler(ia, function (qa) {
              var xa = ea.buildCsmPayload({
                eventName: ea.clientPrefix + ':' + qa + ':paginationButtonClicked',
                intPayload: 1,
              })
              Ra(qa + ':paginationButtonClicked', 1)
              $b(xa)
            })
            window.IntersectionObserver &&
              window.IntersectionObserverEntry &&
              new kn(null, '.' + y.carouselItemClassName, X, ea.enableWidgetMetricsAfterOneSecond)
          }
        } catch (qa) {
          Ib('Error occurred while emitting widget metrics ' + qa, 'ERROR'),
            Ra('widgetMetricsEmissionError')
        }
      },
      nn = function (z) {
        document.addEventListener(
          'visibilitychange',
          function (F) {
            return z('visible' === document.visibilityState)
          },
          !1,
        )
      },
      mn = function (z, F) {
        try {
          var y = z.find("[data-pfoasin!=''][data-pfoasin]")
          V['default'].each(y, function (fa, Z) {
            fa = fa.getAttribute('data-pfoasin')
            Z = ea.buildCsmPayload({
              eventName: ea.clientPrefix + ':productElementImpression',
              intPayload: Z,
              videoAsin: F.contentId,
              stringPayload: fa,
            })
            $b(Z)
          })
        } catch (fa) {
          Ib('Unable to log pfo render metric ' + F, 'WARN')
        }
      },
      ln = function (z, F) {
        z = ea.buildCsmPayload({
          eventName: ea.clientPrefix + ':videoThumbnailImpression',
          intPayload: ea.isDesktopIngressCXUpdated
            ? Math.max(
                0,
                z.findIndex(function (y) {
                  var fa, Z
                  return (
                    y.contentId ===
                    (null ===
                      (Z =
                        null === (fa = ea.playerInstance) || void 0 === fa
                          ? void 0
                          : fa.getActiveAsset()) || void 0 === Z
                      ? void 0
                      : Z.contentId)
                  )
                }),
              )
            : F,
          videoAsin: z[F].contentId,
          rankingStrategy: z[F].metadata.rankingStrategy,
          titleSessionId: If(),
        })
        $b(z)
      },
      If = function () {
        return ea.playerInstance ? ea.playerInstance.getTitleSessionId() : '0'
      },
      on = function (z, F) {
        var y = []
        z = z.split(',')
        0 < z.length &&
          z.forEach(function (fa) {
            fa = fa.split(':')
            1 < fa.length && y.push({ name: fa[0], assignment: fa[1], ignoreForG2S2Key: F })
          })
        return y
      },
      ti = function (z, F) {
        z = V['default'].$('.' + z + ' ' + F)
        if (!z.length) return ''
        z = z[0].firstElementChild
        if (!z) return ''
        z = z.getAttribute('data-a-popover') || ''
        return JSON.parse(z).name || ''
      },
      Jf = function (z) {
        return rb['default'].cardRoot.querySelector('' + z)
      },
      pn = function (z) {
        var F = document.querySelectorAll('.' + z.thumbnailUpdates + ' .' + z.vseVideoTitleText),
          y = document.querySelectorAll('.' + z.thumbnailUpdates + ' .' + z.vseVideoCreatorName)
        if (0 !== F.length) {
          var fa = function (ia) {
              return parseFloat(window.getComputedStyle(ia).fontSize)
            },
            Z = Array.from(F).map(fa),
            S = function () {
              F.forEach(function (ia, aa) {
                var qa = fa(ia)
                qa !== Z[aa] &&
                  ((Z[aa] = qa),
                  (aa = y[aa]),
                  15 < qa
                    ? ((ia.style.webkitLineClamp = '1'),
                      (ia.style.lineHeight = 'normal'),
                      (aa.style.lineHeight = 'normal'))
                    : ((ia.style.webkitLineClamp = '2'),
                      (ia.style.lineHeight = '1.31em'),
                      (aa.style.lineHeight = 'unset')))
              })
            },
            X = function () {
              S()
              requestAnimationFrame(X)
            }
          X()
        }
      },
      qn = function (z, F) {
        z = '/gp/mobile/tag/?ref=vse_cards_ingress' + z + F.replace('/?_encoding=UTF8', '')
        Hf(
          z,
          {},
          function () {},
          function () {},
        )
      },
      ui = function (z, F, y, fa, Z, S) {
        void 0 === S && (S = !0)
        var X = z.map(function (ia) {
          delete ia.htmlEl
          return ia
        })
        F || (F = ue(z[0], {}))
        z = []
        y.weblabContext && (z = on(y.weblabContext, !0))
        Hf(
          y.nilgiriEndpoint,
          {
            requester: ea.requester,
            clientPrefix: ea.clientPrefix,
            page: ea.pageType,
            placement: ea.placement,
            device: ea.deviceType,
            metadata: {
              id: 'vse-video-widget-card-' + ea.clientPrefix,
              celQueryStringParam: y.celQueryStringParam,
              requestHasVideoData: 'true',
            },
            videoDataList: S ? X : void 0,
            video: {
              contentID: F.contentId,
              contentIDType: 'VIDEO_ID',
              videoURL: F.videoUrl,
              imageURL: F.imageUrl,
              vendorCode: F.vendorCode,
              vendorTrackingId: F.vendorTrackingId,
              videoReferenceId: F.videoReferenceId,
              videoTitle: F.title,
              aciContentId: F.aciContentId,
              videoAge: F.videoAge,
            },
            marketplaceID: y.marketplaceId,
            locale: y.locale,
            product: {
              contentID: F.productAsin,
              contentIDType: 'ASIN',
              parentContentID: F.parentAsin,
              parentContentIDType: 'ASIN',
            },
            creativeId: ea.creativeId,
            weblabContext: z,
          },
          fa,
          Z,
        )
      },
      ue = function (z, F) {
        var y = z.productAsin
        y ||
          V['default'].objectIsEmpty(z.metadata.relatedProductsAsins) ||
          (y = z.metadata.relatedProductsAsins.split(',')[0])
        var fa = z.contentId,
          Z = z.metadata.title,
          S = z.metadata.vendorName,
          X = z.metadata.vendorCode,
          ia = z.metadata.entityId,
          aa = z.metadata.entityType,
          qa = z.metadata.creatorType,
          xa = z.metadata.disclosureText,
          Wa = z.metadata.disclosureLink,
          Ua = z.metadata.disclosureLabel,
          Bb = z.metadata.fullReviewLink,
          Jb = z.metadata.title,
          Na = z.metadata.videoURL,
          Ja = z.metadata.formattedDuration,
          Kb = z.metadata.videoImageUrl,
          db = z.parentAsin,
          Lb = 'vse-cards-ingress' + z.index,
          Qc = z.metadata.relatedProductsAsins,
          ve = z.metadata.vendorTrackingId,
          we = z.metadata.referenceId,
          ac = z.index,
          xe = z.metadata.videoAge,
          Mb = z.metadata.closedCaptions,
          dd = []
        if (Mb && ((Mb = Mb.split(',')), 0 === Mb.length % 2))
          for (var Nb = 0; Nb < Mb.length; Nb += 2)
            void 0 !== Mb[Nb + 1] && dd.push({ locale: Mb[Nb], url: Mb[Nb + 1] })
        Mb = z.metadata.videoDetailPageLink
        Nb = z.impressionRecorded
        var Gd = z.lastPlayingTimestamp,
          ye = z.htmlEl,
          Hd = z.metadata.rankingStrategy,
          ze = z.metadata.aciContentId,
          Id = z.metadata.videoMimeType,
          Ae = z.metadata.profileLink,
          Cc = z.metadata.profileImageUrl,
          Jd = '' === z.metadata.source ? 'VSE' : z.metadata.source,
          Kd = z.metadata.highlightedAsin,
          Be = z.metadata.status,
          Ld = z.metadata.orientation,
          ed = z.metadata.channelId
        z = z.metadata.carouselItems
        var sb = []
        z && (sb = JSON.parse(z))
        return {
          contentId: fa,
          title: Z,
          vendorName: S,
          vendorCode: X,
          entityId: ia,
          entityType: aa,
          creatorType: qa,
          disclosureText: xa,
          disclosureLink: Wa,
          disclosureLabel: Ua,
          referenceUrl: Bb,
          referenceLinkTitle: Jb,
          videoUrl: Na,
          duration: Ja,
          imageUrl: Kb,
          videoVoteContainer: {},
          productAsin: y,
          parentAsin: db,
          refTag: Lb,
          relatedProducts: Qc,
          vendorTrackingId: ve,
          videoReferenceId: we,
          index: ac,
          $el: F,
          videoAge: xe,
          closedCaptions: dd,
          videoDetailPageLink: Mb,
          impressionRecorded: Nb,
          lastPlayingTimestamp: Gd,
          htmlEl: ye,
          rankingStrategy: Hd,
          aciContentId: ze,
          videoMimeType: Id,
          profileLink: Ae,
          profileImageUrl: Cc,
          source: Jd,
          highlightedAsin: Kd,
          status: Be,
          orientation: Ld,
          channelId: ed,
          carouselItems: sb,
        }
      },
      Kf = function (z, F, y) {
        var fa = []
        ;[].forEach.call(z, function (Z, S) {
          var X = Z.dataset.asin,
            ia = Z.dataset
          if (X) {
            Z = {
              contentId: X,
              productAsin: ia.productAsin || '',
              parentAsin: ia.parentAsin || '',
              metadata: vi(ia, X, F),
              impressionRecorded: !1,
              lastPlayingTimestamp: 0,
              index: S,
              htmlEl: Z,
            }
            fa.push(Z)
            S = rb['default'].cardRoot.getElementsByClassName(y.vseVideoDataItem)[S]
            try {
              ia.profileLink &&
                ia.profileImageUrl &&
                S &&
                wi(S, S.querySelector('.' + y.vseProfilePlaceholder), y.vseVideoThumbnailProfile)
            } catch (aa) {
              Ib(
                'Exception has occurred while initializing profiles. Exception details: ' + aa,
                'ERROR',
              ),
                Ra('profileInitializationFailure', 1)
            }
            try {
              '' !== ia.disclosureText &&
                '' !== ia.disclosureLink &&
                S &&
                wi(S, S.querySelector('.' + y.vseVideoCreatorContainer), y.vseVideoDisclosure)
            } catch (aa) {
              Ib(
                'Exception has occurred while moving the disclosure link. Exception details: ' + aa,
                'ERROR',
              ),
                Ra('moveDisclosureElementFailure', 1)
            }
          }
        })
        return fa
      },
      xi = function (z, F, y) {
        var fa = []
        z.forEach(function (Z, S) {
          var X = Z.asin
          X &&
            ((Z = {
              contentId: X,
              productAsin: Z.productAsin || '',
              parentAsin: Z.parentAsin || '',
              metadata: vi(Z, X, F),
              impressionRecorded: !1,
              lastPlayingTimestamp: 0,
              index: S,
              htmlEl: Z,
            }),
            fa.push(Z))
        })
        return fa
      },
      vi = function (z, F, y) {
        return {
          videoImageUrl: z.videoImageUrlUnchanged || z.videoImageUrl || '',
          videoURL: z.videoUrl || z.videoURL || '',
          title: z.title || '',
          formattedDuration: z.formattedDuration || '',
          vendorName: z.vendorName || '',
          vendorCode: z.vendorCode || '',
          referenceId: z.referenceId || '',
          fullReviewLink: z.referenceUrl || z.fullReviewLink || '',
          videoDetailPageLink: z.videoDetailPageLink || 'vdp/' + F + y.celQueryStringParam,
          asin: z.asin || '',
          vendorTrackingId: z.vendorTrackingId || '',
          relatedProductsAsins: z.relatedProductsAsins || '',
          videoAge: z.videoAge || '',
          closedCaptions: z.closedCaptions || '',
          creatorType: z.creatorType || '',
          publicName: z.publicName || '',
          profileLink: z.profileLink || '',
          profileImageUrl: z.profileImageUrl || '',
          rankingStrategy: z.rankingStrategy || '',
          aciContentId: z.csaCItemId || z.aciContentId || '',
          disclosureText: z.disclosureText || '',
          disclosureLabel: z.disclosureLabel || '',
          disclosureLink: z.disclosureLink || '',
          videoMimeType: z.videoMimeType || '',
          entityId: z.entityId || '',
          entityType: z.entityType || '',
          videoImageHeight: z.videoImageHeight || '',
          videoImageWidth: z.videoImageWidth || '',
          videoImagePhysicalId: z.videoImagePhysicalId || '',
          videoImageExtension: z.videoImageExtension || '',
          groupType: z.groupType || '',
          source: z.source || 'VSE',
          highlightedAsin: z.highlightedAsin || '',
          status: z.status || '',
          orientation: z.orientation || '',
          channelId: z.channelId || '',
          carouselItems: z.carouselItems || '',
          isHotspotsEligible: z.isHotspotsEligible || !1,
        }
      },
      wi = function (z, F, y) {
        z = z.querySelector('.' + y)
        F &&
          z &&
          z.parentNode &&
          (F.appendChild(z.cloneNode(!0)),
          z.parentNode.removeChild(z),
          (F = F.querySelector('.' + y)) && F.classList.remove('aok-hidden'))
      },
      yi = function (z, F) {
        void 0 === F && (F = !1)
        var y = Bc['default'].innerHeight * (400 <= z.height() ? 0.1 : 0.2),
          fa = Bc['default'].innerHeight - z.height() - y
        if (F)
          try {
            var Z = z[0].getBoundingClientRect()
            if (0 >= Z.width || 0 >= Z.height) var S = !1
            else
              (F = void 0),
                (F =
                  0 < Z.top
                    ? Math.min(z.outerHeight(), Bc['default'].innerHeight - Z.top)
                    : Math.min(Z.bottom, Bc['default'].innerHeight)),
                (F = Math.max(0, F)),
                (S = F >= 0.5 * z.outerHeight())
          } catch (X) {
            S = !1
          }
        else
          S =
            Bc['default'].scrollY + fa >= z.offset().top &&
            Bc['default'].scrollY + y <= z.offset().top
        return S
      },
      Ce = function () {
        return Bc['default'].innerWidth > Bc['default'].innerHeight
      },
      Ob,
      De = !1,
      Md,
      Lf,
      rc,
      hb,
      fd,
      Mf = !1,
      Nf,
      Nd,
      gd,
      sc,
      ic,
      bc,
      Of,
      jc,
      Ee = !1,
      Pf = !0,
      zi = !1,
      Qf,
      Rf = 0,
      Ai,
      Fe,
      Bi,
      Ci = null,
      Sf = !1,
      wn = function (z, F, y, fa, Z, S, X, ia, aa) {
        void 0 === Z && (Z = !1)
        void 0 === S && (S = !0)
        void 0 === X && (X = !1)
        void 0 === ia && (ia = void 0)
        void 0 === aa && (aa = null)
        return nb.__awaiter(void 0, void 0, void 0, function () {
          var qa, xa, Wa, Ua
          return nb.__generator(this, function (Bb) {
            try {
              if (
                ((fd = y),
                (hb = F),
                (rc = z),
                (Ee = Z),
                (Pf = S),
                (zi = X),
                (qa = V['default'].now()),
                oi('vse.VSECardsEvents.8', 'vsemetrics_widgetcards'),
                0 <
                V['default'].$('.vse-video-thumbnail-wrapper .vse-video-thumbnail-preview').length
                  ? ((Fe = V['default'].$(
                      '.vse-video-thumbnail-wrapper .vse-video-thumbnail-preview',
                    )),
                    V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, Tf),
                    Tf())
                  : 0 < V['default'].$('.vse-image-thumbnail-wrapper').length &&
                    (V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, Uf), Uf()),
                pn(hb),
                (xa = rb['default'].cardRoot.getElementsByClassName(hb.vseWidgetPageState)) &&
                  xa[0] &&
                  xa[0].dataset)
              ) {
                ic = xa[0].dataset
                Sf = 'true' === ic.lazyLoadComponentBuilderCall
                qi(ic, rc ? 'Mobile' : 'Desktop', ia)
                ea.isDesktopIngressCXUpdated
                  ? ((Ai = aa),
                    V['default']
                      .$('.' + ea.cardId + ' .a-fixed-right-grid-inner')
                      .addClass(hb.vseFlex),
                    (Bi = rb['default'].cardRoot.querySelector('.video-items-metadata')),
                    (Wa = Bi.getAttribute('data-video-items')) && (Of = JSON.parse(Wa)),
                    (Ob = xi(Of, ic, hb)),
                    V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, Vf),
                    Vf())
                  : ((bc = rb['default'].cardRoot.getElementsByClassName(hb.vseVideoDataItem)),
                    (Ob = Kf(bc, ic, hb)))
                if (!bc && !Of) return Ra('noCardsIngressDom'), hd(), [2]
                Nf = 'vse-component-feed-carousel-' + ea.cardId
                gd = 'vse-widget-popover-' + ea.cardId
                if (!V['default'].capabilities.video) return Ra('videoNotSupported'), [2]
                Pc('cardWidgetRendered')
                ri(void 0, Ob[0].productAsin ? Ob[0].productAsin : '')
                if (rc || 'Detail' === ea.pageType) si(qa, Ob, fa)
                else {
                  V['default']
                    .$('.' + ea.cardId + ' [class*=vsePlaceholder] .a-fixed-right-grid-inner')
                    .addClass(hb.vseNoRightPadding)
                  Bb = qa
                  try {
                    Di(Bb, fa, 'vse-carousel-items-added-' + Nf),
                      Di(Bb, fa, 'vse:cards:' + ea.clientPrefix + ':quad:ready')
                  } catch (Jb) {
                    Wf(Jb)
                  }
                  V['default'].trigger('vse-card-ready-' + Nf)
                }
                ;(Ua =
                  V['default'].capabilities.isAmazonApp &&
                  V['default'].capabilities.android &&
                  (V['default'].capabilities.androidVersion + '').startsWith('8'))
                  ? (Ra('useMshopAutoplayFallback'), hd())
                  : (rn(), sn(), tn(), un(), vn())
                'gatewayquad' === ea.clientPrefix &&
                  V['default'].trigger('vse:cards:' + ea.clientPrefix + ':quad:ready')
                Ee && !Sf && (Xf(null, V['default'].now()), ea.isDesktopIngressCXUpdated || Yf())
              } else Ra('pageStateNotFound'), hd()
            } catch (Jb) {
              Ib('fatal exception has occurred. Exception details: ' + Jb, 'FATAL'),
                Ra('widgetFatalException'),
                hd()
            }
            return [2]
          })
        })
      },
      Vf = function () {
        V['default'].onScreen(V['default'].$('.' + ea.cardId + ' .vse-hero-widget'), 100) &&
          (xn(), V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, Vf))
      },
      yn = function () {
        V['default'].on(ea.clientPrefix + ':vse:metadata:registered', function () {
          jc = ue(Ob[0], null)
          V['default'].trigger('vse:' + ea.clientPrefix + ':page:lightBoxOpened', {
            assetSpec: jc,
            showHeroExperience: !0,
            player: Ai,
            templateId: 'vftphero',
            lightBoxId: 'vftphero',
          })
        })
      },
      Di = function (z, F, y) {
        V['default'].off(y)
        V['default'].on(y, function () {
          De || ((De = !0), (Ob = Kf(bc, ic, hb)), si(z, Ob, F))
        })
      },
      sn = function (z) {
        void 0 === z && (z = 'click touch')
        V['default'].declarative('vse-widget-carousel-see-more-' + ea.cardId, z, function () {
          return Ei()
        })
        V['default'].declarative('vse-widget-carousel-custom-action-' + ea.cardId, z, function (F) {
          var y
          ;(F = null === (y = F.data) || void 0 === y ? void 0 : y.link)
            ? (Fi('widgetCustomActionClicked'), ki['default'].setLocation(F))
            : Ei()
        })
      },
      Ei = function () {
        rc && (Mf = !0)
        V['default']
          .$('.' + ea.cardId + ' .vse-cards-ingress-carousel')
          .find('.vse-carousel-item')
          .first()
          .click()
        Fi('seeMoreLinkClicked')
      },
      Fi = function (z) {
        Pc(z)
        z = ea.buildCsmPayload({ eventName: ea.clientPrefix + ':' + z, intPayload: 1 })
        $b(z)
      },
      tn = function () {
        var z = 0
        V['default'].off('a:popover:afterShow:vse-widget-popover-' + ea.cardId)
        V['default'].on('a:popover:afterShow:vse-widget-popover-' + ea.cardId, function (F) {
          try {
            if (
              (V['default']
                .$(F.popover.$popover)
                .addClass(V['default'].$('#' + gd).data('cssClass')),
              z++,
              (Lf = !0),
              1 === z)
            ) {
              V['default'].$(F.popover.$popover).addClass(hb.vseVerticalLightbox)
              var y = V['default'].now()
              sc && sc.refresh()
              Ee && Md
                ? (V['default'].$(F.popover.$popover).addClass(hb.vseRemoveAbsolute), Zf())
                : (Xf(F.popover.$popover, y), Yf())
            } else Zf()
          } catch (fa) {
            Wf(fa)
          }
        })
      },
      Xf = function (z, F) {
        V['default'].on(ea.clientPrefix + ':vse:player:registered', function () {
          V['default']
            .$('#' + gd + ' [class*=_vseWidgetLbVideoBlock_]')
            .first()
            .animate({ opacity: 1 })
          if (Lf) {
            Zf()
            V['default'].$(z).addClass(hb.vseRemoveAbsolute)
            var y = V['default'].now() - F
            Pc('cardWidgetPopoverContentWaitTime', y)
          }
        })
        V['default'].on('vse:cards:' + ea.clientPrefix + ':componentbuilder:failed', function () {
          Gi()
          sc ? sc.hide() : V['default'].trigger('vse:cards:' + ea.cardId + ':secondary:view:close')
          Ee ||
            V['default'].delay(function () {
              ki['default'].setLocation(jc.videoDetailPageLink)
            }, 500)
        })
      },
      Zf = function () {
        Mf && V['default'].trigger('vse:' + ea.clientPrefix + ':page:watchAllClicked')
        Mf = !1
        var z = { assetSpec: jc, lightBoxId: '' + gd }
        !0 === zi &&
          Ci !== jc.contentId &&
          ((Ci = jc.contentId), (z.lazyLoadProductAsin = jc.productAsin))
        V['default'].trigger('vse:' + ea.clientPrefix + ':page:lightBoxOpened', z)
        z = V['default'].$('#' + gd + ' [class*=_vseWidgetLbVideoBlock_]')
        0 < z.length && ((Nd = z.get(0)), null != fd && (zn(Nd), fd.elect(Nd)))
      },
      un = function () {
        V['default'].off('a:popover:beforeHide:vse-widget-popover-' + ea.cardId)
        V['default'].on('a:popover:beforeHide:vse-widget-popover-' + ea.cardId, function () {
          Lf = !1
          Md
            ? (V['default'].trigger('vse:' + ea.clientPrefix + ':page:lightBoxClosed'),
              null != fd && Nd && fd.unsubscribe(Nd))
            : Pc('cardWidgetLBClosedBeforeAjax')
        })
      },
      Yf = function () {
        ui(
          Ob,
          jc,
          ic,
          function (z) {
            Md = !0
            Ra('preloadSuccess')
            V['default'].$('#' + gd + ' [class*=_vseWidgetLbVideoBlock_]').html(z.responseBody)
          },
          function (z) {
            Hi(z)
          },
          Pf,
        )
      },
      xn = function () {
        ui(
          Ob,
          jc,
          ic,
          function (z) {
            Md = !0
            Ra('preloadSuccess')
            var F = rb['default'].cardRoot.querySelector('#vse-placeholder-related-videos')
            F.classList.remove(hb.skeletalVideo)
            for (ea.isSingleVideoPresent && F.classList.add('aok-hidden'); F.firstChild; )
              F.removeChild(F.firstChild)
            V['default'].$('.' + ea.cardId + ' .' + hb.vseWidgetPageState).html(z.responseBody)
            yn()
            $f('vftphero-vse-related-videos', 'vse-placeholder-related-videos')
            $f('vse-vftphero-feedback-container', 'vse-overlay-features')
            $f('ive-vftphero-action-share', 'vse-overlay-features')
            Ii(ti(ea.cardId, '#ive-vftphero-action-share'))
            Ii(ti(ea.cardId, '.vse-fb-trigger-container'))
            An()
          },
          function (z) {
            var F, y, fa
            null === (F = Jf('#vse-placeholder-related-videos')) || void 0 === F
              ? void 0
              : F.classList.add('aok-hidden')
            null === (y = Jf('#vse-placeholder-related-products-config')) || void 0 === y
              ? void 0
              : y.classList.add('aok-hidden')
            ea.isSingleVideoPresent ||
              ((F = rb['default'].cardRoot.querySelector('.' + hb.iveHeroRowGrid)),
              null === F || void 0 === F ? void 0 : F.style.setProperty('margin-right', '-336px'))
            null === (fa = Jf('.vse-hero-widget')) || void 0 === fa
              ? void 0
              : fa.style.setProperty('height', '415px')
            Hi(z)
          },
          Pf,
        )
      },
      Ii = function (z) {
        rb['default'].cardRoot.querySelector('#vse-overlay-features')
        V['default'].off('a:popover:show:' + z)
        V['default'].on('a:popover:show:' + z, function (F) {
          ea.isHeroPopoverVisible = !0
          V['default'].$('.' + ea.cardId + ' #ive-hero-video-player').addClass('ppvr-vsbl')
        })
        V['default'].off('a:popover:hide:' + z)
        V['default'].on('a:popover:hide:' + z, function () {
          ea.isHeroPopoverVisible = !1
          V['default'].$('.' + ea.cardId + ' #ive-hero-video-player').removeClass('ppvr-vsbl')
        })
      },
      An = function () {
        V['default']
          .$('.' + ea.cardId)
          .delegate('#ive-hero-video-player', 'mouseenter', function () {
            Ra('hoverIntoPlayer')
          })
        V['default']
          .$('.' + ea.cardId)
          .delegate('#ive-hero-video-player', 'mouseleave', function () {
            ea.showSocialShare || Ra('hoverOutOfThePlayer')
          })
      },
      $f = function (z, F) {
        F = rb['default'].cardRoot.querySelector('#' + F)
        z = V['default'].$('.' + ea.cardId + ' #' + z)
        z.length && F && F.prepend(z[0])
      },
      Hi = function (z) {
        V['default'].trigger('vse:cards:' + ea.clientPrefix + ':componentbuilder:failed')
        Pc('preloadFailed')
        Ra('preloadFailed:' + z.statusCode)
        hd()
      },
      hd = function () {
        var z = rb['default'].cardRoot.getElementsByClassName(hb.vseSeeMoreLink)[0]
        z && z.classList && z.classList.add('aok-hidden')
      },
      rn = function () {
        try {
          bc &&
            0 < bc.length &&
            [].forEach.call(bc, function (z) {
              z.children[0].removeAttribute('target')
            }),
            Ji(),
            V['default']
              .$('.' + ea.cardId + ' .vse-cards-ingress-carousel')
              .delegate('.vse-carousel-item', 'click', function (z) {
                De || ((Ob = Kf(bc, ic, hb)), (De = !0))
                if (!V['default'].$(z.target).closest('.' + hb.vseProfilePlaceholder).length) {
                  z.preventDefault()
                  var F = V['default'].$(z.currentTarget)
                  z = F.closest('li').index()
                  var y = Ob[z]
                  y.metadata &&
                    ((jc = ue(y, F)),
                    (F = ea.buildCsmPayload({
                      eventName: ea.clientPrefix + ':cardWidgetClicked',
                      intPayload: 1,
                      videoAsin: y.contentId,
                      rankingStrategy: y.metadata.rankingStrategy,
                    })),
                    Pc('cardWidgetClicked'),
                    $b(F),
                    qn(z, ic.celQueryStringParam),
                    rc
                      ? V['default'].trigger('vse:cards:' + ea.cardId + ':secondary:view:open')
                      : ((sc = fn['default'].get(
                          V['default'].$('.' + ea.cardId + ' #vse-widget-popover-trigger'),
                        )),
                        V['default'].objectIsEmpty(sc) ? Ra('lbNotFoundDesktop') : sc.show()))
                }
              })
        } catch (z) {
          Wf(z)
        }
      },
      Wf = function (z) {
        Ib('fatal exception has occurred in LB. Exception details: ' + z, 'FATAL')
        Ra('lightboxOpenFatalException')
        hd()
        Gi()
        sc && sc.hide()
      },
      Gi = function () {
        Ji()
        bc &&
          0 < bc.length &&
          [].forEach.call(bc, function (z, F) {
            z.children &&
              z.children[0] &&
              z.children[0].setAttribute('target', Ob[F].metadata.videoDetailPageLink)
          })
      },
      Ji = function () {
        V['default']
          .$('.' + ea.cardId + ' .vse-cards-ingress-carousel')
          .undelegate('.vse-carousel-item', 'click')
      },
      zn = function (z) {
        fd.subscribe(z, function (F) {}, { buffer: 0 })
      },
      vn = function () {
        V['default'].on(ea.clientPrefix + '-leave-pip', function (z) {
          V['default']
            .$('.' + ea.cardId + ' .vse-cards-ingress-carousel .vse-carousel-item')
            [z.index].click()
        })
      },
      Ki = function (z, F) {
        Qf[F] ||
          ((z = ea.buildCsmPayload({
            eventName: ea.clientPrefix + ':thumbnailPreviewPlaybackStart',
            intPayload: F,
            videoAsin: z,
          })),
          void 0 !== z && null !== z && ($b(z), (Qf[F] = !0)))
      },
      Uf = function () {
        V['default'].onScreen(V['default'].$('.vse-image-thumbnail-wrapper'), 100) &&
          (V['default'].loadImageManually('.vse-img-manual-load:not(img)'),
          V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, Uf))
      },
      Tf = function () {
        V['default'].onScreen(V['default'].$('.vse-video-thumbnail-wrapper'), 100) &&
          (V['default'].loadImageManually('.vse-img-manual-load:not(img)'),
          Sf && !Md && (Xf(null, V['default'].now()), Yf()),
          V['default'].each(Fe, function (z) {
            var F = z.getAttribute('data-src')
            var y = void 0
            void 0 === y && (y = 1)
            y = 3 * (y - 1)
            F = F.split(',')[y]
            z.src = F
            z.addEventListener('ended', Bn)
          }),
          V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, Tf),
          (Qf = Array(Fe.length).fill(!1)),
          rc || Cn(),
          Dn(),
          V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, Od),
          Od())
      },
      Cn = function () {
        V['default']
          .$('.vse-video-widget-container')
          .delegate('.vse-desktop-carousel-card', 'mouseenter', function () {
            Ge()
            var z = V['default'].$(this).find('video'),
              F = V['default'].$(this).find('.vse-video-thumbnail-img')
            Li(F)
            0 < z.length &&
              (z[0].play(),
              (F = V['default'].$(this).closest('li').index()),
              Ki(z[0].getAttribute('data-video-asin'), F),
              (Rf = 0))
          })
        V['default']
          .$('.vse-video-widget-container')
          .delegate('.vse-desktop-carousel-card', 'mouseleave', function () {
            var z = V['default'].$(this).find('.vse-video-thumbnail-img')
            ag(z)
            z = V['default'].$(this).find('video')
            0 < z.length && bg(z[0])
          })
      },
      ag = function (z) {
        z && 0 < z.length && V['default'].fadeIn(z, 300, 'ease-in')
      },
      Li = function (z) {
        z && 0 < z.length && V['default'].fadeOut(z, 300, 'ease-in')
      },
      Mi = function (z) {
        z = V['default'].$('.vse-video-widget-container ol li').eq(z)
        if (!z || 0 != z.length) return V['default'].$(z).find('video')[0]
      },
      Ni = function (z) {
        z = V['default'].$('.vse-video-widget-container ol li').eq(z)
        if (!z || 0 != z.length) return V['default'].$(z).find('.vse-video-thumbnail-img')
      },
      dg = function (z) {
        var F = Mi(z)
        if (F) {
          var y = Ni(z)
          Li(y)
          F.play()
            .then()
            .catch(function () {
              V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, Od)
              V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, cg)
              Ge(!0)
            })
          Rf = z
          Ki(F.getAttribute('data-video-asin'), z)
        }
      },
      Od = function () {
        var z = V['default'].$('.vse-video-widget-container')
        if (
          0 < z.length &&
          ((!Ce() && V['default'].onScreen(z) && yi(z)) || (Ce() && V['default'].onScreen(z)))
        ) {
          V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, Od)
          V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, cg)
          z = rc ? Oi() : Rf
          var F = Mi(z)
          if (!F || F.paused) Ge(), dg(z)
        }
      },
      cg = function () {
        var z = V['default'].$('.vse-video-widget-container')
        0 != z.length &&
          ((!yi(z) && !Ce()) || (Ce() && !V['default'].onScreen(z))) &&
          (V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, Od),
          V['default'].off(V['default'].constants.BROWSER_EVENTS.SCROLL, cg))
      },
      Ge = function (z) {
        void 0 === z && (z = !1)
        V['default'].each(Fe, function (F) {
          if (0 !== F.currentTime || z) {
            var y = V['default']
              .$(F)
              .closest('.vse-video-thumbnail-wrapper')
              .find('.vse-video-thumbnail-img')
            ag(y)
            bg(F)
          }
        })
      },
      bg = function (z) {
        setTimeout(function () {
          z.currentTime = 0
          z.load()
        }, 300)
      },
      Oi = function () {
        var z = 0
        try {
          var F = V['default'].$('.vse-video-widget-container'),
            y = parseInt(F.find('li').css('width').replace('px', '')) + 8,
            fa = F.find('ol').css('-webkit-transform').split(/[()]/)[1],
            Z = Math.abs(parseInt(fa.split(',')[4]))
          z = Math.round(Z / y)
        } catch (S) {
          Ib(
            'Error has occurred while finding the current focussed Element. Exception details: ' +
              S,
            'ERROR',
          )
        }
        return z
      },
      Bn = function (z) {
        try {
          var F = z.target.closest('li')
          bg(z.target)
          var y = V['default'].$(F).index() + 1
          z = 0
          try {
            var fa = V['default'].$('.vse-video-widget-container'),
              Z = parseInt(fa.find('li').css('width').replace('px', '')),
              S = rc
                ? V['default'].$(window).width()
                : V['default'].$('.vse-video-widget-container .a-carousel-viewport').width()
            z = Math.floor(S / (Z + 8))
          } catch (xa) {
            Ib(
              'Error has occurred while finding the no of Thumbnails on screen. Exception details: ' +
                xa,
              'ERROR',
            )
          }
          var X = z
          var ia = Math.ceil(y / X),
            aa = Math.ceil((y + 1) / X),
            qa = Ni(y - 1)
          ag(qa)
          ia === aa && dg(y)
        } catch (xa) {
          Ib('Error has occurred while playing the next preview. Exception details: ' + xa, 'ERROR')
        }
      },
      Dn = function () {
        var z = V['default'].$('.vse-cards-carousel-container')
        hn['default'].getCarousel(z).on('change:pageNumber', function () {
          Ge()
          setTimeout(
            function () {
              dg(Oi())
            },
            rc ? 100 : 310,
          )
        })
      },
      Pi =
        'undefined' !== typeof globalThis
          ? globalThis
          : 'undefined' !== typeof window
            ? window
            : 'undefined' !== typeof global
              ? global
              : 'undefined' !== typeof self
                ? self
                : {},
      is = (function (z) {
        return z && z.__esModule && Object.prototype.hasOwnProperty.call(z, 'default')
          ? z['default']
          : z
      })(
        (function (z, F, y) {
          return (
            (y = {
              path: F,
              exports: {},
              require: function (fa, Z) {
                throw Error(
                  'Dynamic requires are not currently supported by @rollup/plugin-commonjs',
                )
              },
            }),
            z(y, y.exports),
            y.exports
          )
        })(function (z) {
          function F(h) {
            return h && h.__esModule && Object.prototype.hasOwnProperty.call(h, 'default')
              ? h['default']
              : h
          }
          function y(h, d) {
            return (d = { exports: {} }), h(d, d.exports), d.exports
          }
          function fa(h) {
            var d = 'info',
              c = function () {
                for (var a = arguments.length, e = Array(a), n = 0; n < a; n++) e[n] = arguments[n]
                b('log', d, e)
              }
            var b = En(h, c)
            c.createLogger = function (a) {
              return fa(h + ': ' + a)
            }
            c.levels = {
              all: 'debug|log|warn|error',
              off: '',
              debug: 'debug|log|warn|error',
              info: 'log|warn|error',
              warn: 'warn|error',
              error: 'error',
              DEFAULT: d,
            }
            c.level = function (a) {
              if ('string' === typeof a) {
                if (!c.levels.hasOwnProperty(a)) throw Error('"' + a + '" in not a valid log level')
                d = a
              }
              return d
            }
            c.history = function () {
              return Cb ? [].concat(Cb) : []
            }
            c.history.filter = function (a) {
              return (Cb || []).filter(function (e) {
                return new RegExp('.*' + a + '.*').test(e[0])
              })
            }
            c.history.clear = function () {
              Cb && (Cb.length = 0)
            }
            c.history.disable = function () {
              null !== Cb && ((Cb.length = 0), (Cb = null))
            }
            c.history.enable = function () {
              null === Cb && (Cb = [])
            }
            c.error = function () {
              for (var a = arguments.length, e = Array(a), n = 0; n < a; n++) e[n] = arguments[n]
              return b('error', d, e)
            }
            c.warn = function () {
              for (var a = arguments.length, e = Array(a), n = 0; n < a; n++) e[n] = arguments[n]
              return b('warn', d, e)
            }
            c.debug = function () {
              for (var a = arguments.length, e = Array(a), n = 0; n < a; n++) e[n] = arguments[n]
              return b('debug', d, e)
            }
            return c
          }
          function Z(h, d) {
            Qi(h).forEach(function (c) {
              return d(h[c], c)
            })
          }
          function S(h, d, c) {
            void 0 === c && (c = 0)
            return Qi(h).reduce(function (b, a) {
              return d(b, h[a], a)
            }, c)
          }
          function X(h) {
            for (var d = arguments.length, c = Array(1 < d ? d - 1 : 0), b = 1; b < d; b++)
              c[b - 1] = arguments[b]
            if (Object.assign) return He.apply(void 0, [h].concat(c))
            c.forEach(function (a) {
              a &&
                Z(a, function (e, n) {
                  h[n] = e
                })
            })
            return h
          }
          function ia(h) {
            return !!h && 'object' === typeof h
          }
          function aa(h) {
            return ia(h) && '[object Object]' === Fn.call(h) && h.constructor === Object
          }
          function qa(h, d) {
            return h && d
              ? 'function' === typeof ca.getComputedStyle
                ? (h = ca.getComputedStyle(h))
                  ? h.getPropertyValue(d) || h[d]
                  : ''
                : ''
              : ''
          }
          function xa(h) {
            if (0 <= h.indexOf(' ')) throw Error('class has illegal whitespace characters')
          }
          function Wa() {
            return pa === ca.document
          }
          function Ua(h) {
            return ia(h) && 1 === h.nodeType
          }
          function Bb() {
            try {
              return ca.parent !== ca.self
            } catch (h) {
              return !0
            }
          }
          function Jb(h) {
            return function (d, c) {
              if ('string' !== typeof d || !d.trim()) return pa[h](null)
              'string' === typeof c && c.trim() && (c = pa.querySelector(c))
              c = Ua(c) ? c : pa
              return c[h] && c[h](d)
            }
          }
          function Na(h, d, c, b) {
            void 0 === h && (h = 'div')
            void 0 === d && (d = {})
            void 0 === c && (c = {})
            var a = pa.createElement(h)
            Object.getOwnPropertyNames(d).forEach(function (e) {
              var n = d[e]
              if (-1 !== e.indexOf('aria-') || 'role' === e || 'type' === e)
                Ea.warn(
                  'Setting attributes in the second argument of createEl()\nhas been deprecated. Use the third argument instead.\ncreateEl(type, properties, attributes). Attempting to set ' +
                    (e + ' to ' + n + '.'),
                ),
                  a.setAttribute(e, n)
              else if ('textContent' === e) Ja(a, n)
              else if (a[e] !== n || 'tabIndex' === e) a[e] = n
            })
            Object.getOwnPropertyNames(c).forEach(function (e) {
              a.setAttribute(e, c[e])
            })
            b && Id(a, b)
            return a
          }
          function Ja(h, d) {
            'undefined' === typeof h.textContent ? (h.innerText = d) : (h.textContent = d)
            return h
          }
          function Kb(h, d) {
            d.firstChild ? d.insertBefore(h, d.firstChild) : d.appendChild(h)
          }
          function db(h, d) {
            xa(d)
            return h.classList
              ? h.classList.contains(d)
              : new RegExp('(^|\\s)' + d + '($|\\s)').test(h.className)
          }
          function Lb(h, d) {
            h.classList
              ? h.classList.add(d)
              : db(h, d) || (h.className = (h.className + ' ' + d).trim())
            return h
          }
          function Qc(h, d) {
            h.classList
              ? h.classList.remove(d)
              : (xa(d),
                (h.className = h.className
                  .split(/\s+/)
                  .filter(function (c) {
                    return c !== d
                  })
                  .join(' ')))
            return h
          }
          function ve(h, d, c) {
            var b = db(h, d)
            'function' === typeof c && (c = c(h, d))
            'boolean' !== typeof c && (c = !b)
            if (c !== b) return c ? Lb(h, d) : Qc(h, d), h
          }
          function we(h, d) {
            Object.getOwnPropertyNames(d).forEach(function (c) {
              var b = d[c]
              null === b || 'undefined' === typeof b || !1 === b
                ? h.removeAttribute(c)
                : h.setAttribute(c, !0 === b ? '' : b)
            })
          }
          function ac(h) {
            var d = {}
            if (h && h.attributes && 0 < h.attributes.length)
              for (var c = h.attributes, b = c.length - 1; 0 <= b; b--) {
                var a = c[b].name,
                  e = c[b].value
                if (
                  'boolean' === typeof h[a] ||
                  -1 !==
                    ',autoplay,controls,playsinline,loop,muted,default,defaultMuted,'.indexOf(
                      ',' + a + ',',
                    )
                )
                  e = null !== e ? !0 : !1
                d[a] = e
              }
            return d
          }
          function xe() {
            pa.body.focus()
            pa.onselectstart = function () {
              return !1
            }
          }
          function Mb() {
            pa.onselectstart = function () {
              return !0
            }
          }
          function dd(h) {
            if (h && h.getBoundingClientRect && h.parentNode) {
              var d = h.getBoundingClientRect(),
                c = {}
              'bottom height left right top width'.split(' ').forEach(function (b) {
                void 0 !== d[b] && (c[b] = d[b])
              })
              c.height || (c.height = parseFloat(qa(h, 'height')))
              c.width || (c.width = parseFloat(qa(h, 'width')))
              return c
            }
          }
          function Nb(h) {
            if (!h || (h && !h.offsetParent)) return { left: 0, top: 0, width: 0, height: 0 }
            for (
              var d = h.offsetWidth, c = h.offsetHeight, b = 0, a = 0;
              h.offsetParent && h !== pa[Ie.fullscreenElement];

            )
              (b += h.offsetLeft), (a += h.offsetTop), (h = h.offsetParent)
            return { left: b, top: a, width: d, height: c }
          }
          function Gd(h, d) {
            var c = 0,
              b = 0
            if (Pb)
              for (var a = h; a && 'html' !== a.nodeName.toLowerCase(); ) {
                var e = qa(a, 'transform')
                ;/^matrix/.test(e)
                  ? ((e = e.slice(7, -1).split(/,\s/).map(Number)), (c += e[4]), (b += e[5]))
                  : /^matrix3d/.test(e) &&
                    ((e = e.slice(9, -1).split(/,\s/).map(Number)), (c += e[12]), (b += e[13]))
                a = a.parentNode
              }
            a = {}
            e = Nb(d.target)
            h = Nb(h)
            var n = h.width,
              q = h.height,
              t = d.offsetY - (h.top - e.top)
            e = d.offsetX - (h.left - e.left)
            d.changedTouches &&
              ((e = d.changedTouches[0].pageX - h.left),
              (t = d.changedTouches[0].pageY + h.top),
              Pb && ((e -= c), (t -= b)))
            a.y = 1 - Math.max(0, Math.min(1, t / q))
            a.x = Math.max(0, Math.min(1, e / n))
            return a
          }
          function ye(h) {
            return ia(h) && 3 === h.nodeType
          }
          function Hd(h) {
            for (; h.firstChild; ) h.removeChild(h.firstChild)
            return h
          }
          function ze(h) {
            'function' === typeof h && (h = h())
            return (Array.isArray(h) ? h : [h])
              .map(function (d) {
                'function' === typeof d && (d = d())
                if (Ua(d) || ye(d)) return d
                if ('string' === typeof d && /\S/.test(d)) return pa.createTextNode(d)
              })
              .filter(function (d) {
                return d
              })
          }
          function Id(h, d) {
            ze(d).forEach(function (c) {
              return h.appendChild(c)
            })
            return h
          }
          function Ae(h, d) {
            return Id(Hd(h), d)
          }
          function Cc(h) {
            return (void 0 === h.button && void 0 === h.buttons) ||
              (0 === h.button && void 0 === h.buttons) ||
              ('mouseup' === h.type && 0 === h.button && 0 === h.buttons)
              ? !0
              : 0 !== h.button || 1 !== h.buttons
                ? !1
                : !0
          }
          function Jd(h, d) {
            d && (eg = d)
            ca.setTimeout(Gn, h)
          }
          function Kd() {
            Ri = !0
            ca.removeEventListener('load', Kd)
          }
          function Be(h, d) {
            if (vb.has(h)) {
              var c = vb.get(h)
              0 === c.handlers[d].length &&
                (delete c.handlers[d],
                h.removeEventListener
                  ? h.removeEventListener(d, c.dispatcher, !1)
                  : h.detachEvent && h.detachEvent('on' + d, c.dispatcher))
              0 >= Object.getOwnPropertyNames(c.handlers).length &&
                (delete c.handlers, delete c.dispatcher, delete c.disabled)
              if (0 === Object.getOwnPropertyNames(c).length) vb['delete'](h)
            }
          }
          function Ld(h, d, c, b) {
            c.forEach(function (a) {
              h(d, a, b)
            })
          }
          function ed(h) {
            function d() {
              return !0
            }
            function c() {
              return !1
            }
            if (h.fixed_) return h
            if (!h || !h.isPropagationStopped) {
              var b = h || ca.event
              h = {}
              for (var a in b)
                'layerX' !== a &&
                  'layerY' !== a &&
                  'keyLocation' !== a &&
                  'webkitMovementX' !== a &&
                  'webkitMovementY' !== a &&
                  (('returnValue' === a && b.preventDefault) || (h[a] = b[a]))
              h.target || (h.target = h.srcElement || pa)
              h.relatedTarget ||
                (h.relatedTarget = h.fromElement === h.target ? h.toElement : h.fromElement)
              h.preventDefault = function () {
                b.preventDefault && b.preventDefault()
                h.returnValue = !1
                b.returnValue = !1
                h.defaultPrevented = !0
              }
              h.defaultPrevented = !1
              h.stopPropagation = function () {
                b.stopPropagation && b.stopPropagation()
                h.cancelBubble = !0
                b.cancelBubble = !0
                h.isPropagationStopped = d
              }
              h.isPropagationStopped = c
              h.stopImmediatePropagation = function () {
                b.stopImmediatePropagation && b.stopImmediatePropagation()
                h.isImmediatePropagationStopped = d
                h.stopPropagation()
              }
              h.isImmediatePropagationStopped = c
              if (null !== h.clientX && void 0 !== h.clientX) {
                a = pa.documentElement
                var e = pa.body
                h.pageX =
                  h.clientX +
                  ((a && a.scrollLeft) || (e && e.scrollLeft) || 0) -
                  ((a && a.clientLeft) || (e && e.clientLeft) || 0)
                h.pageY =
                  h.clientY +
                  ((a && a.scrollTop) || (e && e.scrollTop) || 0) -
                  ((a && a.clientTop) || (e && e.clientTop) || 0)
              }
              h.which = h.charCode || h.keyCode
              null !== h.button &&
                void 0 !== h.button &&
                (h.button = h.button & 1 ? 0 : h.button & 4 ? 1 : h.button & 2 ? 2 : 0)
            }
            h.fixed_ = !0
            return h
          }
          function sb(h, d, c) {
            if (Array.isArray(d)) return Ld(sb, h, d, c)
            vb.has(h) || vb.set(h, {})
            var b = vb.get(h)
            b.handlers || (b.handlers = {})
            b.handlers[d] || (b.handlers[d] = [])
            c.guid || (c.guid = Dc++)
            b.handlers[d].push(c)
            b.dispatcher ||
              ((b.disabled = !1),
              (b.dispatcher = function (a, e) {
                if (!b.disabled) {
                  a = ed(a)
                  var n = b.handlers[a.type]
                  if (n) {
                    n = n.slice(0)
                    for (var q = 0, t = n.length; q < t && !a.isImmediatePropagationStopped(); q++)
                      try {
                        n[q].call(h, a, e)
                      } catch (v) {
                        Ea.error(v)
                      }
                  }
                }
              }))
            1 === b.handlers[d].length &&
              (h.addEventListener
                ? ((c = !1),
                  Hn() && -1 < In.indexOf(d) && (c = { passive: !0 }),
                  h.addEventListener(d, b.dispatcher, c))
                : h.attachEvent && h.attachEvent('on' + d, b.dispatcher))
          }
          function tb(h, d, c) {
            if (vb.has(h)) {
              var b = vb.get(h)
              if (b.handlers) {
                if (Array.isArray(d)) return Ld(tb, h, d, c)
                if (void 0 === d)
                  for (var a in b.handlers)
                    Object.prototype.hasOwnProperty.call(b.handlers || {}, a) &&
                      ((d = h), (c = a), (b.handlers[c] = []), Be(d, c))
                else if ((a = b.handlers[d])) {
                  if (!c) b.handlers[d] = []
                  else if (c.guid)
                    for (b = 0; b < a.length; b++) a[b].guid === c.guid && a.splice(b--, 1)
                  Be(h, d)
                }
              }
            }
          }
          function id(h, d, c) {
            var b = vb.has(h) ? vb.get(h) : {},
              a = h.parentNode || h.ownerDocument
            'string' === typeof d ? (d = { type: d, target: h }) : d.target || (d.target = h)
            d = ed(d)
            b.dispatcher && b.dispatcher.call(h, d, c)
            if (a && !d.isPropagationStopped() && !0 === d.bubbles) id.call(null, a, d, c)
            else if (
              !a &&
              !d.defaultPrevented &&
              d.target &&
              d.target[d.type] &&
              (vb.has(d.target) || vb.set(d.target, {}), (h = vb.get(d.target)), d.target[d.type])
            ) {
              h.disabled = !0
              if ('function' === typeof d.target[d.type]) d.target[d.type]()
              h.disabled = !1
            }
            return !d.defaultPrevented
          }
          function Je(h, d, c) {
            if (Array.isArray(d)) return Ld(Je, h, d, c)
            var b = function e() {
              tb(h, d, e)
              c.apply(this, arguments)
            }
            b.guid = c.guid = c.guid || Dc++
            sb(h, d, b)
          }
          function Si(h, d, c) {
            var b = function e() {
              tb(h, d, e)
              c.apply(this, arguments)
            }
            b.guid = c.guid = c.guid || Dc++
            sb(h, d, b)
          }
          function fg(h, d) {
            void 0 === d && (d = {})
            if ((d = d.eventBusKey)) {
              if (!h[d].nodeName)
                throw Error('The eventBusKey "' + d + '" does not refer to an element.')
              h.eventBusEl_ = h[d]
            } else h.eventBusEl_ = Na('span', { className: 'vjs-event-bus' })
            X(h, Jn)
            h.eventedCallbacks &&
              h.eventedCallbacks.forEach(function (c) {
                c()
              })
            h.on('dispose', function () {
              h.off()
              ca.setTimeout(function () {
                h.eventBusEl_ = null
              }, 0)
            })
            return h
          }
          function Ti(h, d) {
            X(h, Kn)
            h.state = X({}, h.state, d)
            if ('function' === typeof h.handleStateChanged && tc(h))
              h.on('statechanged', h.handleStateChanged)
            return h
          }
          function Pa() {
            for (var h = {}, d = arguments.length, c = Array(d), b = 0; b < d; b++)
              c[b] = arguments[b]
            c.forEach(function (a) {
              a &&
                Z(a, function (e, n) {
                  aa(e) ? (aa(h[n]) || (h[n] = {}), (h[n] = Pa(h[n], e))) : (h[n] = e)
                })
            })
            return h
          }
          function Ui(h, d, c, b) {
            var a = c.length - 1
            if ('number' !== typeof b || 0 > b || b > a)
              throw Error(
                "Failed to execute '" +
                  h +
                  "' on 'TimeRanges': The index provided (" +
                  b +
                  ') is non-numeric or out of bounds (0-' +
                  a +
                  ').',
              )
            return c[b][d]
          }
          function gg(h) {
            return void 0 === h || 0 === h.length
              ? {
                  length: 0,
                  start: function () {
                    throw Error('This TimeRanges object is empty')
                  },
                  end: function () {
                    throw Error('This TimeRanges object is empty')
                  },
                }
              : {
                  length: h.length,
                  start: Ui.bind(null, 'start', 0, h),
                  end: Ui.bind(null, 'end', 1, h),
                }
          }
          function Rc(h, d) {
            return Array.isArray(h) ? gg(h) : void 0 === h || void 0 === d ? gg() : gg([[h, d]])
          }
          function Vi(h, d) {
            var c = 0
            if (!d) return 0
            ;(h && h.length) || (h = Rc(0, 0))
            for (var b = 0; b < h.length; b++) {
              var a = h.start(b)
              var e = h.end(b)
              e > d && (e = d)
              c += e - a
            }
            return c / d
          }
          function wb(h) {
            if (h instanceof wb) return h
            'number' === typeof h
              ? (this.code = h)
              : 'string' === typeof h
                ? (this.message = h)
                : ia(h) && ('number' === typeof h.code && (this.code = h.code), X(this, h))
            this.message || (this.message = wb.defaultMessages[this.code] || '')
          }
          function Pd(h) {
            return void 0 !== h && null !== h && 'function' === typeof h.then
          }
          function Ec(h) {
            Pd(h) && h.then(null, function (d) {})
          }
          function Ln(h) {
            for (var d in h) if (h.hasOwnProperty(d)) return !1
            return !0
          }
          function Wi(h, d, c) {
            var b = h,
              a = Mn.call(d)
            '[object Function]' === a ||
            ('function' === typeof d && '[object RegExp]' !== a) ||
            ('undefined' !== typeof window &&
              (d === window.setTimeout ||
                d === window.alert ||
                d === window.confirm ||
                d === window.prompt))
              ? ((c = d), 'string' === typeof h && (b = { uri: h }))
              : (b = He({}, d, { uri: h }))
            b.callback = c
            return b
          }
          function cc(h, d, c) {
            d = Wi(h, d, c)
            return Xi(d)
          }
          function Xi(h) {
            function d(g) {
              clearTimeout(l)
              g instanceof Error || (g = Error('' + (g || 'Unknown XMLHttpRequest Error')))
              g.statusCode = 0
              var k = f
              b || ((b = !0), h.callback(g, k, void 0))
            }
            function c() {
              if (!n) {
                clearTimeout(l)
                var g = h.useXDR && void 0 === a.status ? 200 : 1223 === a.status ? 204 : a.status
                var k = f,
                  u = null
                if (0 !== g) {
                  if (a.response) k = a.response
                  else if (!(k = a.responseText))
                    a: {
                      try {
                        if ('document' === a.responseType) {
                          k = a.responseXML
                          break a
                        }
                        var w =
                          a.responseXML && 'parsererror' === a.responseXML.documentElement.nodeName
                        if ('' === a.responseType && !w) {
                          k = a.responseXML
                          break a
                        }
                      } catch (A) {}
                      k = null
                    }
                  if (m)
                    try {
                      k = JSON.parse(k)
                    } catch (A) {}
                  k = { body: k, statusCode: g, method: t, headers: {}, url: q, rawRequest: a }
                  a.getAllResponseHeaders && (k.headers = Nn(a.getAllResponseHeaders()))
                } else u = Error('Internal XMLHttpRequest Error')
                g = k.body
                b || ((b = !0), h.callback(u, k, g))
              }
            }
            if ('undefined' === typeof h.callback) throw Error('callback argument missing')
            var b = !1,
              a = h.xhr || null
            a || (a = h.cors || h.useXDR ? new cc.XDomainRequest() : new cc.XMLHttpRequest())
            var e,
              n,
              q = (a.url = h.uri || h.url),
              t = (a.method = h.method || 'GET'),
              v = h.body || h.data,
              r = (a.headers = h.headers || {}),
              p = !!h.sync,
              m = !1,
              l,
              f = { body: void 0, headers: {}, statusCode: 0, method: t, url: q, rawRequest: a }
            'json' in h &&
              !1 !== h.json &&
              ((m = !0),
              r.accept || r.Accept || (r.Accept = 'application/json'),
              'GET' !== t &&
                'HEAD' !== t &&
                (r['content-type'] || r['Content-Type'] || (r['Content-Type'] = 'application/json'),
                (v = JSON.stringify(!0 === h.json ? v : h.json))))
            a.onreadystatechange = function () {
              4 === a.readyState && setTimeout(c, 0)
            }
            a.onload = c
            a.onerror = d
            a.onprogress = function () {}
            a.onabort = function () {
              n = !0
            }
            a.ontimeout = d
            a.open(t, q, !p, h.username, h.password)
            p || (a.withCredentials = !!h.withCredentials)
            !p &&
              0 < h.timeout &&
              (l = setTimeout(function () {
                if (!n) {
                  n = !0
                  a.abort('timeout')
                  var g = Error('XMLHttpRequest timeout')
                  g.code = 'ETIMEDOUT'
                  d(g)
                }
              }, h.timeout))
            if (a.setRequestHeader) for (e in r) r.hasOwnProperty(e) && a.setRequestHeader(e, r[e])
            else if (h.headers && !Ln(h.headers))
              throw Error('Headers cannot be set on an XDomainRequest object')
            'responseType' in h && (a.responseType = h.responseType)
            'beforeSend' in h && 'function' === typeof h.beforeSend && h.beforeSend(a)
            a.send(v || null)
            return a
          }
          function On() {}
          function Qb(h, d) {
            this.name = 'ParsingError'
            this.code = h.code
            this.message = d || h.message
          }
          function hg(h) {
            h = h.match(/^(\d+):(\d{1,2})(:\d{1,2})?\.(\d{3})/)
            if (!h) return null
            if (h[3]) {
              var d = h[3].replace(':', '')
              return 3600 * (h[1] | 0) + 60 * (h[2] | 0) + (d | 0) + (h[4] | 0) / 1e3
            }
            return 59 < h[1]
              ? 3600 * (h[1] | 0) + 60 * (h[2] | 0) + (h[4] | 0) / 1e3
              : 60 * (h[1] | 0) + (h[2] | 0) + (h[4] | 0) / 1e3
          }
          function Qd() {
            this.values = ig(null)
          }
          function Rd(h, d, c, b) {
            h = b ? h.split(b) : [h]
            for (var a in h)
              'string' === typeof h[a] && ((b = h[a].split(c)), 2 === b.length && d(b[0], b[1]))
          }
          function Pn(h, d, c) {
            function b() {
              var n = hg(h)
              if (null === n) throw new Qb(Qb.Errors.BadTimeStamp, 'Malformed timestamp: ' + e)
              h = h.replace(/^[^\sa-zA-Z-]+/, '')
              return n
            }
            function a() {
              h = h.replace(/^\s+/, '')
            }
            var e = h
            a()
            d.startTime = b()
            a()
            if ('--\x3e' !== h.substr(0, 3))
              throw new Qb(
                Qb.Errors.BadTimeStamp,
                "Malformed time stamp (time stamps must be separated by '--\x3e'): " + e,
              )
            h = h.substr(3)
            a()
            d.endTime = b()
            a()
            ;(function (n, q) {
              var t = new Qd()
              Rd(
                n,
                function (v, r) {
                  switch (v) {
                    case 'region':
                      for (var p = c.length - 1; 0 <= p; p--)
                        if (c[p].id === r) {
                          t.set(v, c[p].region)
                          break
                        }
                      break
                    case 'vertical':
                      t.alt(v, r, ['rl', 'lr'])
                      break
                    case 'line':
                      r = r.split(',')
                      p = r[0]
                      t.integer(v, p)
                      t.percent(v, p) ? t.set('snapToLines', !1) : null
                      t.alt(v, p, ['auto'])
                      2 === r.length && t.alt('lineAlign', r[1], ['start', 'center', 'end'])
                      break
                    case 'position':
                      r = r.split(',')
                      t.percent(v, r[0])
                      2 === r.length && t.alt('positionAlign', r[1], ['start', 'center', 'end'])
                      break
                    case 'size':
                      t.percent(v, r)
                      break
                    case 'align':
                      t.alt(v, r, ['start', 'center', 'end', 'left', 'right'])
                  }
                },
                /:/,
                /\s/,
              )
              q.region = t.get('region', null)
              q.vertical = t.get('vertical', '')
              try {
                q.line = t.get('line', 'auto')
              } catch (v) {}
              q.lineAlign = t.get('lineAlign', 'start')
              q.snapToLines = t.get('snapToLines', !0)
              q.size = t.get('size', 100)
              try {
                q.align = t.get('align', 'center')
              } catch (v) {
                q.align = t.get('align', 'middle')
              }
              try {
                q.position = t.get('position', 'auto')
              } catch (v) {
                q.position = t.get(
                  'position',
                  { start: 0, left: 0, center: 50, middle: 50, end: 100, right: 100 },
                  q.align,
                )
              }
              q.positionAlign = t.get(
                'positionAlign',
                {
                  start: 'start',
                  left: 'start',
                  center: 'center',
                  middle: 'center',
                  end: 'end',
                  right: 'end',
                },
                q.align,
              )
            })(h, d)
          }
          function Yi(h, d) {
            function c() {
              if (!d) return null
              var p = d.match(/^([^<]*)(<[^>]*>?)?/)
              p = p[1] ? p[1] : p[2]
              d = d.substr(p.length)
              return p
            }
            function b(p) {
              jg.innerHTML = p
              p = jg.textContent
              jg.textContent = ''
              return p
            }
            function a(p, m) {
              var l = Qn[p]
              if (!l) return null
              l = h.document.createElement(l)
              ;(p = Rn[p]) && m && (l[p] = m.trim())
              return l
            }
            for (var e = h.document.createElement('div'), n = e, q, t = []; null !== (q = c()); )
              if ('<' === q[0])
                if ('/' === q[1])
                  t.length &&
                    t[t.length - 1] === q.substr(2).replace('>', '') &&
                    (t.pop(), (n = n.parentNode))
                else {
                  var v = hg(q.substr(1, q.length - 2))
                  if (v) {
                    var r = h.document.createProcessingInstruction('timestamp', v)
                    n.appendChild(r)
                  } else if ((q = q.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/)))
                    !(r = a(q[1], q[3])) ||
                      (Zi[r.localName] && Zi[r.localName] !== n.localName) ||
                      (q[2] &&
                        ((v = q[2].split('.')),
                        v.forEach(function (p) {
                          var m = /^bg_/.test(p)
                          p = m ? p.slice(3) : p
                          $i.hasOwnProperty(p) &&
                            (r.style[m ? 'background-color' : 'color'] = $i[p])
                        }),
                        (r.className = v.join(' '))),
                      t.push(q[1]),
                      n.appendChild(r),
                      (n = r))
                }
              else n.appendChild(h.document.createTextNode(b(q)))
            return e
          }
          function Sn(h) {
            for (var d = 0; d < aj.length; d++) {
              var c = aj[d]
              if (h >= c[0] && h <= c[1]) return !0
            }
            return !1
          }
          function Tn(h) {
            function d(n, q) {
              for (var t = q.childNodes.length - 1; 0 <= t; t--) n.push(q.childNodes[t])
            }
            function c(n) {
              if (!n || !n.length) return null
              var q = n.pop(),
                t = q.textContent || q.innerText
              if (t) return (q = t.match(/^.*(\n|\r)/)) ? ((n.length = 0), q[0]) : t
              if ('ruby' === q.tagName) return c(n)
              if (q.childNodes) return d(n, q), c(n)
            }
            var b = [],
              a = ''
            if (!h || !h.childNodes) return 'ltr'
            for (d(b, h); (a = c(b)); )
              for (var e = 0; e < a.length; e++) if (((h = a.charCodeAt(e)), Sn(h))) return 'rtl'
            return 'ltr'
          }
          function kg() {}
          function Ke(h, d, c) {
            this.cue = d
            this.cueDiv = Yi(h, d.text)
            var b = {
              color: 'rgba(255, 255, 255, 1)',
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              position: 'relative',
              left: 0,
              right: 0,
              top: 0,
              bottom: 0,
              display: 'inline',
              writingMode:
                '' === d.vertical
                  ? 'horizontal-tb'
                  : 'lr' === d.vertical
                    ? 'vertical-lr'
                    : 'vertical-rl',
              unicodeBidi: 'plaintext',
            }
            this.applyStyles(b, this.cueDiv)
            this.div = h.document.createElement('div')
            b = {
              direction: Tn(this.cueDiv),
              writingMode:
                '' === d.vertical
                  ? 'horizontal-tb'
                  : 'lr' === d.vertical
                    ? 'vertical-lr'
                    : 'vertical-rl',
              unicodeBidi: 'plaintext',
              textAlign: 'middle' === d.align ? 'center' : d.align,
              font: c.font,
              whiteSpace: 'pre-line',
              position: 'absolute',
            }
            this.applyStyles(b)
            this.div.appendChild(this.cueDiv)
            h = 0
            switch (d.positionAlign) {
              case 'start':
                h = d.position
                break
              case 'center':
                h = d.position - d.size / 2
                break
              case 'end':
                h = d.position - d.size
            }
            '' === d.vertical
              ? this.applyStyles({
                  left: this.formatStyle(h, '%'),
                  width: this.formatStyle(d.size, '%'),
                })
              : this.applyStyles({
                  top: this.formatStyle(h, '%'),
                  height: this.formatStyle(d.size, '%'),
                })
            this.move = function (a) {
              this.applyStyles({
                top: this.formatStyle(a.top, 'px'),
                bottom: this.formatStyle(a.bottom, 'px'),
                left: this.formatStyle(a.left, 'px'),
                right: this.formatStyle(a.right, 'px'),
                height: this.formatStyle(a.height, 'px'),
                width: this.formatStyle(a.width, 'px'),
              })
            }
          }
          function xb(h) {
            if (h.div) {
              var d = h.div.offsetHeight
              var c = h.div.offsetWidth
              var b = h.div.offsetTop
              var a = (a = h.div.childNodes) && (a = a[0]) && a.getClientRects && a.getClientRects()
              h = h.div.getBoundingClientRect()
              var e = a ? Math.max((a[0] && a[0].height) || 0, h.height / a.length) : 0
            }
            this.left = h.left
            this.right = h.right
            this.top = h.top || b
            this.height = h.height || d
            this.bottom = h.bottom || b + (h.height || d)
            this.width = h.width || c
            this.lineHeight = void 0 !== e ? e : h.lineHeight
          }
          function jd() {}
          function lg(h) {
            return 'string' !== typeof h ? !1 : Un[h.toLowerCase()] ? h.toLowerCase() : !1
          }
          function bj(h, d, c) {
            this.hasBeenReset = !1
            var b = '',
              a = !1,
              e = h,
              n = d,
              q = c,
              t = null,
              v = '',
              r = !0,
              p = 'auto',
              m = 'start',
              l = 'auto',
              f = 'auto',
              g = 100,
              k = 'center'
            Object.defineProperties(this, {
              id: {
                enumerable: !0,
                get: function () {
                  return b
                },
                set: function (u) {
                  b = '' + u
                },
              },
              pauseOnExit: {
                enumerable: !0,
                get: function () {
                  return a
                },
                set: function (u) {
                  a = !!u
                },
              },
              startTime: {
                enumerable: !0,
                get: function () {
                  return e
                },
                set: function (u) {
                  if ('number' !== typeof u)
                    throw new TypeError('Start time must be set to a number.')
                  e = u
                  this.hasBeenReset = !0
                },
              },
              endTime: {
                enumerable: !0,
                get: function () {
                  return n
                },
                set: function (u) {
                  if ('number' !== typeof u)
                    throw new TypeError('End time must be set to a number.')
                  n = u
                  this.hasBeenReset = !0
                },
              },
              text: {
                enumerable: !0,
                get: function () {
                  return q
                },
                set: function (u) {
                  q = '' + u
                  this.hasBeenReset = !0
                },
              },
              region: {
                enumerable: !0,
                get: function () {
                  return t
                },
                set: function (u) {
                  t = u
                  this.hasBeenReset = !0
                },
              },
              vertical: {
                enumerable: !0,
                get: function () {
                  return v
                },
                set: function (u) {
                  u = 'string' !== typeof u ? !1 : Vn[u.toLowerCase()] ? u.toLowerCase() : !1
                  if (!1 === u)
                    throw new SyntaxError(
                      'Vertical: an invalid or illegal direction string was specified.',
                    )
                  v = u
                  this.hasBeenReset = !0
                },
              },
              snapToLines: {
                enumerable: !0,
                get: function () {
                  return r
                },
                set: function (u) {
                  r = !!u
                  this.hasBeenReset = !0
                },
              },
              line: {
                enumerable: !0,
                get: function () {
                  return p
                },
                set: function (u) {
                  if ('number' !== typeof u && 'auto' !== u)
                    throw new SyntaxError(
                      'Line: an invalid number or illegal string was specified.',
                    )
                  p = u
                  this.hasBeenReset = !0
                },
              },
              lineAlign: {
                enumerable: !0,
                get: function () {
                  return m
                },
                set: function (u) {
                  ;(u = lg(u))
                    ? ((m = u), (this.hasBeenReset = !0))
                    : console.warn('lineAlign: an invalid or illegal string was specified.')
                },
              },
              position: {
                enumerable: !0,
                get: function () {
                  return l
                },
                set: function (u) {
                  if (0 > u || 100 < u) throw Error('Position must be between 0 and 100.')
                  l = u
                  this.hasBeenReset = !0
                },
              },
              positionAlign: {
                enumerable: !0,
                get: function () {
                  return f
                },
                set: function (u) {
                  ;(u = lg(u))
                    ? ((f = u), (this.hasBeenReset = !0))
                    : console.warn('positionAlign: an invalid or illegal string was specified.')
                },
              },
              size: {
                enumerable: !0,
                get: function () {
                  return g
                },
                set: function (u) {
                  if (0 > u || 100 < u) throw Error('Size must be between 0 and 100.')
                  g = u
                  this.hasBeenReset = !0
                },
              },
              align: {
                enumerable: !0,
                get: function () {
                  return k
                },
                set: function (u) {
                  u = lg(u)
                  if (!u)
                    throw new SyntaxError(
                      'align: an invalid or illegal alignment string was specified.',
                    )
                  k = u
                  this.hasBeenReset = !0
                },
              },
            })
            this.displayState = void 0
          }
          function Sd(h) {
            return 'number' === typeof h && 0 <= h && 100 >= h
          }
          function Wn(h, d, c) {
            h.setTimeout(function () {
              return Sc(d, Tc[d.type], c, h)
            }, 1)
          }
          function Xn(h, d) {
            h.forEach(function (c) {
              return c.setTech && c.setTech(d)
            })
          }
          function cj(h, d, c, b) {
            void 0 === b && (b = null)
            var a = 'call' + Xa(c)
            a = h.reduce(mg(a), b)
            d = (b = a === Le) ? null : d[c](a)
            for (a = h.length - 1; 0 <= a; a--) {
              var e = h[a]
              if (e[c]) e[c](b, d)
            }
            return d
          }
          function mg(h) {
            return function (d, c) {
              return d === Le ? Le : c[h] ? c[h](d) : d
            }
          }
          function Yn(h, d) {
            var c = ng[h.id()],
              b = null
            if (void 0 === c || null === c) return (b = d(h)), (ng[h.id()] = [[d, b]]), b
            for (var a = 0; a < c.length; a++) {
              var e = c[a]
              e[0] === d && (b = e[1])
            }
            null === b && ((b = d(h)), c.push([d, b]))
            return b
          }
          function Sc(h, d, c, b, a, e) {
            void 0 === h && (h = {})
            void 0 === d && (d = [])
            void 0 === a && (a = [])
            void 0 === e && (e = !1)
            var n = d[0],
              q = d.slice(1)
            if ('string' === typeof n) Sc(h, Tc[n], c, b, a, e)
            else if (n) {
              var t = Yn(b, n)
              if (!t.setSource) return a.push(t), Sc(h, q, c, b, a, e)
              t.setSource(X({}, h), function (v, r) {
                if (v) return Sc(h, q, c, b, a, e)
                a.push(t)
                Sc(r, h.type === r.type ? q : Tc[r.type], c, b, a, e)
              })
            } else q.length ? Sc(h, q, c, b, a, e) : e ? c(h, a) : Sc(h, Tc['*'], c, b, a, !0)
          }
          function dj(h) {
            if (!h.type) {
              var d = Me(h.src)
              d && (h.type = d)
            }
            return h
          }
          function og(h, d) {
            if (4 === h.length) h = h[1] + h[1] + h[2] + h[2] + h[3] + h[3]
            else if (7 === h.length) h = h.slice(1)
            else
              throw Error(
                'Invalid color code provided, ' +
                  h +
                  '; must be formatted as e.g. #f0e or #f604e2.',
              )
            return (
              'rgba(' +
              parseInt(h.slice(0, 2), 16) +
              ',' +
              parseInt(h.slice(2, 4), 16) +
              ',' +
              parseInt(h.slice(4, 6), 16) +
              ',' +
              d +
              ')'
            )
          }
          function kd(h, d) {
            void 0 === d && (d = h)
            return pg(h, d)
          }
          function ej(h, d) {
            d && (h = d(h))
            if (h && 'none' !== h) return h
          }
          function U(h, d, c) {
            var b = U.getPlayer(h)
            if (b)
              return (
                d &&
                  Ea.warn(
                    'Player "' + h + '" is already initialised. Options will not be applied.',
                  ),
                c && b.ready(c),
                b
              )
            var a = 'string' === typeof h ? Fc('#' + fj(h)) : h
            if (!Ua(a)) throw new TypeError('The element or ID supplied is not valid. (videojs)')
            ;(a.ownerDocument.defaultView && a.ownerDocument.body.contains(a)) ||
              Ea.warn('The element supplied is not included in the DOM')
            d = d || {}
            U.hooks('beforesetup').forEach(function (e) {
              e = e(a, Pa(d))
              !ia(e) || Array.isArray(e)
                ? Ea.error('please return an object in beforesetup hooks')
                : (d = Pa(d, e))
            })
            b = new (ja.getComponent('Player'))(a, d, c)
            U.hooks('setup').forEach(function (e) {
              return e(b)
            })
            return b
          }
          function gj(h) {
            h = Gc.atob ? Gc.atob(h) : Buffer.from(h, 'base64').toString('binary')
            for (var d = new Uint8Array(h.length), c = 0; c < h.length; c++) d[c] = h.charCodeAt(c)
            return d
          }
          function hj() {}
          function Zn(h, d, c, b, a) {
            function e(da) {
              var ka = da.slice(1, -1)
              if (ka in c) return c[ka]
              if ('#' === ka.charAt(0))
                return (
                  (da = parseInt(ka.substr(1).replace('x', '0x'))),
                  65535 < da
                    ? ((da -= 65536),
                      (da = String.fromCharCode(55296 + (da >> 10), 56320 + (da & 1023))))
                    : (da = String.fromCharCode(da)),
                  da
                )
              a.error('entity not found:' + da)
              return da
            }
            function n(da) {
              if (da > l) {
                var ka = h.substring(l, da).replace(/&#?\w+;/g, e)
                p && q(l)
                b.characters(ka, 0, da - l)
                l = da
              }
            }
            function q(da, ka) {
              for (; da >= v && (ka = r.exec(h)); )
                (t = ka.index), (v = t + ka[0].length), p.lineNumber++
              p.columnNumber = da - t + 1
            }
            var t = 0,
              v = 0,
              r = /.*(?:\r\n?|\n)|.*$/g,
              p = b.locator
            d = [{ currentNSMap: d }]
            for (var m = {}, l = 0; ; ) {
              try {
                var f = h.indexOf('<', l)
                if (0 > f) {
                  if (!h.substr(l).match(/^\s*$/)) {
                    var g = b.doc,
                      k = g.createTextNode(h.substr(l))
                    g.appendChild(k)
                    b.currentElement = k
                  }
                  break
                }
                f > l && n(f)
                switch (h.charAt(f + 1)) {
                  case '/':
                    var u = h.indexOf('>', f + 3),
                      w = h.substring(f + 2, u),
                      A = d.pop()
                    0 > u
                      ? ((w = h.substring(f + 2).replace(/[\s<].*/, '')),
                        a.error('end tag name: ' + w + ' is not complete:' + A.tagName),
                        (u = f + 1 + w.length))
                      : w.match(/\s</) &&
                        ((w = w.replace(/[\s<].*/, '')),
                        a.error('end tag name: ' + w + ' maybe not complete'),
                        (u = f + 1 + w.length))
                    var H = A.localNSMap,
                      R = A.tagName == w
                    if (R || (A.tagName && A.tagName.toLowerCase() == w.toLowerCase())) {
                      b.endElement(A.uri, A.localName, w)
                      if (H) for (var W in H) b.endPrefixMapping(W)
                      R ||
                        a.fatalError(
                          'end tag name: ' +
                            w +
                            ' is not match the current start tagName:' +
                            A.tagName,
                        )
                    } else d.push(A)
                    u++
                    break
                  case '?':
                    p && q(f)
                    u = $n(h, f, b)
                    break
                  case '!':
                    p && q(f)
                    u = ao(h, f, b, a)
                    break
                  default:
                    p && q(f)
                    var M = new ij(),
                      T = d[d.length - 1].currentNSMap
                    u = bo(h, f, M, T, e, a)
                    var Q = M.length
                    !M.closed &&
                      co(h, u, M.tagName, m) &&
                      ((M.closed = !0), c.nbsp || a.warning('unclosed xml attribute'))
                    if (p && Q) {
                      for (var na = jj(p, {}), oa = 0; oa < Q; oa++) {
                        var ya = M[oa]
                        q(ya.offset)
                        ya.locator = jj(p, {})
                      }
                      b.locator = na
                      kj(M, b, T) && d.push(M)
                      b.locator = p
                    } else kj(M, b, T) && d.push(M)
                    'http://www.w3.org/1999/xhtml' !== M.uri || M.closed
                      ? u++
                      : (u = eo(h, u, M.tagName, e, b))
                }
              } catch (da) {
                a.error('element parse error: ' + da), (u = -1)
              }
              u > l ? (l = u) : n(Math.max(f, l) + 1)
            }
          }
          function jj(h, d) {
            d.lineNumber = h.lineNumber
            d.columnNumber = h.columnNumber
            return d
          }
          function bo(h, d, c, b, a, e) {
            for (var n, q, t = ++d, v = 0; ; ) {
              var r = h.charAt(t)
              switch (r) {
                case '=':
                  if (1 === v) (n = h.slice(d, t)), (v = 3)
                  else if (2 === v) v = 3
                  else throw Error('attribute equal must after attrName')
                  break
                case "'":
                case '"':
                  if (3 === v || 1 === v)
                    if (
                      (1 === v &&
                        (e.warning('attribute value must after "="'), (n = h.slice(d, t))),
                      (d = t + 1),
                      (t = h.indexOf(r, d)),
                      0 < t)
                    )
                      (q = h.slice(d, t).replace(/&#?\w+;/g, a)), c.add(n, q, d - 1), (v = 5)
                    else throw Error("attribute value no end '" + r + "' match")
                  else if (4 == v)
                    (q = h.slice(d, t).replace(/&#?\w+;/g, a)),
                      c.add(n, q, d),
                      e.warning('attribute "' + n + '" missed start quot(' + r + ')!!'),
                      (d = t + 1),
                      (v = 5)
                  else throw Error('attribute value must after "="')
                  break
                case '/':
                  switch (v) {
                    case 0:
                      c.setTagName(h.slice(d, t))
                    case 5:
                    case 6:
                    case 7:
                      ;(v = 7), (c.closed = !0)
                    case 4:
                    case 1:
                    case 2:
                      break
                    default:
                      throw Error("attribute invalid close char('/')")
                  }
                  break
                case '':
                  return (
                    e.error('unexpected end of input'), 0 == v && c.setTagName(h.slice(d, t)), t
                  )
                case '>':
                  switch (v) {
                    case 0:
                      c.setTagName(h.slice(d, t))
                    case 5:
                    case 6:
                    case 7:
                      break
                    case 4:
                    case 1:
                      ;(q = h.slice(d, t)),
                        '/' === q.slice(-1) && ((c.closed = !0), (q = q.slice(0, -1)))
                    case 2:
                      2 === v && (q = n)
                      4 == v
                        ? (e.warning('attribute "' + q + '" missed quot(")!!'),
                          c.add(n, q.replace(/&#?\w+;/g, a), d))
                        : (('http://www.w3.org/1999/xhtml' === b[''] &&
                            q.match(/^(?:disabled|checked|selected)$/i)) ||
                            e.warning('attribute "' + q + '" missed value!! "' + q + '" instead!!'),
                          c.add(q, q, d))
                      break
                    case 3:
                      throw Error('attribute value missed!!')
                  }
                  return t
                case '\u0080':
                  r = ' '
                default:
                  if (' ' >= r)
                    switch (v) {
                      case 0:
                        c.setTagName(h.slice(d, t))
                        v = 6
                        break
                      case 1:
                        n = h.slice(d, t)
                        v = 2
                        break
                      case 4:
                        ;(q = h.slice(d, t).replace(/&#?\w+;/g, a)),
                          e.warning('attribute "' + q + '" missed quot(")!!'),
                          c.add(n, q, d)
                      case 5:
                        v = 6
                    }
                  else
                    switch (v) {
                      case 2:
                        c.tagName
                        ;('http://www.w3.org/1999/xhtml' === b[''] &&
                          n.match(/^(?:disabled|checked|selected)$/i)) ||
                          e.warning('attribute "' + n + '" missed value!! "' + n + '" instead2!!')
                        c.add(n, n, d)
                        d = t
                        v = 1
                        break
                      case 5:
                        e.warning('attribute space is required"' + n + '"!!')
                      case 6:
                        v = 1
                        d = t
                        break
                      case 3:
                        v = 4
                        d = t
                        break
                      case 7:
                        throw Error("elements closed character '/' and '>' must be connected to")
                    }
              }
              t++
            }
          }
          function kj(h, d, c) {
            for (var b = h.tagName, a = null, e = h.length; e--; ) {
              var n = h[e],
                q = n.qName,
                t = n.value,
                v = q.indexOf(':')
              if (0 < v) {
                var r = (n.prefix = q.slice(0, v))
                v = q.slice(v + 1)
                r = 'xmlns' === r && v
              } else (v = q), (r = 'xmlns' === q && '')
              n.localName = v
              if (!1 !== r) {
                if (null == a) {
                  a = {}
                  v = void 0
                  q = c
                  var p = (c = {})
                  for (v in q) p[v] = q[v]
                }
                c[r] = a[r] = t
                n.uri = 'http://www.w3.org/2000/xmlns/'
                d.startPrefixMapping(r, t)
              }
            }
            for (e = h.length; e--; )
              if (((n = h[e]), (r = n.prefix)))
                'xml' === r && (n.uri = 'http://www.w3.org/XML/1998/namespace'),
                  'xmlns' !== r && (n.uri = c[r || ''])
            v = b.indexOf(':')
            0 < v
              ? ((r = h.prefix = b.slice(0, v)), (v = h.localName = b.slice(v + 1)))
              : ((r = null), (v = h.localName = b))
            e = h.uri = c[r || '']
            d.startElement(e, v, b, h)
            if (h.closed) {
              if ((d.endElement(e, v, b), a)) for (r in a) d.endPrefixMapping(r)
            } else return (h.currentNSMap = c), (h.localNSMap = a), !0
          }
          function eo(h, d, c, b, a) {
            if (/^(?:script|textarea)$/i.test(c)) {
              var e = h.indexOf('</' + c + '>', d)
              h = h.substring(d + 1, e)
              if (/[&<]/.test(h)) {
                if (/^script$/i.test(c)) return a.characters(h, 0, h.length), e
                h = h.replace(/&#?\w+;/g, b)
                a.characters(h, 0, h.length)
                return e
              }
            }
            return d + 1
          }
          function co(h, d, c, b) {
            var a = b[c]
            null == a &&
              ((a = h.lastIndexOf('</' + c + '>')),
              a < d && (a = h.lastIndexOf('</' + c)),
              (b[c] = a))
            return a < d
          }
          function ao(h, d, c, b) {
            switch (h.charAt(d + 2)) {
              case '-':
                if ('-' === h.charAt(d + 3)) {
                  var a = h.indexOf('--\x3e', d + 4)
                  if (a > d) return c.comment(h, d + 4, a - d - 4), a + 3
                  b.error('Unclosed comment')
                }
                break
              default:
                if ('CDATA[' == h.substr(d + 3, 6))
                  return (
                    (a = h.indexOf(']]\x3e', d + 9)),
                    c.startCDATA(),
                    c.characters(h, d + 9, a - d - 9),
                    c.endCDATA(),
                    a + 3
                  )
                a: {
                  b = []
                  a = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g
                  a.lastIndex = d
                  for (a.exec(h); (d = a.exec(h)); )
                    if ((b.push(d), d[1])) {
                      a = b
                      break a
                    }
                  a = void 0
                }
                var e = a.length
                if (1 < e && /!doctype/i.test(a[0][0]))
                  return (
                    (h = a[1][0]),
                    (b = d = !1),
                    3 < e &&
                      (/^public$/i.test(a[2][0])
                        ? ((d = a[3][0]), (b = 4 < e && a[4][0]))
                        : /^system$/i.test(a[2][0]) && (b = a[3][0])),
                    (a = a[e - 1]),
                    c.startDTD(
                      h,
                      d && d.replace(/^(['"])(.*?)\1$/, '$2'),
                      b && b.replace(/^(['"])(.*?)\1$/, '$2'),
                    ),
                    c.endDTD(),
                    a.index + a[0].length
                  )
            }
            return -1
          }
          function $n(h, d, c) {
            var b = h.indexOf('?>', d)
            return b && (h = h.substring(d, b).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/))
              ? (h[0].length, c.processingInstruction(h[1], h[2]), b + 2)
              : -1
          }
          function ij(h) {}
          function Td(h, d) {
            for (var c in h) d[c] = h[c]
          }
          function Db(h, d) {
            var c = h.prototype
            if (!(c instanceof d)) {
              var b = function () {}
              b.prototype = d.prototype
              b = new b()
              Td(c, b)
              h.prototype = c = b
            }
            c.constructor != h &&
              ('function' != typeof h && console.error('unknow Class:' + h), (c.constructor = h))
          }
          function ld(h, d) {
            if (d instanceof Error) var c = d
            else
              (c = this),
                Error.call(this, ib[h]),
                (this.message = ib[h]),
                Error.captureStackTrace && Error.captureStackTrace(this, ld)
            c.code = h
            d && (this.message = this.message + ': ' + d)
            return c
          }
          function Hc() {}
          function md(h, d) {
            this._node = h
            this._refresh = d
            qg(this)
          }
          function qg(h) {
            var d = h._node._inc || h._node.ownerDocument._inc
            if (h._inc != d) {
              var c = h._refresh(h._node)
              lj(h, 'length', c.length)
              Td(c, h)
              h._inc = d
            }
          }
          function Ne() {}
          function mj(h, d) {
            for (var c = h.length; c--; ) if (h[c] === d) return c
          }
          function nj(h, d, c, b) {
            b ? (d[mj(d, b)] = c) : (d[d.length++] = c)
            h &&
              ((c.ownerElement = h), (d = h.ownerDocument)) &&
              (b && oj(d, h, b),
              d && d._inc++,
              'http://www.w3.org/2000/xmlns/' == c.namespaceURI &&
                (h._nsMap[c.prefix ? c.localName : ''] = c.value))
          }
          function pj(h, d, c) {
            var b = mj(d, c)
            if (0 <= b) {
              for (var a = d.length - 1; b < a; ) d[b] = d[++b]
              d.length = a
              h && (d = h.ownerDocument) && (oj(d, h, c), (c.ownerElement = null))
            } else throw ld(fo, Error(h.tagName + '@' + c))
          }
          function qj(h) {
            this._features = {}
            if (h) for (var d in h) this._features = h[d]
          }
          function yb() {}
          function rj(h) {
            return (
              ('<' == h && '&lt;') ||
              ('>' == h && '&gt;') ||
              ('&' == h && '&amp;') ||
              ('"' == h && '&quot;') ||
              '&#' + h.charCodeAt() + ';'
            )
          }
          function Ud(h, d) {
            if (d(h)) return !0
            if ((h = h.firstChild)) {
              do if (Ud(h, d)) return !0
              while ((h = h.nextSibling))
            }
          }
          function Vd() {}
          function oj(h, d, c, b) {
            h && h._inc++
            'http://www.w3.org/2000/xmlns/' == c.namespaceURI &&
              delete d._nsMap[c.prefix ? c.localName : '']
          }
          function rg(h, d, c) {
            if (h && h._inc)
              if ((h._inc++, (h = d.childNodes), c)) h[h.length++] = c
              else {
                d = d.firstChild
                for (c = 0; d; ) (h[c++] = d), (d = d.nextSibling)
                h.length = c
              }
          }
          function sj(h, d) {
            var c = d.previousSibling,
              b = d.nextSibling
            c ? (c.nextSibling = b) : (h.firstChild = b)
            b ? (b.previousSibling = c) : (h.lastChild = c)
            rg(h.ownerDocument, h)
            return d
          }
          function tj(h, d, c) {
            var b = d.parentNode
            b && b.removeChild(d)
            if (d.nodeType === uc) {
              b = d.firstChild
              if (null == b) return d
              var a = d.lastChild
            } else b = a = d
            var e = c ? c.previousSibling : h.lastChild
            b.previousSibling = e
            a.nextSibling = c
            e ? (e.nextSibling = b) : (h.firstChild = b)
            null == c ? (h.lastChild = a) : (c.previousSibling = a)
            do b.parentNode = h
            while (b !== a && (b = b.nextSibling))
            rg(h.ownerDocument || h, h)
            d.nodeType == uc && (d.firstChild = d.lastChild = null)
            return d
          }
          function nd() {
            this._nsMap = {}
          }
          function Oe() {}
          function Wd() {}
          function sg() {}
          function tg() {}
          function ug() {}
          function vg() {}
          function uj() {}
          function vj() {}
          function wg() {}
          function Pe() {}
          function xg() {}
          function wj() {}
          function xj(h, d) {
            var c = [],
              b = (9 == this.nodeType && this.documentElement) || this,
              a = b.prefix,
              e = b.namespaceURI
            if (e && null == a && ((a = b.lookupPrefix(e)), null == a))
              var n = [{ namespace: e, prefix: null }]
            od(this, c, h, d, n)
            return c.join('')
          }
          function yj(h, d, c) {
            d = h.prefix || ''
            h = h.namespaceURI
            if (
              (!d && !h) ||
              ('xml' === d && 'http://www.w3.org/XML/1998/namespace' === h) ||
              'http://www.w3.org/2000/xmlns/' == h
            )
              return !1
            for (var b = c.length; b--; ) {
              var a = c[b]
              if (a.prefix == d) return a.namespace != h
            }
            return !0
          }
          function od(h, d, c, b, a) {
            if (b)
              if ((h = b(h))) {
                if ('string' == typeof h) {
                  d.push(h)
                  return
                }
              } else return
            switch (h.nodeType) {
              case dc:
                a || (a = [])
                a.length
                var e = h.attributes,
                  n = e.length,
                  q = h.firstChild,
                  t = h.tagName
                c = 'http://www.w3.org/1999/xhtml' === h.namespaceURI || c
                d.push('<', t)
                for (var v = 0; v < n; v++) {
                  var r = e.item(v)
                  'xmlns' == r.prefix
                    ? a.push({ prefix: r.localName, namespace: r.value })
                    : 'xmlns' == r.nodeName && a.push({ prefix: '', namespace: r.value })
                }
                for (v = 0; v < n; v++) {
                  r = e.item(v)
                  if (yj(r, c, a)) {
                    var p = r.prefix || '',
                      m = r.namespaceURI
                    d.push(p ? ' xmlns:' + p : ' xmlns', '="', m, '"')
                    a.push({ prefix: p, namespace: m })
                  }
                  od(r, d, c, b, a)
                }
                yj(h, c, a) &&
                  ((p = h.prefix || ''),
                  (m = h.namespaceURI),
                  d.push(p ? ' xmlns:' + p : ' xmlns', '="', m, '"'),
                  a.push({ prefix: p, namespace: m }))
                if (q || (c && !/^(?:meta|link|img|br|hr|input)$/i.test(t))) {
                  d.push('>')
                  if (c && /^script$/i.test(t))
                    for (; q; ) q.data ? d.push(q.data) : od(q, d, c, b, a), (q = q.nextSibling)
                  else for (; q; ) od(q, d, c, b, a), (q = q.nextSibling)
                  d.push('</', t, '>')
                } else d.push('/>')
                break
              case zj:
              case uc:
                for (q = h.firstChild; q; ) od(q, d, c, b, a), (q = q.nextSibling)
                break
              case pd:
                return d.push(' ', h.name, '="', h.value.replace(/[<&"]/g, rj), '"')
              case Qe:
                return d.push(h.data.replace(/[<&]/g, rj))
              case Aj:
                return d.push('<![CDATA[', h.data, ']]\x3e')
              case Bj:
                return d.push('\x3c!--', h.data, '--\x3e')
              case Cj:
                c = h.publicId
                b = h.systemId
                d.push('<!DOCTYPE ', h.name)
                c
                  ? (d.push(' PUBLIC "', c), b && '.' != b && d.push('" "', b), d.push('">'))
                  : b && '.' != b
                    ? d.push(' SYSTEM "', b, '">')
                    : ((h = h.internalSubset) && d.push(' [', h, ']'), d.push('>'))
                break
              case Dj:
                return d.push('<?', h.target, ' ', h.data, '?>')
              case Ej:
                return d.push('&', h.nodeName, ';')
              default:
                d.push('??', h.nodeName)
            }
          }
          function Fj(h, d, c) {
            switch (d.nodeType) {
              case dc:
                var b = d.cloneNode(!1)
                b.ownerDocument = h
              case uc:
                break
              case pd:
                c = !0
            }
            b || (b = d.cloneNode(!1))
            b.ownerDocument = h
            b.parentNode = null
            if (c) for (d = d.firstChild; d; ) b.appendChild(Fj(h, d, c)), (d = d.nextSibling)
            return b
          }
          function yg(h, d, c) {
            var b = new d.constructor()
            for (e in d) {
              var a = d[e]
              'object' != typeof a && a != b[e] && (b[e] = a)
            }
            d.childNodes && (b.childNodes = new Hc())
            b.ownerDocument = h
            switch (b.nodeType) {
              case dc:
                var e = d.attributes
                var n = (b.attributes = new Ne())
                a = e.length
                n._ownerElement = b
                for (n = 0; n < a; n++) b.setAttributeNode(yg(h, e.item(n), !0))
                break
              case pd:
                c = !0
            }
            if (c) for (d = d.firstChild; d; ) b.appendChild(yg(h, d, c)), (d = d.nextSibling)
            return b
          }
          function lj(h, d, c) {
            h[d] = c
          }
          function Ic() {}
          var Eb =
              'undefined' !== typeof globalThis
                ? globalThis
                : 'undefined' !== typeof window
                  ? window
                  : 'undefined' !== typeof Pi
                    ? Pi
                    : 'undefined' !== typeof self
                      ? self
                      : {},
            ca =
              'undefined' !== typeof window
                ? window
                : 'undefined' !== typeof Eb
                  ? Eb
                  : 'undefined' !== typeof self
                    ? self
                    : {},
            Gj = {},
            Hj = 'undefined' !== typeof Eb ? Eb : 'undefined' !== typeof window ? window : {}
          if ('undefined' !== typeof document) var zg = document
          else (zg = Hj['__GLOBAL_DOCUMENT_CACHE@4']) || (zg = Hj['__GLOBAL_DOCUMENT_CACHE@4'] = Gj)
          for (
            var pa = zg,
              Ie = { prefixed: !0 },
              Re = [
                'requestFullscreen exitFullscreen fullscreenElement fullscreenEnabled fullscreenchange fullscreenerror fullscreen'.split(
                  ' ',
                ),
                'webkitRequestFullscreen webkitExitFullscreen webkitFullscreenElement webkitFullscreenEnabled webkitfullscreenchange webkitfullscreenerror -webkit-full-screen'.split(
                  ' ',
                ),
                'mozRequestFullScreen mozCancelFullScreen mozFullScreenElement mozFullScreenEnabled mozfullscreenchange mozfullscreenerror -moz-full-screen'.split(
                  ' ',
                ),
                'msRequestFullscreen msExitFullscreen msFullscreenElement msFullscreenEnabled MSFullscreenChange MSFullscreenError -ms-fullscreen'.split(
                  ' ',
                ),
              ],
              Ij = Re[0],
              Xd,
              Se = 0;
            Se < Re.length;
            Se++
          )
            if (Re[Se][1] in pa) {
              Xd = Re[Se]
              break
            }
          if (Xd) {
            for (var Te = 0; Te < Xd.length; Te++) Ie[Ij[Te]] = Xd[Te]
            Ie.prefixed = Xd[0] !== Ij[0]
          }
          var Cb = [],
            En = function (h, d) {
              return function (c, b, a) {
                b = d.levels[b]
                var e = new RegExp('^(' + b + ')$')
                'log' !== c && a.unshift(c.toUpperCase() + ':')
                a.unshift(h + ':')
                if (Cb) {
                  Cb.push([].concat(a))
                  var n = Cb.length - 1e3
                  Cb.splice(0, 0 < n ? n : 0)
                }
                if (
                  ca.console &&
                  ((n = ca.console[c]) || 'debug' !== c || (n = ca.console.info || ca.console.log),
                  n && b && e.test(c))
                )
                  n[Array.isArray(a) ? 'apply' : 'call'](ca.console, a)
              }
            },
            Ea = fa('VIDEOJS'),
            Jj = Ea.createLogger,
            He = y(function (h) {
              function d() {
                h.exports = d =
                  Object.assign ||
                  function (c) {
                    for (var b = 1; b < arguments.length; b++) {
                      var a = arguments[b],
                        e
                      for (e in a) Object.prototype.hasOwnProperty.call(a, e) && (c[e] = a[e])
                    }
                    return c
                  }
                return d.apply(this, arguments)
              }
              h.exports = d
            }),
            Fn = Object.prototype.toString,
            Qi = function (h) {
              return ia(h) ? Object.keys(h) : []
            },
            jb = (ca.navigator && ca.navigator.userAgent) || '',
            Kj = /AppleWebKit\/([\d.]+)/i.exec(jb),
            go = Kj ? parseFloat(Kj.pop()) : null,
            Lj = /iPod/i.test(jb),
            ho = (function () {
              var h = jb.match(/OS (\d+)_/i)
              return h && h[1] ? h[1] : null
            })(),
            Jc = /Android/i.test(jb),
            Ag = (function () {
              var h = jb.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i)
              if (!h) return null
              var d = h[1] && parseFloat(h[1]),
                c = h[2] && parseFloat(h[2])
              return d && c ? parseFloat(h[1] + '.' + h[2]) : d ? d : null
            })(),
            Mj = Jc && 5 > Ag && 537 > go,
            Nj = /Firefox/i.test(jb),
            Yd = /Edg/i.test(jb),
            vc = !Yd && (/Chrome/i.test(jb) || /CriOS/i.test(jb)),
            Oj = (function () {
              var h = jb.match(/(Chrome|CriOS)\/(\d+)/)
              return h && h[2] ? parseFloat(h[2]) : null
            })(),
            Zd = (function () {
              var h = /MSIE\s(\d+)\.\d/.exec(jb)
              h = h && parseFloat(h[1])
              !h && /Trident\/7.0/i.test(jb) && /rv:11.0/.test(jb) && (h = 11)
              return h
            })(),
            Bg = /Safari/i.test(jb) && !vc && !Jc && !Yd,
            Pj = /Windows/i.test(jb),
            qd = !(
              !Wa() ||
              !(
                'ontouchstart' in ca ||
                ca.navigator.maxTouchPoints ||
                (ca.DocumentTouch && ca.document instanceof ca.DocumentTouch)
              )
            ),
            Cg = /iPad/i.test(jb) || (Bg && qd && !/iPhone/i.test(jb)),
            Dg = /iPhone/i.test(jb) && !Cg,
            Pb = Dg || Cg || Lj,
            Ue = (Bg || Pb) && !vc,
            io = {
              __proto__: null,
              IS_IPOD: Lj,
              IOS_VERSION: ho,
              IS_ANDROID: Jc,
              ANDROID_VERSION: Ag,
              IS_NATIVE_ANDROID: Mj,
              IS_FIREFOX: Nj,
              IS_EDGE: Yd,
              IS_CHROME: vc,
              CHROME_VERSION: Oj,
              IE_VERSION: Zd,
              IS_SAFARI: Bg,
              IS_WINDOWS: Pj,
              TOUCH_ENABLED: qd,
              IS_IPAD: Cg,
              IS_IPHONE: Dg,
              IS_IOS: Pb,
              IS_ANY_SAFARI: Ue,
            },
            Fc = Jb('querySelector'),
            Qj = Jb('querySelectorAll'),
            Rj = {
              __proto__: null,
              isReal: Wa,
              isEl: Ua,
              isInFrame: Bb,
              createEl: Na,
              textContent: Ja,
              prependTo: Kb,
              hasClass: db,
              addClass: Lb,
              removeClass: Qc,
              toggleClass: ve,
              setAttributes: we,
              getAttributes: ac,
              getAttribute: function (h, d) {
                return h.getAttribute(d)
              },
              setAttribute: function (h, d, c) {
                h.setAttribute(d, c)
              },
              removeAttribute: function (h, d) {
                h.removeAttribute(d)
              },
              blockTextSelection: xe,
              unblockTextSelection: Mb,
              getBoundingClientRect: dd,
              findPosition: Nb,
              getPointerPosition: Gd,
              isTextNode: ye,
              emptyEl: Hd,
              normalizeContent: ze,
              appendContent: Id,
              insertContent: Ae,
              isSingleLeftClick: Cc,
              $: Fc,
              doubleDollar: Qj,
            },
            Ri = !1,
            eg,
            Gn = function () {
              if (Wa() && !1 !== eg.options.autoSetup) {
                var h = Array.prototype.slice.call(pa.getElementsByTagName('video')),
                  d = Array.prototype.slice.call(pa.getElementsByTagName('audio')),
                  c = Array.prototype.slice.call(pa.getElementsByTagName('video-js'))
                if ((h = h.concat(d, c)) && 0 < h.length)
                  for (d = 0, c = h.length; d < c; d++) {
                    var b = h[d]
                    if (b && b.getAttribute)
                      void 0 === b.player && null !== b.getAttribute('data-setup') && eg(b)
                    else {
                      Jd(1)
                      break
                    }
                  }
                else Ri || Jd(1)
              }
            }
          Wa() && ('complete' === pa.readyState ? Kd() : ca.addEventListener('load', Kd))
          var Sj = function (h) {
              var d = pa.createElement('style')
              d.className = h
              return d
            },
            Tj = function (h, d) {
              h.styleSheet ? (h.styleSheet.cssText = d) : (h.textContent = d)
            },
            Dc = 3,
            Uj
          ca.WeakMap ||
            (Uj = (function () {
              function h() {
                this.vdata =
                  'vdata' + Math.floor((ca.performance && ca.performance.now()) || Date.now())
                this.data = {}
              }
              var d = h.prototype
              d.set = function (c, b) {
                var a = c[this.vdata] || Dc++
                c[this.vdata] || (c[this.vdata] = a)
                this.data[a] = b
                return this
              }
              d.get = function (c) {
                var b = c[this.vdata]
                if (b) return this.data[b]
                Ea('We have no data for this element', c)
              }
              d.has = function (c) {
                return c[this.vdata] in this.data
              }
              d['delete'] = function (c) {
                var b = c[this.vdata]
                b && (delete this.data[b], delete c[this.vdata])
              }
              return h
            })())
          var vb = ca.WeakMap ? new WeakMap() : new Uj(),
            Ve,
            Hn = function () {
              if ('boolean' !== typeof Ve) {
                Ve = !1
                try {
                  var h = Object.defineProperty({}, 'passive', {
                    get: function () {
                      Ve = !0
                    },
                  })
                  ca.addEventListener('test', null, h)
                  ca.removeEventListener('test', null, h)
                } catch (d) {}
              }
              return Ve
            },
            In = ['touchstart', 'touchmove'],
            jo = { __proto__: null, fixEvent: ed, on: sb, off: tb, trigger: id, one: Je, any: Si },
            Ga = function (h, d, c) {
              d.guid || (d.guid = Dc++)
              h = d.bind(h)
              h.guid = c ? c + '_' + d.guid : d.guid
              return h
            },
            Uc = function (h, d) {
              var c = ca.performance.now()
              return function () {
                var b = ca.performance.now()
                b - c >= d && (h.apply(void 0, arguments), (c = b))
              }
            },
            ko = function (h, d, c, b) {
              void 0 === b && (b = ca)
              var a,
                e = function () {
                  var n = this,
                    q = arguments,
                    t = function () {
                      t = a = null
                      c || h.apply(n, q)
                    }
                  !a && c && h.apply(n, q)
                  b.clearTimeout(a)
                  a = b.setTimeout(t, d)
                }
              e.cancel = function () {
                b.clearTimeout(a)
                a = null
              }
              return e
            },
            kb = function () {}
          kb.prototype.allowedEvents_ = {}
          kb.prototype.on = function (h, d) {
            var c = this.addEventListener
            this.addEventListener = function () {}
            sb(this, h, d)
            this.addEventListener = c
          }
          kb.prototype.addEventListener = kb.prototype.on
          kb.prototype.off = function (h, d) {
            tb(this, h, d)
          }
          kb.prototype.removeEventListener = kb.prototype.off
          kb.prototype.one = function (h, d) {
            var c = this.addEventListener
            this.addEventListener = function () {}
            Je(this, h, d)
            this.addEventListener = c
          }
          kb.prototype.any = function (h, d) {
            var c = this.addEventListener
            this.addEventListener = function () {}
            Si(this, h, d)
            this.addEventListener = c
          }
          kb.prototype.trigger = function (h) {
            var d = h.type || h
            'string' === typeof h && (h = { type: d })
            h = ed(h)
            if (this.allowedEvents_[d] && this['on' + d]) this['on' + d](h)
            id(this, h)
          }
          kb.prototype.dispatchEvent = kb.prototype.trigger
          var $d
          kb.prototype.queueTrigger = function (h) {
            var d = this
            $d || ($d = new Map())
            var c = h.type || h,
              b = $d.get(this)
            b || ((b = new Map()), $d.set(this, b))
            var a = b.get(c)
            b['delete'](c)
            ca.clearTimeout(a)
            a = ca.setTimeout(function () {
              0 === b.size && ((b = null), $d['delete'](d))
              d.trigger(h)
            }, 0)
            b.set(c, a)
          }
          var We = function (h) {
              return 'function' === typeof h.name
                ? h.name()
                : 'string' === typeof h.name
                  ? h.name
                  : h.name_
                    ? h.name_
                    : h.constructor && h.constructor.name
                      ? h.constructor.name
                      : typeof h
            },
            tc = function (h) {
              return (
                h instanceof kb ||
                (!!h.eventBusEl_ &&
                  ['on', 'one', 'off', 'trigger'].every(function (d) {
                    return 'function' === typeof h[d]
                  }))
              )
            },
            lo = function (h, d) {
              tc(h)
                ? d()
                : (h.eventedCallbacks || (h.eventedCallbacks = []), h.eventedCallbacks.push(d))
            },
            Eg = function (h) {
              return ('string' === typeof h && /\S/.test(h)) || (Array.isArray(h) && !!h.length)
            },
            Xe = function (h, d, c) {
              if (!h || (!h.nodeName && !tc(h)))
                throw Error(
                  'Invalid target for ' +
                    We(d) +
                    '#' +
                    c +
                    '; must be a DOM node or evented object.',
                )
            },
            Vj = function (h, d, c) {
              if (!Eg(h))
                throw Error(
                  'Invalid event type for ' +
                    We(d) +
                    '#' +
                    c +
                    '; must be a non-empty string or array.',
                )
            },
            Wj = function (h, d, c) {
              if ('function' !== typeof h)
                throw Error('Invalid listener for ' + We(d) + '#' + c + '; must be a function.')
            },
            Fg = function (h, d, c) {
              var b = 3 > d.length || d[0] === h || d[0] === h.eventBusEl_
              if (b) {
                var a = h.eventBusEl_
                3 <= d.length && d.shift()
                var e = d[0]
                d = d[1]
              } else (a = d[0]), (e = d[1]), (d = d[2])
              Xe(a, h, c)
              Vj(e, h, c)
              Wj(d, h, c)
              d = Ga(h, d)
              return { isTargetingSelf: b, target: a, type: e, listener: d }
            },
            Vc = function (h, d, c, b) {
              Xe(h, h, d)
              if (h.nodeName) jo[d](h, c, b)
              else h[d](c, b)
            },
            Jn = {
              on: function () {
                for (var h = this, d = arguments.length, c = Array(d), b = 0; b < d; b++)
                  c[b] = arguments[b]
                d = Fg(this, c, 'on')
                c = d.isTargetingSelf
                var a = d.target,
                  e = d.type,
                  n = d.listener
                Vc(a, 'on', e, n)
                if (!c) {
                  var q = function () {
                    return h.off(a, e, n)
                  }
                  q.guid = n.guid
                  d = function () {
                    return h.off('dispose', q)
                  }
                  d.guid = n.guid
                  Vc(this, 'on', 'dispose', q)
                  Vc(a, 'on', 'dispose', d)
                }
              },
              one: function () {
                for (var h = this, d = arguments.length, c = Array(d), b = 0; b < d; b++)
                  c[b] = arguments[b]
                d = Fg(this, c, 'one')
                var a = d.target,
                  e = d.type,
                  n = d.listener
                d.isTargetingSelf
                  ? Vc(a, 'one', e, n)
                  : ((d = function t() {
                      h.off(a, e, t)
                      for (var v = arguments.length, r = Array(v), p = 0; p < v; p++)
                        r[p] = arguments[p]
                      n.apply(null, r)
                    }),
                    (d.guid = n.guid),
                    Vc(a, 'one', e, d))
              },
              any: function () {
                for (var h = this, d = arguments.length, c = Array(d), b = 0; b < d; b++)
                  c[b] = arguments[b]
                d = Fg(this, c, 'any')
                var a = d.target,
                  e = d.type,
                  n = d.listener
                d.isTargetingSelf
                  ? Vc(a, 'any', e, n)
                  : ((d = function t() {
                      h.off(a, e, t)
                      for (var v = arguments.length, r = Array(v), p = 0; p < v; p++)
                        r[p] = arguments[p]
                      n.apply(null, r)
                    }),
                    (d.guid = n.guid),
                    Vc(a, 'any', e, d))
              },
              off: function (h, d, c) {
                !h || Eg(h)
                  ? tb(this.eventBusEl_, h, d)
                  : (Xe(h, this, 'off'),
                    Vj(d, this, 'off'),
                    Wj(c, this, 'off'),
                    (c = Ga(this, c)),
                    this.off('dispose', c),
                    h.nodeName
                      ? (tb(h, d, c), tb(h, 'dispose', c))
                      : tc(h) && (h.off(d, c), h.off('dispose', c)))
              },
              trigger: function (h, d) {
                Xe(this.eventBusEl_, this, 'trigger')
                if (!Eg(h && 'string' !== typeof h ? h.type : h)) {
                  var c =
                    'Invalid event type for ' +
                    We(this) +
                    '#trigger; must be a non-empty string or object with a type key that has a non-empty value.'
                  if (h) (this.log || Ea).error(c)
                  else throw Error(c)
                }
                return id(this.eventBusEl_, h, d)
              },
            },
            Kn = {
              state: {},
              setState: function (h) {
                var d = this
                'function' === typeof h && (h = h())
                var c
                Z(h, function (b, a) {
                  d.state[a] !== b && ((c = c || {}), (c[a] = { from: d.state[a], to: b }))
                  d.state[a] = b
                })
                c && tc(this) && this.trigger({ changes: c, type: 'statechanged' })
                return c
              },
            },
            Ye = function (h) {
              return 'string' !== typeof h
                ? h
                : h.replace(/./, function (d) {
                    return d.toLowerCase()
                  })
            },
            Xa = function (h) {
              return 'string' !== typeof h
                ? h
                : h.replace(/./, function (d) {
                    return d.toUpperCase()
                  })
            },
            mo = function (h, d) {
              return Xa(h) === Xa(d)
            },
            no = (function () {
              function h() {
                this.map_ = {}
              }
              var d = h.prototype
              d.has = function (c) {
                return c in this.map_
              }
              d['delete'] = function (c) {
                var b = this.has(c)
                delete this.map_[c]
                return b
              }
              d.set = function (c, b) {
                this.map_[c] = b
                return this
              }
              d.forEach = function (c, b) {
                for (var a in this.map_) c.call(b, this.map_[a], a, this)
              }
              return h
            })(),
            oo = ca.Map ? ca.Map : no,
            po = (function () {
              function h() {
                this.set_ = {}
              }
              var d = h.prototype
              d.has = function (c) {
                return c in this.set_
              }
              d['delete'] = function (c) {
                var b = this.has(c)
                delete this.set_[c]
                return b
              }
              d.add = function (c) {
                this.set_[c] = 1
                return this
              }
              d.forEach = function (c, b) {
                for (var a in this.set_) c.call(b, a, a, this)
              }
              return h
            })(),
            Gg = ca.Set ? ca.Set : po,
            ja = (function () {
              function h(c, b, a) {
                this.player_ = !c && this.play ? (c = this) : c
                this.isDisposed_ = !1
                this.parentComponent_ = null
                this.options_ = Pa({}, this.options_)
                b = this.options_ = Pa(this.options_, b)
                this.id_ = b.id || (b.el && b.el.id)
                this.id_ ||
                  (this.id_ = ((c && c.id && c.id()) || 'no_player') + '_component_' + Dc++)
                this.name_ = b.name || null
                b.el ? (this.el_ = b.el) : !1 !== b.createEl && (this.el_ = this.createEl())
                !1 !== b.evented &&
                  (fg(this, { eventBusKey: this.el_ ? 'el_' : null }),
                  (this.handleLanguagechange = this.handleLanguagechange.bind(this)),
                  this.on(this.player_, 'languagechange', this.handleLanguagechange))
                Ti(this, this.constructor.defaultState)
                this.children_ = []
                this.childIndex_ = {}
                this.childNameIndex_ = {}
                this.setTimeoutIds_ = new Gg()
                this.setIntervalIds_ = new Gg()
                this.rafIds_ = new Gg()
                this.namedRafs_ = new oo()
                this.clearingTimersOnDispose_ = !1
                !1 !== b.initChildren && this.initChildren()
                this.ready(a)
                !1 !== b.reportTouchActivity && this.enableTouchActivity()
              }
              var d = h.prototype
              d.dispose = function () {
                if (!this.isDisposed_) {
                  this.readyQueue_ && (this.readyQueue_.length = 0)
                  this.trigger({ type: 'dispose', bubbles: !1 })
                  this.isDisposed_ = !0
                  if (this.children_)
                    for (var c = this.children_.length - 1; 0 <= c; c--)
                      this.children_[c].dispose && this.children_[c].dispose()
                  this.parentComponent_ =
                    this.childNameIndex_ =
                    this.childIndex_ =
                    this.children_ =
                      null
                  if (this.el_) {
                    this.el_.parentNode && this.el_.parentNode.removeChild(this.el_)
                    if (vb.has(this.el_)) vb['delete'](this.el_)
                    this.el_ = null
                  }
                  this.player_ = null
                }
              }
              d.isDisposed = function () {
                return !!this.isDisposed_
              }
              d.player = function () {
                return this.player_
              }
              d.options = function (c) {
                return c ? (this.options_ = Pa(this.options_, c)) : this.options_
              }
              d.el = function () {
                return this.el_
              }
              d.createEl = function (c, b, a) {
                return Na(c, b, a)
              }
              d.localize = function (c, b, a) {
                void 0 === a && (a = c)
                var e = this.player_.language && this.player_.language(),
                  n = this.player_.languages && this.player_.languages(),
                  q = n && n[e]
                e = e && e.split('-')[0]
                n = n && n[e]
                q && q[c] ? (a = q[c]) : n && n[c] && (a = n[c])
                b &&
                  (a = a.replace(/\{(\d+)\}/g, function (t, v) {
                    var r = (v = b[v - 1])
                    'undefined' === typeof v && (r = t)
                    return r
                  }))
                return a
              }
              d.handleLanguagechange = function () {}
              d.contentEl = function () {
                return this.contentEl_ || this.el_
              }
              d.id = function () {
                return this.id_
              }
              d.name = function () {
                return this.name_
              }
              d.children = function () {
                return this.children_
              }
              d.getChildById = function (c) {
                return this.childIndex_[c]
              }
              d.getChild = function (c) {
                if (c) return this.childNameIndex_[c]
              }
              d.getDescendant = function () {
                for (var c = arguments.length, b = Array(c), a = 0; a < c; a++) b[a] = arguments[a]
                b = b.reduce(function (e, n) {
                  return e.concat(n)
                }, [])
                c = this
                for (a = 0; a < b.length; a++)
                  if (((c = c.getChild(b[a])), !c || !c.getChild)) return
                return c
              }
              d.addChild = function (c, b, a) {
                void 0 === b && (b = {})
                void 0 === a && (a = this.children_.length)
                if ('string' === typeof c) {
                  var e = Xa(c)
                  c = b.componentClass || e
                  b.name = e
                  var n = h.getComponent(c)
                  if (!n) throw Error('Component ' + c + ' does not exist')
                  if ('function' !== typeof n) return null
                  b = new n(this.player_ || this, b)
                } else b = c
                b.parentComponent_ && b.parentComponent_.removeChild(b)
                this.children_.splice(a, 0, b)
                b.parentComponent_ = this
                'function' === typeof b.id && (this.childIndex_[b.id()] = b)
                if ((e = e || (b.name && Xa(b.name()))))
                  (this.childNameIndex_[e] = b), (this.childNameIndex_[Ye(e)] = b)
                'function' === typeof b.el &&
                  b.el() &&
                  ((e = null),
                  this.children_[a + 1] &&
                    (this.children_[a + 1].el_
                      ? (e = this.children_[a + 1].el_)
                      : Ua(this.children_[a + 1]) && (e = this.children_[a + 1])),
                  this.contentEl().insertBefore(b.el(), e))
                return b
              }
              d.removeChild = function (c) {
                'string' === typeof c && (c = this.getChild(c))
                if (c && this.children_) {
                  for (var b = !1, a = this.children_.length - 1; 0 <= a; a--)
                    if (this.children_[a] === c) {
                      b = !0
                      this.children_.splice(a, 1)
                      break
                    }
                  b &&
                    ((c.parentComponent_ = null),
                    (this.childIndex_[c.id()] = null),
                    (this.childNameIndex_[Xa(c.name())] = null),
                    (this.childNameIndex_[Ye(c.name())] = null),
                    (b = c.el()) &&
                      b.parentNode === this.contentEl() &&
                      this.contentEl().removeChild(c.el()))
                }
              }
              d.initChildren = function () {
                var c = this,
                  b = this.options_.children
                if (b) {
                  var a = this.options_,
                    e = h.getComponent('Tech')
                  var n = Array.isArray(b) ? b : Object.keys(b)
                  n.concat(
                    Object.keys(this.options_).filter(function (q) {
                      return !n.some(function (t) {
                        return 'string' === typeof t ? q === t : q === t.name
                      })
                    }),
                  )
                    .map(function (q) {
                      if ('string' === typeof q) {
                        var t = q
                        q = b[t] || c.options_[t] || {}
                      } else t = q.name
                      return { name: t, opts: q }
                    })
                    .filter(function (q) {
                      return (
                        (q = h.getComponent(q.opts.componentClass || Xa(q.name))) && !e.isTech(q)
                      )
                    })
                    .forEach(function (q) {
                      var t = q.name
                      q = q.opts
                      void 0 !== a[t] && (q = a[t])
                      !1 !== q &&
                        (!0 === q && (q = {}),
                        (q.playerOptions = c.options_.playerOptions),
                        (q = c.addChild(t, q)) && (c[t] = q))
                    })
                }
              }
              d.buildCSSClass = function () {
                return ''
              }
              d.ready = function (c, b) {
                void 0 === b && (b = !1)
                c &&
                  (this.isReady_
                    ? b
                      ? c.call(this)
                      : this.setTimeout(c, 1)
                    : ((this.readyQueue_ = this.readyQueue_ || []), this.readyQueue_.push(c)))
              }
              d.triggerReady = function () {
                this.isReady_ = !0
                this.setTimeout(function () {
                  var c = this.readyQueue_
                  this.readyQueue_ = []
                  c &&
                    0 < c.length &&
                    c.forEach(function (b) {
                      b.call(this)
                    }, this)
                  this.trigger('ready')
                }, 1)
              }
              d.$ = function (c, b) {
                return Fc(c, b || this.contentEl())
              }
              d.doubleDollar = function (c, b) {
                return Qj(c, b || this.contentEl())
              }
              d.hasClass = function (c) {
                return db(this.el_, c)
              }
              d.addClass = function (c) {
                Lb(this.el_, c)
              }
              d.removeClass = function (c) {
                Qc(this.el_, c)
              }
              d.toggleClass = function (c, b) {
                ve(this.el_, c, b)
              }
              d.show = function () {
                this.removeClass('vjs-hidden')
              }
              d.hide = function () {
                this.addClass('vjs-hidden')
              }
              d.lockShowing = function () {
                this.addClass('vjs-lock-showing')
              }
              d.unlockShowing = function () {
                this.removeClass('vjs-lock-showing')
              }
              d.getAttribute = function (c) {
                return this.el_.getAttribute(c)
              }
              d.setAttribute = function (c, b) {
                this.el_.setAttribute(c, b)
              }
              d.removeAttribute = function (c) {
                this.el_.removeAttribute(c)
              }
              d.width = function (c, b) {
                return this.dimension('width', c, b)
              }
              d.height = function (c, b) {
                return this.dimension('height', c, b)
              }
              d.dimensions = function (c, b) {
                this.width(c, !0)
                this.height(b)
              }
              d.dimension = function (c, b, a) {
                if (void 0 !== b) {
                  if (null === b || b !== b) b = 0
                  ;-1 !== ('' + b).indexOf('%') || -1 !== ('' + b).indexOf('px')
                    ? (this.el_.style[c] = b)
                    : (this.el_.style[c] = 'auto' === b ? '' : b + 'px')
                  a || this.trigger('componentresize')
                } else {
                  if (!this.el_) return 0
                  b = this.el_.style[c]
                  a = b.indexOf('px')
                  return -1 !== a
                    ? parseInt(b.slice(0, a), 10)
                    : parseInt(this.el_['offset' + Xa(c)], 10)
                }
              }
              d.currentDimension = function (c) {
                if ('width' !== c && 'height' !== c)
                  throw Error('currentDimension only accepts width or height value')
                var b = qa(this.el_, c)
                b = parseFloat(b)
                if (0 === b || isNaN(b)) (c = 'offset' + Xa(c)), (b = this.el_[c])
                return b
              }
              d.currentDimensions = function () {
                return {
                  width: this.currentDimension('width'),
                  height: this.currentDimension('height'),
                }
              }
              d.currentWidth = function () {
                return this.currentDimension('width')
              }
              d.currentHeight = function () {
                return this.currentDimension('height')
              }
              d.focus = function () {
                this.el_.focus()
              }
              d.blur = function () {
                this.el_.blur()
              }
              d.handleKeyDown = function (c) {
                this.player_ && (c.stopPropagation(), this.player_.handleKeyDown(c))
              }
              d.handleKeyPress = function (c) {
                this.handleKeyDown(c)
              }
              d.emitTapEvents = function () {
                var c = 0,
                  b = null,
                  a
                this.on('touchstart', function (n) {
                  1 === n.touches.length &&
                    ((b = { pageX: n.touches[0].pageX, pageY: n.touches[0].pageY }),
                    (c = ca.performance.now()),
                    (a = !0))
                })
                this.on('touchmove', function (n) {
                  if (1 < n.touches.length) a = !1
                  else if (b) {
                    var q = n.touches[0].pageX - b.pageX
                    n = n.touches[0].pageY - b.pageY
                    10 < Math.sqrt(q * q + n * n) && (a = !1)
                  }
                })
                var e = function () {
                  a = !1
                }
                this.on('touchleave', e)
                this.on('touchcancel', e)
                this.on('touchend', function (n) {
                  b = null
                  !0 === a &&
                    200 > ca.performance.now() - c &&
                    (n.preventDefault(), this.trigger('tap'))
                })
              }
              d.enableTouchActivity = function () {
                if (this.player() && this.player().reportUserActivity) {
                  var c = Ga(this.player(), this.player().reportUserActivity),
                    b
                  this.on('touchstart', function () {
                    c()
                    this.clearInterval(b)
                    b = this.setInterval(c, 250)
                  })
                  var a = function (e) {
                    c()
                    this.clearInterval(b)
                  }
                  this.on('touchmove', c)
                  this.on('touchend', a)
                  this.on('touchcancel', a)
                }
              }
              d.setTimeout = function (c, b) {
                var a = this
                c = Ga(this, c)
                this.clearTimersOnDispose_()
                var e = ca.setTimeout(function () {
                  if (a.setTimeoutIds_.has(e)) a.setTimeoutIds_['delete'](e)
                  c()
                }, b)
                this.setTimeoutIds_.add(e)
                return e
              }
              d.clearTimeout = function (c) {
                this.setTimeoutIds_.has(c) && (this.setTimeoutIds_['delete'](c), ca.clearTimeout(c))
                return c
              }
              d.setInterval = function (c, b) {
                c = Ga(this, c)
                this.clearTimersOnDispose_()
                c = ca.setInterval(c, b)
                this.setIntervalIds_.add(c)
                return c
              }
              d.clearInterval = function (c) {
                this.setIntervalIds_.has(c) &&
                  (this.setIntervalIds_['delete'](c), ca.clearInterval(c))
                return c
              }
              d.requestAnimationFrame = function (c) {
                var b = this
                if (!this.supportsRaf_) return this.setTimeout(c, 1e3 / 60)
                this.clearTimersOnDispose_()
                c = Ga(this, c)
                var a = ca.requestAnimationFrame(function () {
                  if (b.rafIds_.has(a)) b.rafIds_['delete'](a)
                  c()
                })
                this.rafIds_.add(a)
                return a
              }
              d.requestNamedAnimationFrame = function (c, b) {
                var a = this
                if (!this.namedRafs_.has(c)) {
                  this.clearTimersOnDispose_()
                  b = Ga(this, b)
                  var e = this.requestAnimationFrame(function () {
                    b()
                    if (a.namedRafs_.has(c)) a.namedRafs_['delete'](c)
                  })
                  this.namedRafs_.set(c, e)
                  return c
                }
              }
              d.cancelNamedAnimationFrame = function (c) {
                this.namedRafs_.has(c) &&
                  (this.cancelAnimationFrame(this.namedRafs_.get(c)), this.namedRafs_['delete'](c))
              }
              d.cancelAnimationFrame = function (c) {
                if (!this.supportsRaf_) return this.clearTimeout(c)
                this.rafIds_.has(c) && (this.rafIds_['delete'](c), ca.cancelAnimationFrame(c))
                return c
              }
              d.clearTimersOnDispose_ = function () {
                var c = this
                this.clearingTimersOnDispose_ ||
                  ((this.clearingTimersOnDispose_ = !0),
                  this.one('dispose', function () {
                    ;[
                      ['namedRafs_', 'cancelNamedAnimationFrame'],
                      ['rafIds_', 'cancelAnimationFrame'],
                      ['setTimeoutIds_', 'clearTimeout'],
                      ['setIntervalIds_', 'clearInterval'],
                    ].forEach(function (b) {
                      var a = b[1]
                      c[b[0]].forEach(function (e, n) {
                        return c[a](n)
                      })
                    })
                    c.clearingTimersOnDispose_ = !1
                  }))
              }
              h.registerComponent = function (c, b) {
                if ('string' !== typeof c || !c)
                  throw Error('Illegal component name, "' + c + '"; must be a non-empty string.')
                var a = h.getComponent('Tech')
                a = a && a.isTech(b)
                var e = h === b || h.prototype.isPrototypeOf(b.prototype)
                if (a || !e)
                  throw Error(
                    'Illegal component, "' +
                      c +
                      '"; ' +
                      (a
                        ? 'techs must be registered using Tech.registerTech()'
                        : 'must be a Component subclass') +
                      '.',
                  )
                c = Xa(c)
                h.components_ || (h.components_ = {})
                a = h.getComponent('Player')
                if ('Player' === c && a && a.players) {
                  var n = a.players
                  a = Object.keys(n)
                  if (
                    n &&
                    0 < a.length &&
                    a
                      .map(function (q) {
                        return n[q]
                      })
                      .every(Boolean)
                  )
                    throw Error('Can not register Player component after player has been created.')
                }
                h.components_[c] = b
                return (h.components_[Ye(c)] = b)
              }
              h.getComponent = function (c) {
                if (c && h.components_) return h.components_[c]
              }
              return h
            })()
          ja.prototype.supportsRaf_ =
            'function' === typeof ca.requestAnimationFrame &&
            'function' === typeof ca.cancelAnimationFrame
          ja.registerComponent('Component', ja)
          var Fa = function (h) {
            if (void 0 === h)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
            return h
          }
          y(function (h) {
            function d(c) {
              '@babel/helpers - typeof'
              h.exports =
                'function' === typeof Symbol && 'symbol' === typeof Symbol.iterator
                  ? (d = function (b) {
                      return typeof b
                    })
                  : (d = function (b) {
                      return b &&
                        'function' === typeof Symbol &&
                        b.constructor === Symbol &&
                        b !== Symbol.prototype
                        ? 'symbol'
                        : typeof b
                    })
              return d(c)
            }
            h.exports = d
          })
          y(function (h) {
            function d(c) {
              h.exports = d = Object.setPrototypeOf
                ? Object.getPrototypeOf
                : function (b) {
                    return b.__proto__ || Object.getPrototypeOf(b)
                  }
              return d(c)
            }
            h.exports = d
          })
          var ua = function (h, d) {
            h.prototype = Object.create(d.prototype)
            h.prototype.constructor = h
            h.__proto__ = d
          }
          wb.prototype.code = 0
          wb.prototype.message = ''
          wb.prototype.status = null
          wb.errorTypes =
            'MEDIA_ERR_CUSTOM MEDIA_ERR_ABORTED MEDIA_ERR_NETWORK MEDIA_ERR_DECODE MEDIA_ERR_SRC_NOT_SUPPORTED MEDIA_ERR_ENCRYPTED'.split(
              ' ',
            )
          wb.defaultMessages = {
            1: 'You aborted the media playback',
            2: 'A network error caused the media download to fail part-way.',
            3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',
            4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',
            5: 'The media is encrypted and we do not have the keys to decrypt it.',
          }
          for (var rd = 0; rd < wb.errorTypes.length; rd++)
            (wb[wb.errorTypes[rd]] = rd), (wb.prototype[wb.errorTypes[rd]] = rd)
          var Hg = function (h) {
              return 'kind label language id inBandMetadataTrackDispatchType mode src'
                .split(' ')
                .reduce(
                  function (d, c, b) {
                    h[c] && (d[c] = h[c])
                    return d
                  },
                  {
                    cues:
                      h.cues &&
                      Array.prototype.map.call(h.cues, function (d) {
                        return {
                          startTime: d.startTime,
                          endTime: d.endTime,
                          text: d.text,
                          id: d.id,
                        }
                      }),
                  },
                )
            },
            Xj = {
              textTracksToJson: function (h) {
                var d = h.doubleDollar('track'),
                  c = Array.prototype.map.call(d, function (b) {
                    return b.track
                  })
                return Array.prototype.map
                  .call(d, function (b) {
                    var a = Hg(b.track)
                    b.src && (a.src = b.src)
                    return a
                  })
                  .concat(
                    Array.prototype.filter
                      .call(h.textTracks(), function (b) {
                        return -1 === c.indexOf(b)
                      })
                      .map(Hg),
                  )
              },
              jsonToTextTracks: function (h, d) {
                h.forEach(function (c) {
                  var b = d.addRemoteTextTrack(c).track
                  !c.src &&
                    c.cues &&
                    c.cues.forEach(function (a) {
                      return b.addCue(a)
                    })
                })
                return d.textTracks()
              },
              trackToJson_: Hg,
            },
            Ba = y(function (h, d) {
              function c(q) {
                if (q && 'object' === typeof q) {
                  var t = q.which || q.keyCode || q.charCode
                  t && (q = t)
                }
                if ('number' === typeof q) return e[q]
                q = String(q)
                if ((t = b[q.toLowerCase()]) || (t = a[q.toLowerCase()])) return t
                if (1 === q.length) return q.charCodeAt(0)
              }
              c.isEventKey = function (q, t) {
                if (q && 'object' === typeof q) {
                  q = q.which || q.keyCode || q.charCode
                  if (null === q || void 0 === q) return !1
                  if ('string' === typeof t) {
                    var v = b[t.toLowerCase()]
                    if (v || (v = a[t.toLowerCase()])) return v === q
                  } else if ('number' === typeof t) return t === q
                  return !1
                }
              }
              d = h.exports = c
              var b =
                  (d.code =
                  d.codes =
                    {
                      backspace: 8,
                      tab: 9,
                      enter: 13,
                      shift: 16,
                      ctrl: 17,
                      alt: 18,
                      'pause/break': 19,
                      'caps lock': 20,
                      esc: 27,
                      space: 32,
                      'page up': 33,
                      'page down': 34,
                      end: 35,
                      home: 36,
                      left: 37,
                      up: 38,
                      right: 39,
                      down: 40,
                      insert: 45,
                      delete: 46,
                      command: 91,
                      'left command': 91,
                      'right command': 93,
                      'numpad *': 106,
                      'numpad +': 107,
                      'numpad -': 109,
                      'numpad .': 110,
                      'numpad /': 111,
                      'num lock': 144,
                      'scroll lock': 145,
                      'my computer': 182,
                      'my calculator': 183,
                      ';': 186,
                      '=': 187,
                      ',': 188,
                      '-': 189,
                      '.': 190,
                      '/': 191,
                      '`': 192,
                      '[': 219,
                      '\\': 220,
                      ']': 221,
                      "'": 222,
                    }),
                a = (d.aliases = {
                  windows: 91,
                  '\u21e7': 16,
                  '\u2325': 18,
                  '\u2303': 17,
                  '\u2318': 91,
                  ctl: 17,
                  control: 17,
                  option: 18,
                  pause: 19,
                  break: 19,
                  caps: 20,
                  return: 13,
                  escape: 27,
                  spc: 32,
                  spacebar: 32,
                  pgup: 33,
                  pgdn: 34,
                  ins: 45,
                  del: 46,
                  cmd: 91,
                })
              for (h = 97; 123 > h; h++) b[String.fromCharCode(h)] = h - 32
              for (h = 48; 58 > h; h++) b[h - 48] = h
              for (h = 1; 13 > h; h++) b['f' + h] = h + 111
              for (h = 0; 10 > h; h++) b['numpad ' + h] = h + 96
              var e = (d.names = d.title = {})
              for (h in b) e[b[h]] = h
              for (var n in a) b[n] = a[n]
            })
          Ba.code
          Ba.codes
          Ba.aliases
          Ba.names
          Ba.title
          var sd = (function (h) {
            function d(b, a) {
              b = h.call(this, b, a) || this
              b.opened_ = b.hasBeenOpened_ = b.hasBeenFilled_ = !1
              b.closeable(!b.options_.uncloseable)
              b.content(b.options_.content)
              b.contentEl_ = Na(
                'div',
                { className: 'vjs-modal-dialog-content' },
                { role: 'document' },
              )
              b.descEl_ = Na('p', {
                className: 'vjs-modal-dialog-description vjs-control-text',
                id: b.el().getAttribute('aria-describedby'),
              })
              Ja(b.descEl_, b.description())
              b.el_.appendChild(b.descEl_)
              b.el_.appendChild(b.contentEl_)
              return b
            }
            ua(d, h)
            var c = d.prototype
            c.createEl = function () {
              return h.prototype.createEl.call(
                this,
                'div',
                { className: this.buildCSSClass(), tabIndex: -1 },
                {
                  'aria-describedby': this.id() + '_description',
                  'aria-hidden': 'true',
                  'aria-label': this.label(),
                  role: 'dialog',
                },
              )
            }
            c.dispose = function () {
              this.previouslyActiveEl_ = this.descEl_ = this.contentEl_ = null
              h.prototype.dispose.call(this)
            }
            c.buildCSSClass = function () {
              return 'vjs-modal-dialog vjs-hidden ' + h.prototype.buildCSSClass.call(this)
            }
            c.label = function () {
              return this.localize(this.options_.label || 'Modal Window')
            }
            c.description = function () {
              var b = this.options_.description || this.localize('This is a modal window.')
              this.closeable() &&
                (b +=
                  ' ' +
                  this.localize(
                    'This modal can be closed by pressing the Escape key or activating the close button.',
                  ))
              return b
            }
            c.open = function () {
              if (!this.opened_) {
                var b = this.player()
                this.trigger('beforemodalopen')
                this.opened_ = !0
                ;(this.options_.fillAlways || (!this.hasBeenOpened_ && !this.hasBeenFilled_)) &&
                  this.fill()
                this.wasPlaying_ = !b.paused()
                this.options_.pauseOnOpen && this.wasPlaying_ && b.pause()
                this.on('keydown', this.handleKeyDown)
                this.hadControls_ = b.controls()
                b.controls(!1)
                this.show()
                this.conditionalFocus_()
                this.el().setAttribute('aria-hidden', 'false')
                this.trigger('modalopen')
                this.hasBeenOpened_ = !0
              }
            }
            c.opened = function (b) {
              if ('boolean' === typeof b) this[b ? 'open' : 'close']()
              return this.opened_
            }
            c.close = function () {
              if (this.opened_) {
                var b = this.player()
                this.trigger('beforemodalclose')
                this.opened_ = !1
                this.wasPlaying_ && this.options_.pauseOnOpen && b.play()
                this.off('keydown', this.handleKeyDown)
                this.hadControls_ && b.controls(!0)
                this.hide()
                this.el().setAttribute('aria-hidden', 'true')
                this.trigger('modalclose')
                this.conditionalBlur_()
                this.options_.temporary && this.dispose()
              }
            }
            c.closeable = function (b) {
              if ('boolean' === typeof b) {
                b = this.closeable_ = !!b
                var a = this.getChild('closeButton')
                if (b && !a) {
                  var e = this.contentEl_
                  this.contentEl_ = this.el_
                  a = this.addChild('closeButton', { controlText: 'Close Modal Dialog' })
                  this.contentEl_ = e
                  this.on(a, 'close', this.close)
                }
                !b && a && (this.off(a, 'close', this.close), this.removeChild(a), a.dispose())
              }
              return this.closeable_
            }
            c.fill = function () {
              this.fillWith(this.content())
            }
            c.fillWith = function (b) {
              var a = this.contentEl(),
                e = a.parentNode,
                n = a.nextSibling
              this.trigger('beforemodalfill')
              this.hasBeenFilled_ = !0
              e.removeChild(a)
              this.empty()
              Ae(a, b)
              this.trigger('modalfill')
              n ? e.insertBefore(a, n) : e.appendChild(a)
              ;(b = this.getChild('closeButton')) && e.appendChild(b.el_)
            }
            c.empty = function () {
              this.trigger('beforemodalempty')
              Hd(this.contentEl())
              this.trigger('modalempty')
            }
            c.content = function (b) {
              'undefined' !== typeof b && (this.content_ = b)
              return this.content_
            }
            c.conditionalFocus_ = function () {
              var b = pa.activeElement,
                a = this.player_.el_
              this.previouslyActiveEl_ = null
              if (a.contains(b) || a === b) (this.previouslyActiveEl_ = b), this.focus()
            }
            c.conditionalBlur_ = function () {
              this.previouslyActiveEl_ &&
                (this.previouslyActiveEl_.focus(), (this.previouslyActiveEl_ = null))
            }
            c.handleKeyDown = function (b) {
              b.stopPropagation()
              if (Ba.isEventKey(b, 'Escape') && this.closeable()) b.preventDefault(), this.close()
              else if (Ba.isEventKey(b, 'Tab')) {
                for (
                  var a = this.focusableEls_(), e = this.el_.querySelector(':focus'), n, q = 0;
                  q < a.length;
                  q++
                )
                  if (e === a[q]) {
                    n = q
                    break
                  }
                pa.activeElement === this.el_ && (n = 0)
                b.shiftKey && 0 === n
                  ? (a[a.length - 1].focus(), b.preventDefault())
                  : b.shiftKey || n !== a.length - 1 || (a[0].focus(), b.preventDefault())
              }
            }
            c.focusableEls_ = function () {
              var b = this.el_.querySelectorAll('*')
              return Array.prototype.filter.call(b, function (a) {
                return (
                  ((a instanceof ca.HTMLAnchorElement || a instanceof ca.HTMLAreaElement) &&
                    a.hasAttribute('href')) ||
                  ((a instanceof ca.HTMLInputElement ||
                    a instanceof ca.HTMLSelectElement ||
                    a instanceof ca.HTMLTextAreaElement ||
                    a instanceof ca.HTMLButtonElement) &&
                    !a.hasAttribute('disabled')) ||
                  a instanceof ca.HTMLIFrameElement ||
                  a instanceof ca.HTMLObjectElement ||
                  a instanceof ca.HTMLEmbedElement ||
                  (a.hasAttribute('tabindex') && -1 !== a.getAttribute('tabindex')) ||
                  a.hasAttribute('contenteditable')
                )
              })
            }
            return d
          })(ja)
          sd.prototype.options_ = { pauseOnOpen: !0, temporary: !0 }
          ja.registerComponent('ModalDialog', sd)
          var td = (function (h) {
            function d(b) {
              void 0 === b && (b = [])
              var a = h.call(this) || this
              a.tracks_ = []
              Object.defineProperty(Fa(a), 'length', {
                get: function () {
                  return this.tracks_.length
                },
              })
              for (var e = 0; e < b.length; e++) a.addTrack(b[e])
              return a
            }
            ua(d, h)
            var c = d.prototype
            c.addTrack = function (b) {
              var a = this,
                e = this.tracks_.length
              '' + e in this ||
                Object.defineProperty(this, e, {
                  get: function () {
                    return this.tracks_[e]
                  },
                })
              ;-1 === this.tracks_.indexOf(b) &&
                (this.tracks_.push(b), this.trigger({ track: b, type: 'addtrack', target: this }))
              b.labelchange_ = function () {
                a.trigger({ track: b, type: 'labelchange', target: a })
              }
              tc(b) && b.addEventListener('labelchange', b.labelchange_)
            }
            c.removeTrack = function (b) {
              for (var a, e = 0, n = this.length; e < n; e++)
                if (this[e] === b) {
                  a = this[e]
                  a.off && a.off()
                  this.tracks_.splice(e, 1)
                  break
                }
              a && this.trigger({ track: a, type: 'removetrack', target: this })
            }
            c.getTrackById = function (b) {
              for (var a = null, e = 0, n = this.length; e < n; e++) {
                var q = this[e]
                if (q.id === b) {
                  a = q
                  break
                }
              }
              return a
            }
            return d
          })(kb)
          td.prototype.allowedEvents_ = {
            change: 'change',
            addtrack: 'addtrack',
            removetrack: 'removetrack',
            labelchange: 'labelchange',
          }
          for (var qo in td.prototype.allowedEvents_) td.prototype['on' + qo] = null
          var Ig = function (h, d) {
              for (var c = 0; c < h.length; c++)
                Object.keys(h[c]).length && d.id !== h[c].id && (h[c].enabled = !1)
            },
            ro = (function (h) {
              function d(b) {
                void 0 === b && (b = [])
                for (var a = b.length - 1; 0 <= a; a--)
                  if (b[a].enabled) {
                    Ig(b, b[a])
                    break
                  }
                b = h.call(this, b) || this
                b.changing_ = !1
                return b
              }
              ua(d, h)
              var c = d.prototype
              c.addTrack = function (b) {
                var a = this
                b.enabled && Ig(this, b)
                h.prototype.addTrack.call(this, b)
                b.addEventListener &&
                  ((b.enabledChange_ = function () {
                    a.changing_ ||
                      ((a.changing_ = !0), Ig(a, b), (a.changing_ = !1), a.trigger('change'))
                  }),
                  b.addEventListener('enabledchange', b.enabledChange_))
              }
              c.removeTrack = function (b) {
                h.prototype.removeTrack.call(this, b)
                b.removeEventListener &&
                  b.enabledChange_ &&
                  (b.removeEventListener('enabledchange', b.enabledChange_),
                  (b.enabledChange_ = null))
              }
              return d
            })(td),
            Jg = function (h, d) {
              for (var c = 0; c < h.length; c++)
                Object.keys(h[c]).length && d.id !== h[c].id && (h[c].selected = !1)
            },
            so = (function (h) {
              function d(b) {
                void 0 === b && (b = [])
                for (var a = b.length - 1; 0 <= a; a--)
                  if (b[a].selected) {
                    Jg(b, b[a])
                    break
                  }
                b = h.call(this, b) || this
                b.changing_ = !1
                Object.defineProperty(Fa(b), 'selectedIndex', {
                  get: function () {
                    for (var e = 0; e < this.length; e++) if (this[e].selected) return e
                    return -1
                  },
                  set: function () {},
                })
                return b
              }
              ua(d, h)
              var c = d.prototype
              c.addTrack = function (b) {
                var a = this
                b.selected && Jg(this, b)
                h.prototype.addTrack.call(this, b)
                b.addEventListener &&
                  ((b.selectedChange_ = function () {
                    a.changing_ ||
                      ((a.changing_ = !0), Jg(a, b), (a.changing_ = !1), a.trigger('change'))
                  }),
                  b.addEventListener('selectedchange', b.selectedChange_))
              }
              c.removeTrack = function (b) {
                h.prototype.removeTrack.call(this, b)
                b.removeEventListener &&
                  b.selectedChange_ &&
                  (b.removeEventListener('selectedchange', b.selectedChange_),
                  (b.selectedChange_ = null))
              }
              return d
            })(td),
            Yj = (function (h) {
              function d() {
                return h.apply(this, arguments) || this
              }
              ua(d, h)
              var c = d.prototype
              c.addTrack = function (b) {
                var a = this
                h.prototype.addTrack.call(this, b)
                this.queueChange_ ||
                  (this.queueChange_ = function () {
                    return a.queueTrigger('change')
                  })
                this.triggerSelectedlanguagechange ||
                  (this.triggerSelectedlanguagechange_ = function () {
                    return a.trigger('selectedlanguagechange')
                  })
                b.addEventListener('modechange', this.queueChange_)
                ;-1 === ['metadata', 'chapters'].indexOf(b.kind) &&
                  b.addEventListener('modechange', this.triggerSelectedlanguagechange_)
              }
              c.removeTrack = function (b) {
                h.prototype.removeTrack.call(this, b)
                b.removeEventListener &&
                  (this.queueChange_ && b.removeEventListener('modechange', this.queueChange_),
                  this.selectedlanguagechange_ &&
                    b.removeEventListener('modechange', this.triggerSelectedlanguagechange_))
              }
              return d
            })(td),
            to = (function () {
              function h(c) {
                void 0 === c && (c = [])
                this.trackElements_ = []
                Object.defineProperty(this, 'length', {
                  get: function () {
                    return this.trackElements_.length
                  },
                })
                for (var b = 0, a = c.length; b < a; b++) this.addTrackElement_(c[b])
              }
              var d = h.prototype
              d.addTrackElement_ = function (c) {
                var b = this.trackElements_.length
                '' + b in this ||
                  Object.defineProperty(this, b, {
                    get: function () {
                      return this.trackElements_[b]
                    },
                  })
                ;-1 === this.trackElements_.indexOf(c) && this.trackElements_.push(c)
              }
              d.getTrackElementByTrack_ = function (c) {
                for (var b, a = 0, e = this.trackElements_.length; a < e; a++)
                  if (c === this.trackElements_[a].track) {
                    b = this.trackElements_[a]
                    break
                  }
                return b
              }
              d.removeTrackElement_ = function (c) {
                for (var b = 0, a = this.trackElements_.length; b < a; b++)
                  if (c === this.trackElements_[b]) {
                    this.trackElements_[b].track &&
                      'function' === typeof this.trackElements_[b].track.off &&
                      this.trackElements_[b].track.off()
                    'function' === typeof this.trackElements_[b].off && this.trackElements_[b].off()
                    this.trackElements_.splice(b, 1)
                    break
                  }
              }
              return h
            })(),
            Zj = (function () {
              function h(c) {
                h.prototype.setCues_.call(this, c)
                Object.defineProperty(this, 'length', {
                  get: function () {
                    return this.length_
                  },
                })
              }
              var d = h.prototype
              d.setCues_ = function (c) {
                var b = this.length || 0,
                  a = 0,
                  e = c.length
                this.cues_ = c
                this.length_ = c.length
                c = function (n) {
                  '' + n in this ||
                    Object.defineProperty(this, '' + n, {
                      get: function () {
                        return this.cues_[n]
                      },
                    })
                }
                if (b < e) for (a = b; a < e; a++) c.call(this, a)
              }
              d.getCueById = function (c) {
                for (var b = null, a = 0, e = this.length; a < e; a++) {
                  var n = this[a]
                  if (n.id === c) {
                    b = n
                    break
                  }
                }
                return b
              }
              return h
            })(),
            uo = {
              alternative: 'alternative',
              captions: 'captions',
              main: 'main',
              sign: 'sign',
              subtitles: 'subtitles',
              commentary: 'commentary',
            },
            vo = {
              alternative: 'alternative',
              descriptions: 'descriptions',
              main: 'main',
              'main-desc': 'main-desc',
              translation: 'translation',
              commentary: 'commentary',
            },
            wo = {
              subtitles: 'subtitles',
              captions: 'captions',
              descriptions: 'descriptions',
              chapters: 'chapters',
              metadata: 'metadata',
            },
            ak = { disabled: 'disabled', hidden: 'hidden', showing: 'showing' },
            Kg = (function (h) {
              function d(c) {
                void 0 === c && (c = {})
                var b = h.call(this) || this
                var a = {
                    id: c.id || 'vjs_track_' + Dc++,
                    kind: c.kind || '',
                    language: c.language || '',
                  },
                  e = c.label || ''
                c = function (q) {
                  Object.defineProperty(Fa(b), q, {
                    get: function () {
                      return a[q]
                    },
                    set: function () {},
                  })
                }
                for (var n in a) c(n)
                Object.defineProperty(Fa(b), 'label', {
                  get: function () {
                    return e
                  },
                  set: function (q) {
                    q !== e && ((e = q), this.trigger('labelchange'))
                  },
                })
                return b
              }
              ua(d, h)
              return d
            })(kb),
            Lg = function (h) {
              var d = 'protocol hostname port pathname search hash host'.split(' '),
                c = pa.createElement('a')
              c.href = h
              var b = '' === c.host && 'file:' !== c.protocol
              if (b) {
                var a = pa.createElement('div')
                a.innerHTML = '<a href="' + h + '"></a>'
                c = a.firstChild
                a.setAttribute('style', 'display:none; position:absolute;')
                pa.body.appendChild(a)
              }
              h = {}
              for (var e = 0; e < d.length; e++) h[d[e]] = c[d[e]]
              'http:' === h.protocol && (h.host = h.host.replace(/:80$/, ''))
              'https:' === h.protocol && (h.host = h.host.replace(/:443$/, ''))
              h.protocol || (h.protocol = ca.location.protocol)
              b && pa.body.removeChild(a)
              return h
            },
            bk = function (h) {
              if (!h.match(/^https?:\/\//)) {
                var d = pa.createElement('div')
                d.innerHTML = '<a href="' + h + '">x</a>'
                h = d.firstChild.href
              }
              return h
            },
            Mg = function (h) {
              return 'string' === typeof h &&
                (h = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/.exec(
                  h,
                ))
                ? h.pop().toLowerCase()
                : ''
            },
            Ze = function (h, d) {
              void 0 === d && (d = ca.location)
              h = Lg(h)
              return (':' === h.protocol ? d.protocol : h.protocol) + h.host !== d.protocol + d.host
            },
            xo = {
              __proto__: null,
              parseUrl: Lg,
              getAbsoluteURL: bk,
              getFileExtension: Mg,
              isCrossOrigin: Ze,
            },
            ck =
              'undefined' !== typeof window
                ? window
                : 'undefined' !== typeof Eb
                  ? Eb
                  : 'undefined' !== typeof self
                    ? self
                    : {},
            Mn = Object.prototype.toString,
            Nn = function (h) {
              var d = {}
              if (!h) return d
              h.trim()
                .split('\n')
                .forEach(function (c) {
                  var b = c.indexOf(':'),
                    a = c.slice(0, b).trim().toLowerCase()
                  c = c.slice(b + 1).trim()
                  'undefined' === typeof d[a]
                    ? (d[a] = c)
                    : Array.isArray(d[a])
                      ? d[a].push(c)
                      : (d[a] = [d[a], c])
                })
              return d
            }
          cc.XMLHttpRequest = ck.XMLHttpRequest || On
          cc.XDomainRequest =
            'withCredentials' in new cc.XMLHttpRequest() ? cc.XMLHttpRequest : ck.XDomainRequest
          ;(function (h, d) {
            for (var c = 0; c < h.length; c++) d(h[c])
          })('get put post patch head delete'.split(' '), function (h) {
            cc['delete' === h ? 'del' : h] = function (d, c, b) {
              c = Wi(d, c, b)
              c.method = h.toUpperCase()
              return Xi(c)
            }
          })
          cc['default'] = cc
          var dk = function (h, d) {
              var c = new ca.WebVTT.Parser(ca, ca.vttjs, ca.WebVTT.StringDecoder()),
                b = []
              c.oncue = function (a) {
                d.addCue(a)
              }
              c.onparsingerror = function (a) {
                b.push(a)
              }
              c.onflush = function () {
                d.trigger({ type: 'loadeddata', target: d })
              }
              c.parse(h)
              0 < b.length &&
                (ca.console &&
                  ca.console.groupCollapsed &&
                  ca.console.groupCollapsed('Text Track parsing errors for ' + d.src),
                b.forEach(function (a) {
                  return Ea.error(a)
                }),
                ca.console && ca.console.groupEnd && ca.console.groupEnd())
              c.flush()
            },
            ek = function (h, d) {
              var c = { uri: h }
              if ((h = Ze(h))) c.cors = h
              if ((h = 'use-credentials' === d.tech_.crossOrigin())) c.withCredentials = h
              cc(
                c,
                Ga(this, function (b, a, e) {
                  if (b) return Ea.error(b, a)
                  d.loaded_ = !0
                  'function' !== typeof ca.WebVTT
                    ? d.tech_ &&
                      d.tech_.any(['vttjsloaded', 'vttjserror'], function (n) {
                        if ('vttjserror' === n.type)
                          Ea.error('vttjs failed to load, stopping trying to process ' + d.src)
                        else return dk(e, d)
                      })
                    : dk(e, d)
                }),
              )
            },
            ae = (function (h) {
              function d(b) {
                void 0 === b && (b = {})
                if (!b.tech) throw Error('A tech was not provided.')
                b = Pa(b, {
                  kind: wo[b.kind] || 'subtitles',
                  language: b.language || b.srclang || '',
                })
                var a = ak[b.mode] || 'disabled',
                  e = b['default']
                if ('metadata' === b.kind || 'chapters' === b.kind) a = 'hidden'
                var n = h.call(this, b) || this
                n.tech_ = b.tech
                n.cues_ = []
                n.activeCues_ = []
                n.preload_ = !1 !== n.tech_.preloadTextTracks
                var q = new Zj(n.cues_),
                  t = new Zj(n.activeCues_),
                  v = !1,
                  r = Ga(Fa(n), function () {
                    this.tech_.isReady_ &&
                      !this.tech_.isDisposed() &&
                      ((this.activeCues = this.activeCues),
                      v && (this.trigger('cuechange'), (v = !1)))
                  })
                n.tech_.one('dispose', function () {
                  n.tech_.off('timeupdate', r)
                })
                if ('disabled' !== a) n.tech_.on('timeupdate', r)
                Object.defineProperties(Fa(n), {
                  default: {
                    get: function () {
                      return e
                    },
                    set: function () {},
                  },
                  mode: {
                    get: function () {
                      return a
                    },
                    set: function (p) {
                      if (ak[p] && a !== p) {
                        a = p
                        this.preload_ ||
                          'disabled' === a ||
                          0 !== this.cues.length ||
                          ek(this.src, this)
                        this.tech_.off('timeupdate', r)
                        if ('disabled' !== a) this.tech_.on('timeupdate', r)
                        this.trigger('modechange')
                      }
                    },
                  },
                  cues: {
                    get: function () {
                      return this.loaded_ ? q : null
                    },
                    set: function () {},
                  },
                  activeCues: {
                    get: function () {
                      if (!this.loaded_) return null
                      if (0 === this.cues.length) return t
                      for (
                        var p = this.tech_.currentTime(), m = [], l = 0, f = this.cues.length;
                        l < f;
                        l++
                      ) {
                        var g = this.cues[l]
                        g.startTime <= p && g.endTime >= p
                          ? m.push(g)
                          : g.startTime === g.endTime &&
                            g.startTime <= p &&
                            g.startTime + 0.5 >= p &&
                            m.push(g)
                      }
                      v = !1
                      if (m.length !== this.activeCues_.length) v = !0
                      else
                        for (p = 0; p < m.length; p++)
                          -1 === this.activeCues_.indexOf(m[p]) && (v = !0)
                      this.activeCues_ = m
                      t.setCues_(this.activeCues_)
                      return t
                    },
                    set: function () {},
                  },
                })
                b.src
                  ? ((n.src = b.src),
                    n.preload_ || (n.loaded_ = !0),
                    (n.preload_ || ('subtitles' !== b.kind && 'captions' !== b.kind)) &&
                      ek(n.src, Fa(n)))
                  : (n.loaded_ = !0)
                return n
              }
              ua(d, h)
              var c = d.prototype
              c.addCue = function (b) {
                var a = b
                if (ca.vttjs && !(b instanceof ca.vttjs.VTTCue)) {
                  a = new ca.vttjs.VTTCue(b.startTime, b.endTime, b.text)
                  for (var e in b) e in a || (a[e] = b[e])
                  a.id = b.id
                  a.originalCue_ = b
                }
                b = this.tech_.textTracks()
                for (e = 0; e < b.length; e++) b[e] !== this && b[e].removeCue(a)
                this.cues_.push(a)
                this.cues.setCues_(this.cues_)
              }
              c.removeCue = function (b) {
                for (var a = this.cues_.length; a--; ) {
                  var e = this.cues_[a]
                  if (e === b || (e.originalCue_ && e.originalCue_ === b)) {
                    this.cues_.splice(a, 1)
                    this.cues.setCues_(this.cues_)
                    break
                  }
                }
              }
              return d
            })(Kg)
          ae.prototype.allowedEvents_ = { cuechange: 'cuechange' }
          var fk = (function (h) {
              function d(c) {
                void 0 === c && (c = {})
                var b = Pa(c, { kind: vo[c.kind] || '' })
                c = h.call(this, b) || this
                var a = !1
                Object.defineProperty(Fa(c), 'enabled', {
                  get: function () {
                    return a
                  },
                  set: function (e) {
                    'boolean' === typeof e && e !== a && ((a = e), this.trigger('enabledchange'))
                  },
                })
                b.enabled && (c.enabled = b.enabled)
                c.loaded_ = !0
                return c
              }
              ua(d, h)
              return d
            })(Kg),
            gk = (function (h) {
              function d(c) {
                void 0 === c && (c = {})
                var b = Pa(c, { kind: uo[c.kind] || '' })
                c = h.call(this, b) || this
                var a = !1
                Object.defineProperty(Fa(c), 'selected', {
                  get: function () {
                    return a
                  },
                  set: function (e) {
                    'boolean' === typeof e && e !== a && ((a = e), this.trigger('selectedchange'))
                  },
                })
                b.selected && (c.selected = b.selected)
                return c
              }
              ua(d, h)
              return d
            })(Kg),
            ud = (function (h) {
              function d(c) {
                void 0 === c && (c = {})
                var b = h.call(this) || this
                var a = new ae(c)
                b.kind = a.kind
                b.src = a.src
                b.srclang = a.language
                b.label = a.label
                b['default'] = a['default']
                Object.defineProperties(Fa(b), {
                  readyState: {
                    get: function () {
                      return e
                    },
                  },
                  track: {
                    get: function () {
                      return a
                    },
                  },
                })
                var e = 0
                a.addEventListener('loadeddata', function () {
                  e = 2
                  b.trigger({ type: 'load', target: Fa(b) })
                })
                return b
              }
              ua(d, h)
              return d
            })(kb)
          ud.prototype.allowedEvents_ = { load: 'load' }
          ud.NONE = 0
          ud.LOADING = 1
          ud.LOADED = 2
          ud.ERROR = 3
          var Wb = {
            audio: { ListClass: ro, TrackClass: fk, capitalName: 'Audio' },
            video: { ListClass: so, TrackClass: gk, capitalName: 'Video' },
            text: { ListClass: Yj, TrackClass: ae, capitalName: 'Text' },
          }
          Object.keys(Wb).forEach(function (h) {
            Wb[h].getterName = h + 'Tracks'
            Wb[h].privateName = h + 'Tracks_'
          })
          var vd = {
              remoteText: {
                ListClass: Yj,
                TrackClass: ae,
                capitalName: 'RemoteText',
                getterName: 'remoteTextTracks',
                privateName: 'remoteTextTracks_',
              },
              remoteTextEl: {
                ListClass: to,
                TrackClass: ud,
                capitalName: 'RemoteTextTrackEls',
                getterName: 'remoteTextTrackEls',
                privateName: 'remoteTextTrackEls_',
              },
            },
            zb = He({}, Wb, vd)
          vd.names = Object.keys(vd)
          Wb.names = Object.keys(Wb)
          zb.names = [].concat(vd.names).concat(Wb.names)
          var ig =
            Object.create ||
            (function () {
              function h() {}
              return function (d) {
                if (1 !== arguments.length)
                  throw Error('Object.create shim only accepts one parameter.')
                h.prototype = d
                return new h()
              }
            })()
          Qb.prototype = ig(Error.prototype)
          Qb.prototype.constructor = Qb
          Qb.Errors = {
            BadSignature: { code: 0, message: 'Malformed WebVTT signature.' },
            BadTimeStamp: { code: 1, message: 'Malformed time stamp.' },
          }
          Qd.prototype = {
            set: function (h, d) {
              this.get(h) || '' === d || (this.values[h] = d)
            },
            get: function (h, d, c) {
              return c ? (this.has(h) ? this.values[h] : d[c]) : this.has(h) ? this.values[h] : d
            },
            has: function (h) {
              return h in this.values
            },
            alt: function (h, d, c) {
              for (var b = 0; b < c.length; ++b)
                if (d === c[b]) {
                  this.set(h, d)
                  break
                }
            },
            integer: function (h, d) {
              ;/^-?\d+$/.test(d) && this.set(h, parseInt(d, 10))
            },
            percent: function (h, d) {
              return d.match(/^([\d]{1,3})(\.[\d]*)?%$/) &&
                ((d = parseFloat(d)), 0 <= d && 100 >= d)
                ? (this.set(h, d), !0)
                : !1
            },
          }
          var jg = pa.createElement('textarea'),
            Qn = {
              c: 'span',
              i: 'i',
              b: 'b',
              u: 'u',
              ruby: 'ruby',
              rt: 'rt',
              v: 'span',
              lang: 'span',
            },
            $i = {
              white: 'rgba(255,255,255,1)',
              lime: 'rgba(0,255,0,1)',
              cyan: 'rgba(0,255,255,1)',
              red: 'rgba(255,0,0,1)',
              yellow: 'rgba(255,255,0,1)',
              magenta: 'rgba(255,0,255,1)',
              blue: 'rgba(0,0,255,1)',
              black: 'rgba(0,0,0,1)',
            },
            Rn = { v: 'title', lang: 'lang' },
            Zi = { rt: 'ruby' },
            aj = [
              [1470, 1470],
              [1472, 1472],
              [1475, 1475],
              [1478, 1478],
              [1488, 1514],
              [1520, 1524],
              [1544, 1544],
              [1547, 1547],
              [1549, 1549],
              [1563, 1563],
              [1566, 1610],
              [1645, 1647],
              [1649, 1749],
              [1765, 1766],
              [1774, 1775],
              [1786, 1805],
              [1807, 1808],
              [1810, 1839],
              [1869, 1957],
              [1969, 1969],
              [1984, 2026],
              [2036, 2037],
              [2042, 2042],
              [2048, 2069],
              [2074, 2074],
              [2084, 2084],
              [2088, 2088],
              [2096, 2110],
              [2112, 2136],
              [2142, 2142],
              [2208, 2208],
              [2210, 2220],
              [8207, 8207],
              [64285, 64285],
              [64287, 64296],
              [64298, 64310],
              [64312, 64316],
              [64318, 64318],
              [64320, 64321],
              [64323, 64324],
              [64326, 64449],
              [64467, 64829],
              [64848, 64911],
              [64914, 64967],
              [65008, 65020],
              [65136, 65140],
              [65142, 65276],
              [67584, 67589],
              [67592, 67592],
              [67594, 67637],
              [67639, 67640],
              [67644, 67644],
              [67647, 67669],
              [67671, 67679],
              [67840, 67867],
              [67872, 67897],
              [67903, 67903],
              [67968, 68023],
              [68030, 68031],
              [68096, 68096],
              [68112, 68115],
              [68117, 68119],
              [68121, 68147],
              [68160, 68167],
              [68176, 68184],
              [68192, 68223],
              [68352, 68405],
              [68416, 68437],
              [68440, 68466],
              [68472, 68479],
              [68608, 68680],
              [126464, 126467],
              [126469, 126495],
              [126497, 126498],
              [126500, 126500],
              [126503, 126503],
              [126505, 126514],
              [126516, 126519],
              [126521, 126521],
              [126523, 126523],
              [126530, 126530],
              [126535, 126535],
              [126537, 126537],
              [126539, 126539],
              [126541, 126543],
              [126545, 126546],
              [126548, 126548],
              [126551, 126551],
              [126553, 126553],
              [126555, 126555],
              [126557, 126557],
              [126559, 126559],
              [126561, 126562],
              [126564, 126564],
              [126567, 126570],
              [126572, 126578],
              [126580, 126583],
              [126585, 126588],
              [126590, 126590],
              [126592, 126601],
              [126603, 126619],
              [126625, 126627],
              [126629, 126633],
              [126635, 126651],
              [1114109, 1114109],
            ]
          kg.prototype.applyStyles = function (h, d) {
            d = d || this.div
            for (var c in h) h.hasOwnProperty(c) && (d.style[c] = h[c])
          }
          kg.prototype.formatStyle = function (h, d) {
            return 0 === h ? 0 : h + d
          }
          Ke.prototype = ig(kg.prototype)
          Ke.prototype.constructor = Ke
          xb.prototype.move = function (h, d) {
            d = void 0 !== d ? d : this.lineHeight
            switch (h) {
              case '+x':
                this.left += d
                this.right += d
                break
              case '-x':
                this.left -= d
                this.right -= d
                break
              case '+y':
                this.top += d
                this.bottom += d
                break
              case '-y':
                ;(this.top -= d), (this.bottom -= d)
            }
          }
          xb.prototype.overlaps = function (h) {
            return (
              this.left < h.right &&
              this.right > h.left &&
              this.top < h.bottom &&
              this.bottom > h.top
            )
          }
          xb.prototype.overlapsAny = function (h) {
            for (var d = 0; d < h.length; d++) if (this.overlaps(h[d])) return !0
            return !1
          }
          xb.prototype.within = function (h) {
            return (
              this.top >= h.top &&
              this.bottom <= h.bottom &&
              this.left >= h.left &&
              this.right <= h.right
            )
          }
          xb.prototype.overlapsOppositeAxis = function (h, d) {
            switch (d) {
              case '+x':
                return this.left < h.left
              case '-x':
                return this.right > h.right
              case '+y':
                return this.top < h.top
              case '-y':
                return this.bottom > h.bottom
            }
          }
          xb.prototype.intersectPercentage = function (h) {
            return (
              (Math.max(0, Math.min(this.right, h.right) - Math.max(this.left, h.left)) *
                Math.max(0, Math.min(this.bottom, h.bottom) - Math.max(this.top, h.top))) /
              (this.height * this.width)
            )
          }
          xb.prototype.toCSSCompatValues = function (h) {
            return {
              top: this.top - h.top,
              bottom: h.bottom - this.bottom,
              left: this.left - h.left,
              right: h.right - this.right,
              height: this.height,
              width: this.width,
            }
          }
          xb.getSimpleBoxPosition = function (h) {
            var d = h.div ? h.div.offsetHeight : h.tagName ? h.offsetHeight : 0,
              c = h.div ? h.div.offsetWidth : h.tagName ? h.offsetWidth : 0,
              b = h.div ? h.div.offsetTop : h.tagName ? h.offsetTop : 0
            h = h.div ? h.div.getBoundingClientRect() : h.tagName ? h.getBoundingClientRect() : h
            return {
              left: h.left,
              right: h.right,
              top: h.top || b,
              height: h.height || d,
              bottom: h.bottom || b + (h.height || d),
              width: h.width || c,
            }
          }
          jd.StringDecoder = function () {
            return {
              decode: function (h) {
                if (!h) return ''
                if ('string' !== typeof h) throw Error('Error - expected string data.')
                return decodeURIComponent(encodeURIComponent(h))
              },
            }
          }
          jd.convertCueToDOMTree = function (h, d) {
            return h && d ? Yi(h, d) : null
          }
          jd.processCues = function (h, d, c) {
            if (!h || !d || !c) return null
            for (; c.firstChild; ) c.removeChild(c.firstChild)
            var b = h.document.createElement('div')
            b.style.position = 'absolute'
            b.style.left = '0'
            b.style.right = '0'
            b.style.top = '0'
            b.style.bottom = '0'
            b.style.margin = '1.5%'
            c.appendChild(b)
            if (
              (function (q) {
                for (var t = 0; t < q.length; t++)
                  if (q[t].hasBeenReset || !q[t].displayState) return !0
                return !1
              })(d)
            ) {
              var a = [],
                e = xb.getSimpleBoxPosition(b),
                n = { font: Math.round(5 * e.height) / 100 + 'px sans-serif' }
              ;(function () {
                for (var q, t, v = 0; v < d.length; v++) {
                  t = d[v]
                  q = new Ke(h, t, n)
                  b.appendChild(q.div)
                  var r = void 0,
                    p = void 0,
                    m = q,
                    l = e,
                    f = a,
                    g = new xb(m),
                    k = m.cue
                  if (
                    'number' === typeof k.line &&
                    (k.snapToLines || (0 <= k.line && 100 >= k.line))
                  )
                    var u = k.line
                  else if (k.track && k.track.textTrackList && k.track.textTrackList.mediaElement) {
                    u = k.track
                    for (var w = u.textTrackList, A = 0, H = 0; H < w.length && w[H] !== u; H++)
                      'showing' === w[H].mode && A++
                    u = -1 * ++A
                  } else u = -1
                  w = []
                  if (k.snapToLines) {
                    switch (k.vertical) {
                      case '':
                        w = ['+y', '-y']
                        p = 'height'
                        break
                      case 'rl':
                        w = ['+x', '-x']
                        p = 'width'
                        break
                      case 'lr':
                        ;(w = ['-x', '+x']), (p = 'width')
                    }
                    A = g.lineHeight
                    H = A * Math.round(u)
                    p = l[p] + A
                    var R = w[0]
                    Math.abs(H) > p && (H = (0 > H ? -1 : 1) * Math.ceil(p / A) * A)
                    0 > u && ((H += '' === k.vertical ? l.height : l.width), (w = w.reverse()))
                    g.move(R, H)
                  } else {
                    g = (g.lineHeight / l.height) * 100
                    switch (k.lineAlign) {
                      case 'center':
                        u -= g / 2
                        break
                      case 'end':
                        u -= g
                    }
                    switch (k.vertical) {
                      case '':
                        m.applyStyles({ top: m.formatStyle(u, '%') })
                        break
                      case 'rl':
                        m.applyStyles({ left: m.formatStyle(u, '%') })
                        break
                      case 'lr':
                        m.applyStyles({ right: m.formatStyle(u, '%') })
                    }
                    w = ['+y', '-x', '+x', '-y']
                    g = new xb(m)
                  }
                  a: {
                    k = g
                    g = w
                    p = new xb(k)
                    u = 1
                    for (w = 0; w < g.length; w++) {
                      for (; k.overlapsOppositeAxis(l, g[w]) || (k.within(l) && k.overlapsAny(f)); )
                        k.move(g[w])
                      if (k.within(l)) {
                        r = k
                        break a
                      }
                      A = k.intersectPercentage(l)
                      u > A && ((r = new xb(k)), (u = A))
                      k = new xb(p)
                    }
                    r = r || p
                  }
                  m.move(r.toCSSCompatValues(l))
                  t.displayState = q.div
                  a.push(xb.getSimpleBoxPosition(q))
                }
              })()
            } else for (c = 0; c < d.length; c++) b.appendChild(d[c].displayState)
          }
          jd.Parser = function (h, d, c) {
            c || ((c = d), (d = {}))
            d || (d = {})
            this.window = h
            this.vttjs = d
            this.state = 'INITIAL'
            this.buffer = ''
            this.decoder = c || new TextDecoder('utf8')
            this.regionList = []
          }
          jd.Parser.prototype = {
            reportOrThrowError: function (h) {
              if (h instanceof Qb) this.onparsingerror && this.onparsingerror(h)
              else throw h
            },
            parse: function (h) {
              function d() {
                for (var v = e.buffer, r = 0; r < v.length && '\r' !== v[r] && '\n' !== v[r]; ) ++r
                var p = v.substr(0, r)
                '\r' === v[r] && ++r
                '\n' === v[r] && ++r
                e.buffer = v.substr(r)
                return p
              }
              function c(v) {
                var r = new Qd()
                Rd(
                  v,
                  function (p, m) {
                    switch (p) {
                      case 'id':
                        r.set(p, m)
                        break
                      case 'width':
                        r.percent(p, m)
                        break
                      case 'lines':
                        r.integer(p, m)
                        break
                      case 'regionanchor':
                      case 'viewportanchor':
                        m = m.split(',')
                        if (2 !== m.length) break
                        var l = new Qd()
                        l.percent('x', m[0])
                        l.percent('y', m[1])
                        if (!l.has('x') || !l.has('y')) break
                        r.set(p + 'X', l.get('x'))
                        r.set(p + 'Y', l.get('y'))
                        break
                      case 'scroll':
                        r.alt(p, m, ['up'])
                    }
                  },
                  /=/,
                  /\s/,
                )
                r.has('id') &&
                  ((v = new (e.vttjs.VTTRegion || e.window.VTTRegion)()),
                  (v.width = r.get('width', 100)),
                  (v.lines = r.get('lines', 3)),
                  (v.regionAnchorX = r.get('regionanchorX', 0)),
                  (v.regionAnchorY = r.get('regionanchorY', 100)),
                  (v.viewportAnchorX = r.get('viewportanchorX', 0)),
                  (v.viewportAnchorY = r.get('viewportanchorY', 100)),
                  (v.scroll = r.get('scroll', '')),
                  e.onregion && e.onregion(v),
                  e.regionList.push({ id: r.get('id'), region: v }))
              }
              function b(v) {
                var r = new Qd()
                Rd(
                  v,
                  function (p, m) {
                    switch (p) {
                      case 'MPEGT':
                        r.integer(p + 'S', m)
                        break
                      case 'LOCA':
                        r.set(p + 'L', hg(m))
                    }
                  },
                  /[^\d]:/,
                  /,/,
                )
                e.ontimestampmap &&
                  e.ontimestampmap({ MPEGTS: r.get('MPEGTS'), LOCAL: r.get('LOCAL') })
              }
              function a(v) {
                v.match(/X-TIMESTAMP-MAP/)
                  ? Rd(
                      v,
                      function (r, p) {
                        switch (r) {
                          case 'X-TIMESTAMP-MAP':
                            b(p)
                        }
                      },
                      /=/,
                    )
                  : Rd(
                      v,
                      function (r, p) {
                        switch (r) {
                          case 'Region':
                            c(p)
                        }
                      },
                      /:/,
                    )
              }
              var e = this
              h && (e.buffer += e.decoder.decode(h, { stream: !0 }))
              try {
                if ('INITIAL' === e.state) {
                  if (!/\r\n|\n/.test(e.buffer)) return this
                  var n = d()
                  var q = n.match(/^WEBVTT([ \t].*)?$/)
                  if (!q || !q[0]) throw new Qb(Qb.Errors.BadSignature)
                  e.state = 'HEADER'
                }
                for (h = !1; e.buffer; ) {
                  if (!/\r\n|\n/.test(e.buffer)) return this
                  h ? (h = !1) : (n = d())
                  switch (e.state) {
                    case 'HEADER':
                      ;/:/.test(n) ? a(n) : n || (e.state = 'ID')
                      continue
                    case 'NOTE':
                      n || (e.state = 'ID')
                      continue
                    case 'ID':
                      if (/^NOTE($|[ \t])/.test(n)) {
                        e.state = 'NOTE'
                        break
                      }
                      if (!n) continue
                      e.cue = new (e.vttjs.VTTCue || e.window.VTTCue)(0, 0, '')
                      try {
                        e.cue.align = 'center'
                      } catch (v) {
                        e.cue.align = 'middle'
                      }
                      e.state = 'CUE'
                      if (-1 === n.indexOf('--\x3e')) {
                        e.cue.id = n
                        continue
                      }
                    case 'CUE':
                      try {
                        Pn(n, e.cue, e.regionList)
                      } catch (v) {
                        e.reportOrThrowError(v)
                        e.cue = null
                        e.state = 'BADCUE'
                        continue
                      }
                      e.state = 'CUETEXT'
                      continue
                    case 'CUETEXT':
                      var t = -1 !== n.indexOf('--\x3e')
                      if (!n || (t && (h = !0))) {
                        e.oncue && e.oncue(e.cue)
                        e.cue = null
                        e.state = 'ID'
                        continue
                      }
                      e.cue.text && (e.cue.text += '\n')
                      e.cue.text += n.replace(/\u2028/g, '\n').replace(/u2029/g, '\n')
                      continue
                    case 'BADCUE':
                      n || (e.state = 'ID')
                  }
                }
              } catch (v) {
                e.reportOrThrowError(v)
                if ('CUETEXT' === e.state && e.cue && e.oncue) e.oncue(e.cue)
                e.cue = null
                e.state = 'INITIAL' === e.state ? 'BADWEBVTT' : 'BADCUE'
              }
              return this
            },
            flush: function () {
              try {
                this.buffer += this.decoder.decode()
                if (this.cue || 'HEADER' === this.state) (this.buffer += '\n\n'), this.parse()
                if ('INITIAL' === this.state) throw new Qb(Qb.Errors.BadSignature)
              } catch (h) {
                this.reportOrThrowError(h)
              }
              this.onflush && this.onflush()
              return this
            },
          }
          var Vn = { '': 1, lr: 1, rl: 1 },
            Un = {
              start: 1,
              center: 1,
              end: 1,
              left: 1,
              right: 1,
              auto: 1,
              'line-left': 1,
              'line-right': 1,
            }
          bj.prototype.getCueAsHTML = function () {
            return WebVTT.convertCueToDOMTree(window, this.text)
          }
          var yo = { '': !0, up: !0 },
            zo = function () {
              var h = 100,
                d = 3,
                c = 0,
                b = 100,
                a = 0,
                e = 100,
                n = ''
              Object.defineProperties(this, {
                width: {
                  enumerable: !0,
                  get: function () {
                    return h
                  },
                  set: function (q) {
                    if (!Sd(q)) throw Error('Width must be between 0 and 100.')
                    h = q
                  },
                },
                lines: {
                  enumerable: !0,
                  get: function () {
                    return d
                  },
                  set: function (q) {
                    if ('number' !== typeof q) throw new TypeError('Lines must be set to a number.')
                    d = q
                  },
                },
                regionAnchorY: {
                  enumerable: !0,
                  get: function () {
                    return b
                  },
                  set: function (q) {
                    if (!Sd(q)) throw Error('RegionAnchorX must be between 0 and 100.')
                    b = q
                  },
                },
                regionAnchorX: {
                  enumerable: !0,
                  get: function () {
                    return c
                  },
                  set: function (q) {
                    if (!Sd(q)) throw Error('RegionAnchorY must be between 0 and 100.')
                    c = q
                  },
                },
                viewportAnchorY: {
                  enumerable: !0,
                  get: function () {
                    return e
                  },
                  set: function (q) {
                    if (!Sd(q)) throw Error('ViewportAnchorY must be between 0 and 100.')
                    e = q
                  },
                },
                viewportAnchorX: {
                  enumerable: !0,
                  get: function () {
                    return a
                  },
                  set: function (q) {
                    if (!Sd(q)) throw Error('ViewportAnchorX must be between 0 and 100.')
                    a = q
                  },
                },
                scroll: {
                  enumerable: !0,
                  get: function () {
                    return n
                  },
                  set: function (q) {
                    q = 'string' !== typeof q ? !1 : yo[q.toLowerCase()] ? q.toLowerCase() : !1
                    !1 === q
                      ? console.warn('Scroll: an invalid or illegal string was specified.')
                      : (n = q)
                  },
                },
              })
            },
            be = y(function (h) {
              h = h.exports = { WebVTT: jd, VTTCue: bj, VTTRegion: zo }
              ca.vttjs = h
              ca.WebVTT = h.WebVTT
              var d = h.VTTCue,
                c = h.VTTRegion,
                b = ca.VTTCue,
                a = ca.VTTRegion
              h.shim = function () {
                ca.VTTCue = d
                ca.VTTRegion = c
              }
              h.restore = function () {
                ca.VTTCue = b
                ca.VTTRegion = a
              }
              ca.VTTCue || h.shim()
            })
          be.WebVTT
          be.VTTCue
          be.VTTRegion
          var Oa = (function (h) {
            function d(b, a) {
              void 0 === b && (b = {})
              void 0 === a && (a = function () {})
              b.reportTouchActivity = !1
              var e = h.call(this, null, b, a) || this
              e.hasStarted_ = !1
              e.on('playing', function () {
                this.hasStarted_ = !0
              })
              e.on('loadstart', function () {
                this.hasStarted_ = !1
              })
              zb.names.forEach(function (n) {
                n = zb[n]
                b && b[n.getterName] && (e[n.privateName] = b[n.getterName])
              })
              e.featuresProgressEvents || e.manualProgressOn()
              e.featuresTimeupdateEvents || e.manualTimeUpdatesOn()
              ;['Text', 'Audio', 'Video'].forEach(function (n) {
                !1 === b['native' + n + 'Tracks'] && (e['featuresNative' + n + 'Tracks'] = !1)
              })
              if (!1 === b.nativeCaptions || !1 === b.nativeTextTracks)
                e.featuresNativeTextTracks = !1
              else if (!0 === b.nativeCaptions || !0 === b.nativeTextTracks)
                e.featuresNativeTextTracks = !0
              e.featuresNativeTextTracks || e.emulateTextTracks()
              e.preloadTextTracks = !1 !== b.preloadTextTracks
              e.autoRemoteTextTracks_ = new zb.text.ListClass()
              e.initTrackListeners()
              b.nativeControlsForTouch || e.emitTapEvents()
              e.constructor && (e.name_ = e.constructor.name || 'Unknown Tech')
              return e
            }
            ua(d, h)
            var c = d.prototype
            c.triggerSourceset = function (b) {
              var a = this
              if (!this.isReady_)
                this.one('ready', function () {
                  return a.setTimeout(function () {
                    return a.triggerSourceset(b)
                  }, 1)
                })
              this.trigger({ src: b, type: 'sourceset' })
            }
            c.manualProgressOn = function () {
              this.on('durationchange', this.onDurationChange)
              this.manualProgress = !0
              this.one('ready', this.trackProgress)
            }
            c.manualProgressOff = function () {
              this.manualProgress = !1
              this.stopTrackingProgress()
              this.off('durationchange', this.onDurationChange)
            }
            c.trackProgress = function (b) {
              this.stopTrackingProgress()
              this.progressInterval = this.setInterval(
                Ga(this, function () {
                  var a = this.bufferedPercent()
                  this.bufferedPercent_ !== a && this.trigger('progress')
                  this.bufferedPercent_ = a
                  1 === a && this.stopTrackingProgress()
                }),
                500,
              )
            }
            c.onDurationChange = function (b) {
              this.duration_ = this.duration()
            }
            c.buffered = function () {
              return Rc(0, 0)
            }
            c.bufferedPercent = function () {
              return Vi(this.buffered(), this.duration_)
            }
            c.stopTrackingProgress = function () {
              this.clearInterval(this.progressInterval)
            }
            c.manualTimeUpdatesOn = function () {
              this.manualTimeUpdates = !0
              this.on('play', this.trackCurrentTime)
              this.on('pause', this.stopTrackingCurrentTime)
            }
            c.manualTimeUpdatesOff = function () {
              this.manualTimeUpdates = !1
              this.stopTrackingCurrentTime()
              this.off('play', this.trackCurrentTime)
              this.off('pause', this.stopTrackingCurrentTime)
            }
            c.trackCurrentTime = function () {
              this.currentTimeInterval && this.stopTrackingCurrentTime()
              this.currentTimeInterval = this.setInterval(function () {
                this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 })
              }, 250)
            }
            c.stopTrackingCurrentTime = function () {
              this.clearInterval(this.currentTimeInterval)
              this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 })
            }
            c.dispose = function () {
              this.clearTracks(Wb.names)
              this.manualProgress && this.manualProgressOff()
              this.manualTimeUpdates && this.manualTimeUpdatesOff()
              h.prototype.dispose.call(this)
            }
            c.clearTracks = function (b) {
              var a = this
              b = [].concat(b)
              b.forEach(function (e) {
                for (var n = a[e + 'Tracks']() || [], q = n.length; q--; ) {
                  var t = n[q]
                  'text' === e && a.removeRemoteTextTrack(t)
                  n.removeTrack(t)
                }
              })
            }
            c.cleanupAutoTextTracks = function () {
              for (var b = this.autoRemoteTextTracks_ || [], a = b.length; a--; )
                this.removeRemoteTextTrack(b[a])
            }
            c.reset = function () {}
            c.crossOrigin = function () {}
            c.setCrossOrigin = function () {}
            c.error = function (b) {
              void 0 !== b && ((this.error_ = new wb(b)), this.trigger('error'))
              return this.error_
            }
            c.played = function () {
              return this.hasStarted_ ? Rc(0, 0) : Rc()
            }
            c.play = function () {}
            c.setScrubbing = function () {}
            c.scrubbing = function () {}
            c.setCurrentTime = function () {
              this.manualTimeUpdates &&
                this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 })
            }
            c.initTrackListeners = function () {
              var b = this
              Wb.names.forEach(function (a) {
                var e = function () {
                    b.trigger(a + 'trackchange')
                  },
                  n = b[Wb[a].getterName]()
                n.addEventListener('removetrack', e)
                n.addEventListener('addtrack', e)
                b.on('dispose', function () {
                  n.removeEventListener('removetrack', e)
                  n.removeEventListener('addtrack', e)
                })
              })
            }
            c.addWebVttScript_ = function () {
              var b = this
              if (!ca.WebVTT)
                if (pa.body.contains(this.el()))
                  if (!this.options_['vtt.js'] && aa(be) && 0 < Object.keys(be).length)
                    this.trigger('vttjsloaded')
                  else {
                    var a = pa.createElement('script')
                    a.src =
                      this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js'
                    a.onload = function () {
                      b.trigger('vttjsloaded')
                    }
                    a.onerror = function () {
                      b.trigger('vttjserror')
                    }
                    this.on('dispose', function () {
                      a.onload = null
                      a.onerror = null
                    })
                    ca.WebVTT = !0
                    this.el().parentNode.appendChild(a)
                  }
                else this.ready(this.addWebVttScript_)
            }
            c.emulateTextTracks = function () {
              var b = this,
                a = this.textTracks(),
                e = this.remoteTextTracks(),
                n = function (r) {
                  return a.addTrack(r.track)
                },
                q = function (r) {
                  return a.removeTrack(r.track)
                }
              e.on('addtrack', n)
              e.on('removetrack', q)
              this.addWebVttScript_()
              var t = function () {
                  return b.trigger('texttrackchange')
                },
                v = function () {
                  t()
                  for (var r = 0; r < a.length; r++) {
                    var p = a[r]
                    p.removeEventListener('cuechange', t)
                    'showing' === p.mode && p.addEventListener('cuechange', t)
                  }
                }
              v()
              a.addEventListener('change', v)
              a.addEventListener('addtrack', v)
              a.addEventListener('removetrack', v)
              this.on('dispose', function () {
                e.off('addtrack', n)
                e.off('removetrack', q)
                a.removeEventListener('change', v)
                a.removeEventListener('addtrack', v)
                a.removeEventListener('removetrack', v)
                for (var r = 0; r < a.length; r++) a[r].removeEventListener('cuechange', t)
              })
            }
            c.addTextTrack = function (b, a, e) {
              if (!b) throw Error('TextTrack kind is required but was not provided')
              var n = void 0
              void 0 === n && (n = {})
              var q = this.textTracks()
              n.kind = b
              a && (n.label = a)
              e && (n.language = e)
              n.tech = this
              b = new zb.text.TrackClass(n)
              q.addTrack(b)
              return b
            }
            c.createRemoteTextTrack = function (b) {
              b = Pa(b, { tech: this })
              return new vd.remoteTextEl.TrackClass(b)
            }
            c.addRemoteTextTrack = function (b, a) {
              var e = this
              void 0 === b && (b = {})
              var n = this.createRemoteTextTrack(b)
              !0 !== a &&
                !1 !== a &&
                (Ea.warn(
                  'Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js',
                ),
                (a = !0))
              this.remoteTextTrackEls().addTrackElement_(n)
              this.remoteTextTracks().addTrack(n.track)
              !0 !== a &&
                this.ready(function () {
                  return e.autoRemoteTextTracks_.addTrack(n.track)
                })
              return n
            }
            c.removeRemoteTextTrack = function (b) {
              var a = this.remoteTextTrackEls().getTrackElementByTrack_(b)
              this.remoteTextTrackEls().removeTrackElement_(a)
              this.remoteTextTracks().removeTrack(b)
              this.autoRemoteTextTracks_.removeTrack(b)
            }
            c.getVideoPlaybackQuality = function () {
              return {}
            }
            c.requestPictureInPicture = function () {
              var b = this.options_.Promise || ca.Promise
              if (b) return b.reject()
            }
            c.disablePictureInPicture = function () {
              return !0
            }
            c.setDisablePictureInPicture = function () {}
            c.setPoster = function () {}
            c.playsinline = function () {}
            c.setPlaysinline = function () {}
            c.overrideNativeAudioTracks = function () {}
            c.overrideNativeVideoTracks = function () {}
            c.canPlayType = function () {
              return ''
            }
            d.canPlayType = function () {
              return ''
            }
            d.canPlaySource = function (b, a) {
              return d.canPlayType(b.type)
            }
            d.isTech = function (b) {
              return b.prototype instanceof d || b instanceof d || b === d
            }
            d.registerTech = function (b, a) {
              d.techs_ || (d.techs_ = {})
              if (!d.isTech(a)) throw Error('Tech ' + b + ' must be a Tech')
              if (!d.canPlayType) throw Error('Techs must have a static canPlayType method on them')
              if (!d.canPlaySource)
                throw Error('Techs must have a static canPlaySource method on them')
              b = Xa(b)
              d.techs_[b] = a
              d.techs_[Ye(b)] = a
              'Tech' !== b && d.defaultTechOrder_.push(b)
              return a
            }
            d.getTech = function (b) {
              if (b) {
                if (d.techs_ && d.techs_[b]) return d.techs_[b]
                b = Xa(b)
                if (ca && ca.videojs && ca.videojs[b])
                  return (
                    Ea.warn(
                      'The ' +
                        b +
                        ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)',
                    ),
                    ca.videojs[b]
                  )
              }
            }
            return d
          })(ja)
          zb.names.forEach(function (h) {
            var d = zb[h]
            Oa.prototype[d.getterName] = function () {
              this[d.privateName] = this[d.privateName] || new d.ListClass()
              return this[d.privateName]
            }
          })
          Oa.prototype.featuresVolumeControl = !0
          Oa.prototype.featuresMuteControl = !0
          Oa.prototype.featuresFullscreenResize = !1
          Oa.prototype.featuresPlaybackRate = !1
          Oa.prototype.featuresProgressEvents = !1
          Oa.prototype.featuresSourceset = !1
          Oa.prototype.featuresTimeupdateEvents = !1
          Oa.prototype.featuresNativeTextTracks = !1
          Oa.withSourceHandlers = function (h) {
            h.registerSourceHandler = function (d, c) {
              var b = h.sourceHandlers
              b || (b = h.sourceHandlers = [])
              void 0 === c && (c = b.length)
              b.splice(c, 0, d)
            }
            h.canPlayType = function (d) {
              for (var c = h.sourceHandlers || [], b, a = 0; a < c.length; a++)
                if ((b = c[a].canPlayType(d))) return b
              return ''
            }
            h.selectSourceHandler = function (d, c) {
              for (var b = h.sourceHandlers || [], a, e = 0; e < b.length; e++)
                if ((a = b[e].canHandleSource(d, c))) return b[e]
              return null
            }
            h.canPlaySource = function (d, c) {
              var b = h.selectSourceHandler(d, c)
              return b ? b.canHandleSource(d, c) : ''
            }
            ;['seekable', 'seeking', 'duration'].forEach(function (d) {
              var c = this[d]
              'function' === typeof c &&
                (this[d] = function () {
                  return this.sourceHandler_ && this.sourceHandler_[d]
                    ? this.sourceHandler_[d].apply(this.sourceHandler_, arguments)
                    : c.apply(this, arguments)
                })
            }, h.prototype)
            h.prototype.setSource = function (d) {
              var c = h.selectSourceHandler(d, this.options_)
              c ||
                (h.nativeSourceHandler
                  ? (c = h.nativeSourceHandler)
                  : Ea.error('No source handler found for the current source.'))
              this.disposeSourceHandler()
              this.off('dispose', this.disposeSourceHandler)
              c !== h.nativeSourceHandler && (this.currentSource_ = d)
              this.sourceHandler_ = c.handleSource(d, this, this.options_)
              this.one('dispose', this.disposeSourceHandler)
            }
            h.prototype.disposeSourceHandler = function () {
              this.currentSource_ &&
                (this.clearTracks(['audio', 'video']), (this.currentSource_ = null))
              this.cleanupAutoTextTracks()
              this.sourceHandler_ &&
                (this.sourceHandler_.dispose && this.sourceHandler_.dispose(),
                (this.sourceHandler_ = null))
            }
          }
          ja.registerComponent('Tech', Oa)
          Oa.registerTech('Tech', Oa)
          Oa.defaultTechOrder_ = []
          var Tc = {},
            ng = {},
            Le = {},
            Ao = {
              buffered: 1,
              currentTime: 1,
              duration: 1,
              muted: 1,
              played: 1,
              paused: 1,
              seekable: 1,
              volume: 1,
            },
            Bo = { setCurrentTime: 1, setMuted: 1, setVolume: 1 },
            hk = { play: 1, pause: 1 },
            Co = {
              opus: 'video/ogg',
              ogv: 'video/ogg',
              mp4: 'video/mp4',
              mov: 'video/mp4',
              m4v: 'video/mp4',
              mkv: 'video/x-matroska',
              m4a: 'audio/mp4',
              mp3: 'audio/mpeg',
              aac: 'audio/aac',
              caf: 'audio/x-caf',
              flac: 'audio/flac',
              oga: 'audio/ogg',
              wav: 'audio/wav',
              m3u8: 'application/x-mpegURL',
              jpg: 'image/jpeg',
              jpeg: 'image/jpeg',
              gif: 'image/gif',
              png: 'image/png',
              svg: 'image/svg+xml',
              webp: 'image/webp',
            },
            Me = function (h) {
              void 0 === h && (h = '')
              h = Mg(h)
              return Co[h.toLowerCase()] || ''
            },
            Do = function (h, d) {
              if (!d) return ''
              if (h.cache_.source.src === d && h.cache_.source.type) return h.cache_.source.type
              var c = h.cache_.sources.filter(function (a) {
                return a.src === d
              })
              if (c.length) return c[0].type
              h = h.doubleDollar('source')
              for (c = 0; c < h.length; c++) {
                var b = h[c]
                if (b.type && b.src && b.src === d) return b.type
              }
              return Me(d)
            },
            Eo = function c(d) {
              if (Array.isArray(d)) {
                var b = []
                d.forEach(function (a) {
                  a = c(a)
                  Array.isArray(a) ? (b = b.concat(a)) : ia(a) && b.push(a)
                })
                d = b
              } else
                d =
                  'string' === typeof d && d.trim()
                    ? [dj({ src: d })]
                    : ia(d) && 'string' === typeof d.src && d.src && d.src.trim()
                      ? [dj(d)]
                      : []
              return d
            },
            Fo = (function (d) {
              function c(b, a, e) {
                var n = Pa({ createEl: !1 }, a)
                e = d.call(this, b, n, e) || this
                if (a.playerOptions.sources && 0 !== a.playerOptions.sources.length)
                  b.src(a.playerOptions.sources)
                else
                  for (n = 0, a = a.playerOptions.techOrder; n < a.length; n++) {
                    var q = Xa(a[n]),
                      t = Oa.getTech(q)
                    q || (t = ja.getComponent(q))
                    if (t && t.isSupported()) {
                      b.loadTech_(q)
                      break
                    }
                  }
                return e
              }
              ua(c, d)
              return c
            })(ja)
          ja.registerComponent('MediaLoader', Fo)
          var $e = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.emitTapEvents()
              a.enable()
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function (a, e, n) {
              void 0 === a && (a = 'div')
              void 0 === e && (e = {})
              void 0 === n && (n = {})
              e = X(
                {
                  innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                  className: this.buildCSSClass(),
                  tabIndex: 0,
                },
                e,
              )
              'button' === a &&
                Ea.error(
                  'Creating a ClickableComponent with an HTML element of ' +
                    a +
                    ' is not supported; use a Button instead.',
                )
              n = X({ role: 'button' }, n)
              this.tabIndex_ = e.tabIndex
              a = d.prototype.createEl.call(this, a, e, n)
              this.createControlTextEl(a)
              return a
            }
            b.dispose = function () {
              this.controlTextEl_ = null
              d.prototype.dispose.call(this)
            }
            b.createControlTextEl = function (a) {
              this.controlTextEl_ = Na(
                'span',
                { className: 'vjs-control-text' },
                { 'aria-live': 'polite' },
              )
              a && a.appendChild(this.controlTextEl_)
              this.controlText(this.controlText_, a)
              return this.controlTextEl_
            }
            b.controlText = function (a, e) {
              void 0 === e && (e = this.el())
              if (void 0 === a) return this.controlText_ || 'Need Text'
              var n = this.localize(a)
              this.controlText_ = a
              Ja(this.controlTextEl_, n)
              this.nonIconControl || e.setAttribute('title', n)
            }
            b.buildCSSClass = function () {
              return 'vjs-control vjs-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.enable = function () {
              this.enabled_ ||
                ((this.enabled_ = !0),
                this.removeClass('vjs-disabled'),
                this.el_.setAttribute('aria-disabled', 'false'),
                'undefined' !== typeof this.tabIndex_ &&
                  this.el_.setAttribute('tabIndex', this.tabIndex_),
                this.on(['tap', 'click'], this.handleClick),
                this.on('keydown', this.handleKeyDown))
            }
            b.disable = function () {
              this.enabled_ = !1
              this.addClass('vjs-disabled')
              this.el_.setAttribute('aria-disabled', 'true')
              'undefined' !== typeof this.tabIndex_ && this.el_.removeAttribute('tabIndex')
              this.off('mouseover', this.handleMouseOver)
              this.off('mouseout', this.handleMouseOut)
              this.off(['tap', 'click'], this.handleClick)
              this.off('keydown', this.handleKeyDown)
            }
            b.handleLanguagechange = function () {
              this.controlText(this.controlText_)
            }
            b.handleClick = function (a) {
              this.options_.clickHandler && this.options_.clickHandler.call(this, arguments)
            }
            b.handleKeyDown = function (a) {
              Ba.isEventKey(a, 'Space') || Ba.isEventKey(a, 'Enter')
                ? (a.preventDefault(), a.stopPropagation(), this.trigger('click'))
                : d.prototype.handleKeyDown.call(this, a)
            }
            return c
          })(ja)
          ja.registerComponent('ClickableComponent', $e)
          var Go = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.update()
              a.on('posterchange', Ga(Fa(e), e.update))
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.dispose = function () {
              this.player().off('posterchange', this.update)
              d.prototype.dispose.call(this)
            }
            b.createEl = function () {
              return Na('div', { className: 'vjs-poster', tabIndex: -1 })
            }
            b.update = function (a) {
              a = this.player().poster()
              this.setSrc(a)
              a ? this.show() : this.hide()
            }
            b.setSrc = function (a) {
              var e = ''
              a && (e = 'url("' + a + '")')
              this.el_.style.backgroundImage = e
            }
            b.handleClick = function (a) {
              this.player_.controls() &&
                ((a =
                  this.player_.usingPlugin('eme') &&
                  this.player_.eme.sessions &&
                  0 < this.player_.eme.sessions.length),
                !this.player_.tech(!0) || ((Zd || Yd) && a) || this.player_.tech(!0).focus(),
                this.player_.paused() ? Ec(this.player_.play()) : this.player_.pause())
            }
            return c
          })($e)
          ja.registerComponent('PosterImage', Go)
          var Ho = {
              monospace: 'monospace',
              sansSerif: 'sans-serif',
              serif: 'serif',
              monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
              monospaceSerif: '"Courier New", monospace',
              proportionalSansSerif: 'sans-serif',
              proportionalSerif: 'serif',
              casual: '"Comic Sans MS", Impact, fantasy',
              script: '"Monotype Corsiva", cursive',
              smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif',
            },
            Io = (function (d) {
              function c(a, e, n) {
                e = d.call(this, a, e, n) || this
                var q = Ga(Fa(e), e.updateDisplay)
                a.on('loadstart', Ga(Fa(e), e.toggleDisplay))
                a.on('texttrackchange', q)
                a.on('loadedmetadata', Ga(Fa(e), e.preselectTrack))
                a.ready(
                  Ga(Fa(e), function () {
                    if (a.tech_ && a.tech_.featuresNativeTextTracks) this.hide()
                    else {
                      a.on('fullscreenchange', q)
                      a.on('playerresize', q)
                      ca.addEventListener('orientationchange', q)
                      a.on('dispose', function () {
                        return ca.removeEventListener('orientationchange', q)
                      })
                      for (
                        var t = this.options_.playerOptions.tracks || [], v = 0;
                        v < t.length;
                        v++
                      )
                        this.player_.addRemoteTextTrack(t[v], !0)
                      this.preselectTrack()
                    }
                  }),
                )
                return e
              }
              ua(c, d)
              var b = c.prototype
              b.preselectTrack = function () {
                for (
                  var a = { captions: 1, subtitles: 1 },
                    e = this.player_.textTracks(),
                    n = this.player_.cache_.selectedLanguage,
                    q,
                    t,
                    v,
                    r = 0;
                  r < e.length;
                  r++
                ) {
                  var p = e[r]
                  n && n.enabled && n.language && n.language === p.language && p.kind in a
                    ? p.kind === n.kind
                      ? (v = p)
                      : v || (v = p)
                    : n && !n.enabled
                      ? (t = q = v = null)
                      : p['default'] &&
                        ('descriptions' !== p.kind || q ? p.kind in a && !t && (t = p) : (q = p))
                }
                v ? (v.mode = 'showing') : t ? (t.mode = 'showing') : q && (q.mode = 'showing')
              }
              b.toggleDisplay = function () {
                this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks
                  ? this.hide()
                  : this.show()
              }
              b.createEl = function () {
                return d.prototype.createEl.call(
                  this,
                  'div',
                  { className: 'vjs-text-track-display' },
                  { 'aria-live': 'off', 'aria-atomic': 'true' },
                )
              }
              b.clearDisplay = function () {
                'function' === typeof ca.WebVTT && ca.WebVTT.processCues(ca, [], this.el_)
              }
              b.updateDisplay = function () {
                var a = this.player_.textTracks(),
                  e = this.options_.allowMultipleShowingTracks
                this.clearDisplay()
                if (e) {
                  e = []
                  for (var n = 0; n < a.length; ++n) {
                    var q = a[n]
                    'showing' === q.mode && e.push(q)
                  }
                  this.updateForTrack(e)
                } else {
                  n = e = null
                  for (q = a.length; q--; ) {
                    var t = a[q]
                    'showing' === t.mode && ('descriptions' === t.kind ? (e = t) : (n = t))
                  }
                  n
                    ? ('off' !== this.getAttribute('aria-live') &&
                        this.setAttribute('aria-live', 'off'),
                      this.updateForTrack(n))
                    : e &&
                      ('assertive' !== this.getAttribute('aria-live') &&
                        this.setAttribute('aria-live', 'assertive'),
                      this.updateForTrack(e))
                }
              }
              b.updateDisplayState = function (a) {
                var e = this.player_.textTrackSettings.getValues()
                a = a.activeCues
                for (var n = a.length; n--; ) {
                  var q = a[n]
                  if (q) {
                    q = q.displayState
                    e.color && (q.firstChild.style.color = e.color)
                    if (e.textOpacity) {
                      var t = og(e.color || '#fff', e.textOpacity)
                      try {
                        q.firstChild.style.color = t
                      } catch (v) {}
                    }
                    e.backgroundColor && (q.firstChild.style.backgroundColor = e.backgroundColor)
                    if (e.backgroundOpacity) {
                      t = og(e.backgroundColor || '#000', e.backgroundOpacity)
                      try {
                        q.firstChild.style.backgroundColor = t
                      } catch (v) {}
                    }
                    if (e.windowColor)
                      if (e.windowOpacity) {
                        t = og(e.windowColor, e.windowOpacity)
                        try {
                          q.style.backgroundColor = t
                        } catch (v) {}
                      } else q.style.backgroundColor = e.windowColor
                    e.edgeStyle &&
                      ('dropshadow' === e.edgeStyle
                        ? (q.firstChild.style.textShadow =
                            '2px 2px 3px #222, 2px 2px 4px #222, 2px 2px 5px #222')
                        : 'raised' === e.edgeStyle
                          ? (q.firstChild.style.textShadow =
                              '1px 1px #222, 2px 2px #222, 3px 3px #222')
                          : 'depressed' === e.edgeStyle
                            ? (q.firstChild.style.textShadow =
                                '1px 1px #ccc, 0 1px #ccc, -1px -1px #222, 0 -1px #222')
                            : 'uniform' === e.edgeStyle &&
                              (q.firstChild.style.textShadow =
                                '0 0 4px #222, 0 0 4px #222, 0 0 4px #222, 0 0 4px #222'))
                    e.fontPercent &&
                      1 !== e.fontPercent &&
                      ((t = ca.parseFloat(q.style.fontSize)),
                      (q.style.fontSize = t * e.fontPercent + 'px'),
                      (q.style.height = 'auto'),
                      (q.style.top = 'auto'))
                    e.fontFamily &&
                      'default' !== e.fontFamily &&
                      ('small-caps' === e.fontFamily
                        ? (q.firstChild.style.fontVariant = 'small-caps')
                        : (q.firstChild.style.fontFamily = Ho[e.fontFamily]))
                  }
                }
              }
              b.updateForTrack = function (a) {
                Array.isArray(a) || (a = [a])
                if (
                  'function' === typeof ca.WebVTT &&
                  !a.every(function (v) {
                    return !v.activeCues
                  })
                ) {
                  for (var e = [], n = 0; n < a.length; ++n)
                    for (var q = a[n], t = 0; t < q.activeCues.length; ++t) e.push(q.activeCues[t])
                  ca.WebVTT.processCues(ca, e, this.el_)
                  for (e = 0; e < a.length; ++e) {
                    n = a[e]
                    for (q = 0; q < n.activeCues.length; ++q)
                      (t = n.activeCues[q].displayState),
                        Lb(t, 'vjs-text-track-cue'),
                        Lb(t, 'vjs-text-track-cue-' + (n.language ? n.language : e))
                    this.player_.textTrackSettings && this.updateDisplayState(n)
                  }
                }
              }
              return c
            })(ja)
          ja.registerComponent('TextTrackDisplay', Io)
          var Jo = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            c.prototype.createEl = function () {
              var b = this.player_.isAudio()
              b = this.localize(b ? 'Audio Player' : 'Video Player')
              b = Na('span', {
                className: 'vjs-control-text',
                innerHTML: this.localize('{1} is loading.', [b]),
              })
              var a = d.prototype.createEl.call(this, 'div', {
                className: 'vjs-loading-spinner',
                dir: 'ltr',
              })
              a.appendChild(b)
              return a
            }
            return c
          })(ja)
          ja.registerComponent('LoadingSpinner', Jo)
          var ec = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function (a, e, n) {
              void 0 === e && (e = {})
              void 0 === n && (n = {})
              a = 'button'
              e = X(
                {
                  innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                  className: this.buildCSSClass(),
                },
                e,
              )
              n = X({ type: 'button' }, n)
              a = ja.prototype.createEl.call(this, a, e, n)
              this.createControlTextEl(a)
              return a
            }
            b.addChild = function (a, e) {
              void 0 === e && (e = {})
              Ea.warn(
                'Adding an actionable (user controllable) child to a Button (' +
                  this.constructor.name +
                  ') is not supported; use a ClickableComponent instead.',
              )
              return ja.prototype.addChild.call(this, a, e)
            }
            b.enable = function () {
              d.prototype.enable.call(this)
              this.el_.removeAttribute('disabled')
            }
            b.disable = function () {
              d.prototype.disable.call(this)
              this.el_.setAttribute('disabled', 'disabled')
            }
            b.handleKeyDown = function (a) {
              Ba.isEventKey(a, 'Space') || Ba.isEventKey(a, 'Enter')
                ? a.stopPropagation()
                : d.prototype.handleKeyDown.call(this, a)
            }
            return c
          })($e)
          ja.registerComponent('Button', ec)
          var ik = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.mouseused_ = !1
              a.on('mousedown', a.handleMouseDown)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-big-play-button'
            }
            b.handleClick = function (a) {
              var e = this.player_.play()
              if (this.mouseused_ && a.clientX && a.clientY)
                (a =
                  this.player_.usingPlugin('eme') &&
                  this.player_.eme.sessions &&
                  0 < this.player_.eme.sessions.length),
                  Ec(e),
                  !this.player_.tech(!0) || ((Zd || Yd) && a) || this.player_.tech(!0).focus()
              else {
                var n = (a = this.player_.getChild('controlBar')) && a.getChild('playToggle')
                n
                  ? ((a = function () {
                      return n.focus()
                    }),
                    Pd(e) ? e.then(a, function () {}) : this.setTimeout(a, 1))
                  : this.player_.tech(!0).focus()
              }
            }
            b.handleKeyDown = function (a) {
              this.mouseused_ = !1
              d.prototype.handleKeyDown.call(this, a)
            }
            b.handleMouseDown = function (a) {
              this.mouseused_ = !0
            }
            return c
          })(ec)
          ik.prototype.controlText_ = 'Play Video'
          ja.registerComponent('BigPlayButton', ik)
          var Ko = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.controlText((e && e.controlText) || a.localize('Close'))
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-close-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.handleClick = function (a) {
              this.trigger({ type: 'close', bubbles: !1 })
            }
            b.handleKeyDown = function (a) {
              Ba.isEventKey(a, 'Esc')
                ? (a.preventDefault(), a.stopPropagation(), this.trigger('click'))
                : d.prototype.handleKeyDown.call(this, a)
            }
            return c
          })(ec)
          ja.registerComponent('CloseButton', Ko)
          var jk = (function (d) {
            function c(a, e) {
              void 0 === e && (e = {})
              var n = d.call(this, a, e) || this
              e.replay = void 0 === e.replay || e.replay
              n.on(a, 'play', n.handlePlay)
              n.on(a, 'pause', n.handlePause)
              if (e.replay) n.on(a, 'ended', n.handleEnded)
              return n
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-play-control ' + d.prototype.buildCSSClass.call(this)
            }
            b.handleClick = function (a) {
              this.player_.paused() ? this.player_.play() : this.player_.pause()
            }
            b.handleSeeked = function (a) {
              this.removeClass('vjs-ended')
              this.player_.paused() ? this.handlePause(a) : this.handlePlay(a)
            }
            b.handlePlay = function (a) {
              this.removeClass('vjs-ended')
              this.removeClass('vjs-paused')
              this.addClass('vjs-playing')
              this.controlText('Pause')
            }
            b.handlePause = function (a) {
              this.removeClass('vjs-playing')
              this.addClass('vjs-paused')
              this.controlText('Play')
            }
            b.handleEnded = function (a) {
              this.removeClass('vjs-playing')
              this.addClass('vjs-ended')
              this.controlText('Replay')
              this.one(this.player_, 'seeked', this.handleSeeked)
            }
            return c
          })(ec)
          jk.prototype.controlText_ = 'Play'
          ja.registerComponent('PlayToggle', jk)
          var kk = function (d, c) {
              d = 0 > d ? 0 : d
              var b = Math.floor(d % 60),
                a = Math.floor((d / 60) % 60),
                e = Math.floor(d / 3600),
                n = Math.floor((c / 60) % 60)
              c = Math.floor(c / 3600)
              if (isNaN(d) || Infinity === d) e = a = b = '-'
              e = 0 < e || 0 < c ? e + ':' : ''
              return e + (((e || 10 <= n) && 10 > a ? '0' + a : a) + ':') + (10 > b ? '0' + b : b)
            },
            pg = kk,
            wd = (function (d) {
              function c(a, e) {
                e = d.call(this, a, e) || this
                e.on(a, ['timeupdate', 'ended'], e.updateContent)
                e.updateTextNode_()
                return e
              }
              ua(c, d)
              var b = c.prototype
              b.createEl = function () {
                var a = this.buildCSSClass(),
                  e = d.prototype.createEl.call(this, 'div', {
                    className: a + ' vjs-time-control vjs-control',
                    innerHTML:
                      '<span class="vjs-control-text" role="presentation">' +
                      this.localize(this.labelText_) +
                      '\u00a0</span>',
                  })
                this.contentEl_ = Na(
                  'span',
                  { className: a + '-display' },
                  { 'aria-live': 'off', role: 'presentation' },
                )
                e.appendChild(this.contentEl_)
                return e
              }
              b.dispose = function () {
                this.textNode_ = this.contentEl_ = null
                d.prototype.dispose.call(this)
              }
              b.updateTextNode_ = function (a) {
                var e = this
                void 0 === a && (a = 0)
                a = kd(a)
                this.formattedTime_ !== a &&
                  ((this.formattedTime_ = a),
                  this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {
                    if (e.contentEl_) {
                      var n = e.textNode_
                      n &&
                        e.contentEl_.firstChild !== n &&
                        ((n = null),
                        Ea.warn(
                          'TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.',
                        ))
                      e.textNode_ = pa.createTextNode(e.formattedTime_)
                      e.textNode_ &&
                        (n
                          ? e.contentEl_.replaceChild(e.textNode_, n)
                          : e.contentEl_.appendChild(e.textNode_))
                    }
                  }))
              }
              b.updateContent = function (a) {}
              return c
            })(ja)
          wd.prototype.labelText_ = 'Time'
          wd.prototype.controlText_ = 'Time'
          ja.registerComponent('TimeDisplay', wd)
          var Ng = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-current-time'
            }
            b.updateContent = function (a) {
              a = this.player_.ended()
                ? this.player_.duration()
                : this.player_.scrubbing()
                  ? this.player_.getCache().currentTime
                  : this.player_.currentTime()
              this.updateTextNode_(a)
            }
            return c
          })(wd)
          Ng.prototype.labelText_ = 'Current Time'
          Ng.prototype.controlText_ = 'Current Time'
          ja.registerComponent('CurrentTimeDisplay', Ng)
          var Og = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.on(a, 'durationchange', e.updateContent)
              e.on(a, 'loadstart', e.updateContent)
              e.on(a, 'loadedmetadata', e.updateContent)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-duration'
            }
            b.updateContent = function (a) {
              a = this.player_.duration()
              this.updateTextNode_(a)
            }
            return c
          })(wd)
          Og.prototype.labelText_ = 'Duration'
          Og.prototype.controlText_ = 'Duration'
          ja.registerComponent('DurationDisplay', Og)
          var Lo = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            c.prototype.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'div',
                {
                  className: 'vjs-time-control vjs-time-divider',
                  innerHTML: '<div><span>/</span></div>',
                },
                { 'aria-hidden': !0 },
              )
            }
            return c
          })(ja)
          ja.registerComponent('TimeDivider', Lo)
          var Pg = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.on(a, 'durationchange', e.updateContent)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-remaining-time'
            }
            b.createEl = function () {
              var a = d.prototype.createEl.call(this)
              a.insertBefore(Na('span', {}, { 'aria-hidden': !0 }, '-'), this.contentEl_)
              return a
            }
            b.updateContent = function (a) {
              'number' === typeof this.player_.duration() &&
                ((a = this.player_.ended()
                  ? 0
                  : this.player_.remainingTimeDisplay
                    ? this.player_.remainingTimeDisplay()
                    : this.player_.remainingTime()),
                this.updateTextNode_(a))
            }
            return c
          })(wd)
          Pg.prototype.labelText_ = 'Remaining Time'
          Pg.prototype.controlText_ = 'Remaining Time'
          ja.registerComponent('RemainingTimeDisplay', Pg)
          var Mo = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.updateShowing()
              a.on(a.player(), 'durationchange', a.updateShowing)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              var a = d.prototype.createEl.call(this, 'div', {
                className: 'vjs-live-control vjs-control',
              })
              this.contentEl_ = Na(
                'div',
                {
                  className: 'vjs-live-display',
                  innerHTML:
                    '<span class="vjs-control-text">' +
                    this.localize('Stream Type') +
                    '\u00a0</span>' +
                    this.localize('LIVE'),
                },
                { 'aria-live': 'off' },
              )
              a.appendChild(this.contentEl_)
              return a
            }
            b.dispose = function () {
              this.contentEl_ = null
              d.prototype.dispose.call(this)
            }
            b.updateShowing = function (a) {
              Infinity === this.player().duration() ? this.show() : this.hide()
            }
            return c
          })(ja)
          ja.registerComponent('LiveDisplay', Mo)
          var lk = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.updateLiveEdgeStatus()
              if (a.player_.liveTracker)
                a.on(a.player_.liveTracker, 'liveedgechange', a.updateLiveEdgeStatus)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              var a = d.prototype.createEl.call(this, 'button', {
                className: 'vjs-seek-to-live-control vjs-control',
              })
              this.textEl_ = Na(
                'span',
                { className: 'vjs-seek-to-live-text', innerHTML: this.localize('LIVE') },
                { 'aria-hidden': 'true' },
              )
              a.appendChild(this.textEl_)
              return a
            }
            b.updateLiveEdgeStatus = function () {
              !this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()
                ? (this.setAttribute('aria-disabled', !0),
                  this.addClass('vjs-at-live-edge'),
                  this.controlText('Seek to live, currently playing live'))
                : (this.setAttribute('aria-disabled', !1),
                  this.removeClass('vjs-at-live-edge'),
                  this.controlText('Seek to live, currently behind live'))
            }
            b.handleClick = function () {
              this.player_.liveTracker.seekToLiveEdge()
            }
            b.dispose = function () {
              this.player_.liveTracker &&
                this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus)
              this.textEl_ = null
              d.prototype.dispose.call(this)
            }
            return c
          })(ec)
          lk.prototype.controlText_ = 'Seek to live, currently playing live'
          ja.registerComponent('SeekToLive', lk)
          var ce = function (d, c, b) {
              d = Number(d)
              return Math.min(b, Math.max(c, isNaN(d) ? c : d))
            },
            Qg = (function (d) {
              function c(a, e) {
                a = d.call(this, a, e) || this
                a.bar = a.getChild(a.options_.barName)
                a.vertical(!!a.options_.vertical)
                a.enable()
                return a
              }
              ua(c, d)
              var b = c.prototype
              b.enabled = function () {
                return this.enabled_
              }
              b.enable = function () {
                if (!this.enabled()) {
                  this.on('mousedown', this.handleMouseDown)
                  this.on('touchstart', this.handleMouseDown)
                  this.on('keydown', this.handleKeyDown)
                  this.on('click', this.handleClick)
                  this.on(this.player_, 'controlsvisible', this.update)
                  if (this.playerEvent) this.on(this.player_, this.playerEvent, this.update)
                  this.removeClass('disabled')
                  this.setAttribute('tabindex', 0)
                  this.enabled_ = !0
                }
              }
              b.disable = function () {
                if (this.enabled()) {
                  var a = this.bar.el_.ownerDocument
                  this.off('mousedown', this.handleMouseDown)
                  this.off('touchstart', this.handleMouseDown)
                  this.off('keydown', this.handleKeyDown)
                  this.off('click', this.handleClick)
                  this.off(this.player_, 'controlsvisible', this.update)
                  this.off(a, 'mousemove', this.handleMouseMove)
                  this.off(a, 'mouseup', this.handleMouseUp)
                  this.off(a, 'touchmove', this.handleMouseMove)
                  this.off(a, 'touchend', this.handleMouseUp)
                  this.removeAttribute('tabindex')
                  this.addClass('disabled')
                  this.playerEvent && this.off(this.player_, this.playerEvent, this.update)
                  this.enabled_ = !1
                }
              }
              b.createEl = function (a, e, n) {
                void 0 === e && (e = {})
                void 0 === n && (n = {})
                e.className += ' vjs-slider'
                e = X({ tabIndex: 0 }, e)
                n = X(
                  {
                    role: 'slider',
                    'aria-valuenow': 0,
                    'aria-valuemin': 0,
                    'aria-valuemax': 100,
                    tabIndex: 0,
                  },
                  n,
                )
                return d.prototype.createEl.call(this, a, e, n)
              }
              b.handleMouseDown = function (a) {
                var e = this.bar.el_.ownerDocument
                'mousedown' === a.type && a.preventDefault()
                'touchstart' !== a.type || vc || a.preventDefault()
                xe()
                this.addClass('vjs-sliding')
                this.trigger('slideractive')
                this.on(e, 'mousemove', this.handleMouseMove)
                this.on(e, 'mouseup', this.handleMouseUp)
                this.on(e, 'touchmove', this.handleMouseMove)
                this.on(e, 'touchend', this.handleMouseUp)
                this.handleMouseMove(a)
              }
              b.handleMouseMove = function (a) {}
              b.handleMouseUp = function () {
                var a = this.bar.el_.ownerDocument
                Mb()
                this.removeClass('vjs-sliding')
                this.trigger('sliderinactive')
                this.off(a, 'mousemove', this.handleMouseMove)
                this.off(a, 'mouseup', this.handleMouseUp)
                this.off(a, 'touchmove', this.handleMouseMove)
                this.off(a, 'touchend', this.handleMouseUp)
                this.update()
              }
              b.update = function () {
                var a = this
                if (this.el_ && this.bar) {
                  var e = this.getProgress()
                  if (e === this.progress_) return e
                  this.progress_ = e
                  this.requestNamedAnimationFrame('Slider#update', function () {
                    var n = a.vertical() ? 'height' : 'width'
                    a.bar.el().style[n] = (100 * e).toFixed(2) + '%'
                  })
                  return e
                }
              }
              b.getProgress = function () {
                return Number(ce(this.getPercent(), 0, 1).toFixed(4))
              }
              b.calculateDistance = function (a) {
                a = Gd(this.el_, a)
                return this.vertical() ? a.y : a.x
              }
              b.handleKeyDown = function (a) {
                Ba.isEventKey(a, 'Left') || Ba.isEventKey(a, 'Down')
                  ? (a.preventDefault(), a.stopPropagation(), this.stepBack())
                  : Ba.isEventKey(a, 'Right') || Ba.isEventKey(a, 'Up')
                    ? (a.preventDefault(), a.stopPropagation(), this.stepForward())
                    : d.prototype.handleKeyDown.call(this, a)
              }
              b.handleClick = function (a) {
                a.stopPropagation()
                a.preventDefault()
              }
              b.vertical = function (a) {
                if (void 0 === a) return this.vertical_ || !1
                ;(this.vertical_ = !!a)
                  ? this.addClass('vjs-slider-vertical')
                  : this.addClass('vjs-slider-horizontal')
              }
              return c
            })(ja)
          ja.registerComponent('Slider', Qg)
          var No = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.partEls_ = []
              e.on(a, 'progress', e.update)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              var a = d.prototype.createEl.call(this, 'div', { className: 'vjs-load-progress' }),
                e = Na('span', { className: 'vjs-control-text' }),
                n = Na('span', { textContent: this.localize('Loaded') }),
                q = pa.createTextNode(': ')
              this.percentageEl_ = Na('span', {
                className: 'vjs-control-text-loaded-percentage',
                textContent: '0%',
              })
              a.appendChild(e)
              e.appendChild(n)
              e.appendChild(q)
              e.appendChild(this.percentageEl_)
              return a
            }
            b.dispose = function () {
              this.percentageEl_ = this.partEls_ = null
              d.prototype.dispose.call(this)
            }
            b.update = function (a) {
              var e = this
              this.requestNamedAnimationFrame('LoadProgressBar#update', function () {
                var n = e.player_.liveTracker,
                  q = e.player_.buffered(),
                  t = n && n.isLive() ? n.seekableEnd() : e.player_.duration(),
                  v = e.player_.bufferedEnd()
                n = e.partEls_
                t = ce((v / t) * 100, 0, 100).toFixed(2) + '%'
                e.percent_ !== t &&
                  ((e.el_.style.width = t), Ja(e.percentageEl_, t), (e.percent_ = t))
                for (t = 0; t < q.length; t++) {
                  var r = q.start(t),
                    p = q.end(t),
                    m = n[t]
                  m || ((m = e.el_.appendChild(Na())), (n[t] = m))
                  if (m.dataset.start !== r || m.dataset.end !== p)
                    (m.dataset.start = r),
                      (m.dataset.end = p),
                      (m.style.left = ce((r / v) * 100, 0, 100).toFixed(2) + '%'),
                      (m.style.width = ce(((p - r) / v) * 100, 0, 100).toFixed(2) + '%')
                }
                for (v = n.length; v > q.length; v--) e.el_.removeChild(n[v - 1])
                n.length = q.length
              })
            }
            return c
          })(ja)
          ja.registerComponent('LoadProgressBar', No)
          var Oo = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.update = Uc(Ga(Fa(a), a.update), 30)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'div',
                { className: 'vjs-time-tooltip' },
                { 'aria-hidden': 'true' },
              )
            }
            b.update = function (a, e, n) {
              var q = Nb(this.el_),
                t = dd(this.player_.el()),
                v = a.width * e
              t &&
                q &&
                ((e = a.left - t.left + v),
                (a = a.width - v + (t.right - a.right)),
                (t = q.width / 2),
                e < t ? (t += t - e) : a < t && (t = a),
                0 > t ? (t = 0) : t > q.width && (t = q.width),
                (t = Math.round(t)),
                (this.el_.style.right = '-' + t + 'px'),
                this.write(n))
            }
            b.write = function (a) {
              Ja(this.el_, a)
            }
            b.updateTime = function (a, e, n, q) {
              var t = this
              this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {
                var v = t.player_.duration()
                if (t.player_.liveTracker && t.player_.liveTracker.isLive()) {
                  v = t.player_.liveTracker.liveWindow()
                  var r = v - e * v
                  v = (1 > r ? '' : '-') + kd(r, v)
                } else v = kd(n, v)
                t.update(a, e, v)
                q && q()
              })
            }
            return c
          })(ja)
          ja.registerComponent('TimeTooltip', Oo)
          var Rg = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.update = Uc(Ga(Fa(a), a.update), 30)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'div',
                { className: 'vjs-play-progress vjs-slider-bar' },
                { 'aria-hidden': 'true' },
              )
            }
            b.update = function (a, e) {
              var n = this.getChild('timeTooltip')
              if (n) {
                var q = this.player_.scrubbing()
                  ? this.player_.getCache().currentTime
                  : this.player_.currentTime()
                n.updateTime(a, e, q)
              }
            }
            return c
          })(ja)
          Rg.prototype.options_ = { children: [] }
          Pb || Jc || Rg.prototype.options_.children.push('timeTooltip')
          ja.registerComponent('PlayProgressBar', Rg)
          var mk = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.update = Uc(Ga(Fa(a), a.update), 30)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              return d.prototype.createEl.call(this, 'div', { className: 'vjs-mouse-display' })
            }
            b.update = function (a, e) {
              var n = this,
                q = e * this.player_.duration()
              this.getChild('timeTooltip').updateTime(a, e, q, function () {
                n.el_.style.left = a.width * e + 'px'
              })
            }
            return c
          })(ja)
          mk.prototype.options_ = { children: ['timeTooltip'] }
          ja.registerComponent('MouseTimeDisplay', mk)
          var Sg = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.setEventHandlers_()
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.setEventHandlers_ = function () {
              this.update_ = Ga(this, this.update)
              this.update = Uc(this.update_, 30)
              this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update)
              if (this.player_.liveTracker)
                this.on(this.player_.liveTracker, 'liveedgechange', this.update)
              this.updateInterval = null
              this.on(this.player_, ['playing'], this.enableInterval_)
              this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_)
              if ('hidden' in pa && 'visibilityState' in pa)
                this.on(pa, 'visibilitychange', this.toggleVisibility_)
            }
            b.toggleVisibility_ = function (a) {
              'hidden' === pa.visibilityState
                ? (this.cancelNamedAnimationFrame('SeekBar#update'),
                  this.cancelNamedAnimationFrame('Slider#update'),
                  this.disableInterval_(a))
                : (this.player_.ended() || this.player_.paused() || this.enableInterval_(),
                  this.update())
            }
            b.enableInterval_ = function () {
              this.updateInterval || (this.updateInterval = this.setInterval(this.update, 30))
            }
            b.disableInterval_ = function (a) {
              ;(this.player_.liveTracker &&
                this.player_.liveTracker.isLive() &&
                a &&
                'ended' !== a.type) ||
                !this.updateInterval ||
                (this.clearInterval(this.updateInterval), (this.updateInterval = null))
            }
            b.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'div',
                { className: 'vjs-progress-holder' },
                { 'aria-label': this.localize('Progress Bar') },
              )
            }
            b.update = function (a) {
              var e = this
              if ('hidden' !== pa.visibilityState) {
                var n = d.prototype.update.call(this)
                this.requestNamedAnimationFrame('SeekBar#update', function () {
                  var q = e.player_.ended() ? e.player_.duration() : e.getCurrentTime_(),
                    t = e.player_.liveTracker,
                    v = e.player_.duration()
                  t && t.isLive() && (v = e.player_.liveTracker.liveCurrentTime())
                  e.percent_ !== n &&
                    (e.el_.setAttribute('aria-valuenow', (100 * n).toFixed(2)), (e.percent_ = n))
                  if (e.currentTime_ !== q || e.duration_ !== v)
                    e.el_.setAttribute(
                      'aria-valuetext',
                      e.localize(
                        'progress bar timing: currentTime={1} duration={2}',
                        [kd(q, v), kd(v, v)],
                        '{1} of {2}',
                      ),
                    ),
                      (e.currentTime_ = q),
                      (e.duration_ = v)
                  e.bar && e.bar.update(dd(e.el()), e.getProgress())
                })
                return n
              }
            }
            b.getCurrentTime_ = function () {
              return this.player_.scrubbing()
                ? this.player_.getCache().currentTime
                : this.player_.currentTime()
            }
            b.getPercent = function () {
              var a = this.getCurrentTime_(),
                e = this.player_.liveTracker
              e && e.isLive()
                ? ((a = (a - e.seekableStart()) / e.liveWindow()), e.atLiveEdge() && (a = 1))
                : (a /= this.player_.duration())
              return a
            }
            b.handleMouseDown = function (a) {
              Cc(a) &&
                (a.stopPropagation(),
                this.player_.scrubbing(!0),
                (this.videoWasPlaying = !this.player_.paused()),
                this.player_.pause(),
                d.prototype.handleMouseDown.call(this, a))
            }
            b.handleMouseMove = function (a) {
              if (Cc(a)) {
                var e = this.calculateDistance(a)
                var n = this.player_.liveTracker
                if (n && n.isLive()) {
                  if (0.99 <= e) {
                    n.seekToLiveEdge()
                    return
                  }
                  a = n.seekableStart()
                  var q = n.liveCurrentTime()
                  e = a + e * n.liveWindow()
                  e >= q && (e = q)
                  e <= a && (e = a + 0.1)
                  if (Infinity === e) return
                } else (e *= this.player_.duration()), e === this.player_.duration() && (e -= 0.1)
                this.player_.currentTime(e)
              }
            }
            b.enable = function () {
              d.prototype.enable.call(this)
              var a = this.getChild('mouseTimeDisplay')
              a && a.show()
            }
            b.disable = function () {
              d.prototype.disable.call(this)
              var a = this.getChild('mouseTimeDisplay')
              a && a.hide()
            }
            b.handleMouseUp = function (a) {
              d.prototype.handleMouseUp.call(this, a)
              a && a.stopPropagation()
              this.player_.scrubbing(!1)
              this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 })
              this.videoWasPlaying ? Ec(this.player_.play()) : this.update_()
            }
            b.stepForward = function () {
              this.player_.currentTime(this.player_.currentTime() + 5)
            }
            b.stepBack = function () {
              this.player_.currentTime(this.player_.currentTime() - 5)
            }
            b.handleAction = function (a) {
              this.player_.paused() ? this.player_.play() : this.player_.pause()
            }
            b.handleKeyDown = function (a) {
              Ba.isEventKey(a, 'Space') || Ba.isEventKey(a, 'Enter')
                ? (a.preventDefault(), a.stopPropagation(), this.handleAction(a))
                : Ba.isEventKey(a, 'Home')
                  ? (a.preventDefault(), a.stopPropagation(), this.player_.currentTime(0))
                  : Ba.isEventKey(a, 'End')
                    ? (a.preventDefault(),
                      a.stopPropagation(),
                      this.player_.currentTime(this.player_.duration()))
                    : /^[0-9]$/.test(Ba(a))
                      ? (a.preventDefault(),
                        a.stopPropagation(),
                        (a = (10 * (Ba.codes[Ba(a)] - Ba.codes['0'])) / 100),
                        this.player_.currentTime(this.player_.duration() * a))
                      : Ba.isEventKey(a, 'PgDn')
                        ? (a.preventDefault(),
                          a.stopPropagation(),
                          this.player_.currentTime(this.player_.currentTime() - 60))
                        : Ba.isEventKey(a, 'PgUp')
                          ? (a.preventDefault(),
                            a.stopPropagation(),
                            this.player_.currentTime(this.player_.currentTime() + 60))
                          : d.prototype.handleKeyDown.call(this, a)
            }
            b.dispose = function () {
              this.disableInterval_()
              this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update)
              if (this.player_.liveTracker)
                this.on(this.player_.liveTracker, 'liveedgechange', this.update)
              this.off(this.player_, ['playing'], this.enableInterval_)
              this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_)
              'hidden' in pa &&
                'visibilityState' in pa &&
                this.off(pa, 'visibilitychange', this.toggleVisibility_)
              d.prototype.dispose.call(this)
            }
            return c
          })(Qg)
          Sg.prototype.options_ = {
            children: ['loadProgressBar', 'playProgressBar'],
            barName: 'playProgressBar',
          }
          Pb || Jc || Sg.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay')
          ja.registerComponent('SeekBar', Sg)
          var nk = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              a.handleMouseMove = Uc(Ga(Fa(a), a.handleMouseMove), 30)
              a.throttledHandleMouseSeek = Uc(Ga(Fa(a), a.handleMouseSeek), 30)
              a.enable()
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              return d.prototype.createEl.call(this, 'div', {
                className: 'vjs-progress-control vjs-control',
              })
            }
            b.handleMouseMove = function (a) {
              var e = this.getChild('seekBar')
              if (e) {
                var n = e.getChild('playProgressBar'),
                  q = e.getChild('mouseTimeDisplay')
                if (n || q) {
                  var t = e.el(),
                    v = Nb(t)
                  a = Gd(t, a).x
                  a = ce(a, 0, 1)
                  q && q.update(v, a)
                  n && n.update(v, e.getProgress())
                }
              }
            }
            b.handleMouseSeek = function (a) {
              var e = this.getChild('seekBar')
              e && e.handleMouseMove(a)
            }
            b.enabled = function () {
              return this.enabled_
            }
            b.disable = function () {
              this.children().forEach(function (e) {
                return e.disable && e.disable()
              })
              if (
                this.enabled() &&
                (this.off(['mousedown', 'touchstart'], this.handleMouseDown),
                this.off(this.el_, 'mousemove', this.handleMouseMove),
                this.removeListenersAddedOnMousedownAndTouchstart(),
                this.addClass('disabled'),
                (this.enabled_ = !1),
                this.player_.scrubbing())
              ) {
                var a = this.getChild('seekBar')
                this.player_.scrubbing(!1)
                a.videoWasPlaying && Ec(this.player_.play())
              }
            }
            b.enable = function () {
              this.children().forEach(function (a) {
                return a.enable && a.enable()
              })
              this.enabled() ||
                (this.on(['mousedown', 'touchstart'], this.handleMouseDown),
                this.on(this.el_, 'mousemove', this.handleMouseMove),
                this.removeClass('disabled'),
                (this.enabled_ = !0))
            }
            b.removeListenersAddedOnMousedownAndTouchstart = function () {
              var a = this.el_.ownerDocument
              this.off(a, 'mousemove', this.throttledHandleMouseSeek)
              this.off(a, 'touchmove', this.throttledHandleMouseSeek)
              this.off(a, 'mouseup', this.handleMouseUp)
              this.off(a, 'touchend', this.handleMouseUp)
            }
            b.handleMouseDown = function (a) {
              var e = this.el_.ownerDocument,
                n = this.getChild('seekBar')
              n && n.handleMouseDown(a)
              this.on(e, 'mousemove', this.throttledHandleMouseSeek)
              this.on(e, 'touchmove', this.throttledHandleMouseSeek)
              this.on(e, 'mouseup', this.handleMouseUp)
              this.on(e, 'touchend', this.handleMouseUp)
            }
            b.handleMouseUp = function (a) {
              var e = this.getChild('seekBar')
              e && e.handleMouseUp(a)
              this.removeListenersAddedOnMousedownAndTouchstart()
            }
            return c
          })(ja)
          nk.prototype.options_ = { children: ['seekBar'] }
          ja.registerComponent('ProgressControl', nk)
          var ok = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.on(
                a,
                ['enterpictureinpicture', 'leavepictureinpicture'],
                e.handlePictureInPictureChange,
              )
              e.on(
                a,
                ['disablepictureinpicturechanged', 'loadedmetadata'],
                e.handlePictureInPictureEnabledChange,
              )
              e.disable()
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-picture-in-picture-control ' + d.prototype.buildCSSClass.call(this)
            }
            b.handlePictureInPictureEnabledChange = function () {
              pa.pictureInPictureEnabled && !1 === this.player_.disablePictureInPicture()
                ? this.enable()
                : this.disable()
            }
            b.handlePictureInPictureChange = function (a) {
              this.player_.isInPictureInPicture()
                ? this.controlText('Exit Picture-in-Picture')
                : this.controlText('Picture-in-Picture')
              this.handlePictureInPictureEnabledChange()
            }
            b.handleClick = function (a) {
              this.player_.isInPictureInPicture()
                ? this.player_.exitPictureInPicture()
                : this.player_.requestPictureInPicture()
            }
            return c
          })(ec)
          ok.prototype.controlText_ = 'Picture-in-Picture'
          ja.registerComponent('PictureInPictureToggle', ok)
          var pk = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.on(a, 'fullscreenchange', e.handleFullscreenChange)
              !1 === pa[a.fsApi_.fullscreenEnabled] && e.disable()
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-fullscreen-control ' + d.prototype.buildCSSClass.call(this)
            }
            b.handleFullscreenChange = function (a) {
              this.player_.isFullscreen()
                ? this.controlText('Non-Fullscreen')
                : this.controlText('Fullscreen')
            }
            b.handleClick = function (a) {
              this.player_.isFullscreen()
                ? this.player_.exitFullscreen()
                : this.player_.requestFullscreen()
            }
            return c
          })(ec)
          pk.prototype.controlText_ = 'Fullscreen'
          ja.registerComponent('FullscreenToggle', pk)
          var Po = function (d, c) {
              c.tech_ && !c.tech_.featuresVolumeControl && d.addClass('vjs-hidden')
              d.on(c, 'loadstart', function () {
                c.tech_.featuresVolumeControl
                  ? d.removeClass('vjs-hidden')
                  : d.addClass('vjs-hidden')
              })
            },
            Qo = (function (d) {
              function c() {
                return d.apply(this, arguments) || this
              }
              ua(c, d)
              c.prototype.createEl = function () {
                return d.prototype.createEl.call(this, 'div', {
                  className: 'vjs-volume-level',
                  innerHTML: '<span class="vjs-control-text"></span>',
                })
              }
              return c
            })(ja)
          ja.registerComponent('VolumeLevel', Qo)
          var Tg = (function (d) {
            function c(a, e) {
              var n = d.call(this, a, e) || this
              n.on('slideractive', n.updateLastVolume_)
              n.on(a, 'volumechange', n.updateARIAAttributes)
              a.ready(function () {
                return n.updateARIAAttributes()
              })
              return n
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'div',
                { className: 'vjs-volume-bar vjs-slider-bar' },
                { 'aria-label': this.localize('Volume Level'), 'aria-live': 'polite' },
              )
            }
            b.handleMouseDown = function (a) {
              Cc(a) && d.prototype.handleMouseDown.call(this, a)
            }
            b.handleMouseMove = function (a) {
              Cc(a) && (this.checkMuted(), this.player_.volume(this.calculateDistance(a)))
            }
            b.checkMuted = function () {
              this.player_.muted() && this.player_.muted(!1)
            }
            b.getPercent = function () {
              return this.player_.muted() ? 0 : this.player_.volume()
            }
            b.stepForward = function () {
              this.checkMuted()
              this.player_.volume(this.player_.volume() + 0.1)
            }
            b.stepBack = function () {
              this.checkMuted()
              this.player_.volume(this.player_.volume() - 0.1)
            }
            b.updateARIAAttributes = function (a) {
              a = this.player_.muted() ? 0 : this.volumeAsPercentage_()
              this.el_.setAttribute('aria-valuenow', a)
              this.el_.setAttribute('aria-valuetext', a + '%')
            }
            b.volumeAsPercentage_ = function () {
              return Math.round(100 * this.player_.volume())
            }
            b.updateLastVolume_ = function () {
              var a = this,
                e = this.player_.volume()
              this.one('sliderinactive', function () {
                0 === a.player_.volume() && a.player_.lastVolume_(e)
              })
            }
            return c
          })(Qg)
          Tg.prototype.options_ = { children: ['volumeLevel'], barName: 'volumeLevel' }
          Tg.prototype.playerEvent = 'volumechange'
          ja.registerComponent('VolumeBar', Tg)
          var qk = (function (d) {
            function c(a, e) {
              void 0 === e && (e = {})
              e.vertical = e.vertical || !1
              if ('undefined' === typeof e.volumeBar || aa(e.volumeBar))
                (e.volumeBar = e.volumeBar || {}), (e.volumeBar.vertical = e.vertical)
              var n = d.call(this, a, e) || this
              Po(Fa(n), a)
              n.throttledHandleMouseMove = Uc(Ga(Fa(n), n.handleMouseMove), 30)
              n.on('mousedown', n.handleMouseDown)
              n.on('touchstart', n.handleMouseDown)
              n.on(n.volumeBar, ['focus', 'slideractive'], function () {
                n.volumeBar.addClass('vjs-slider-active')
                n.addClass('vjs-slider-active')
                n.trigger('slideractive')
              })
              n.on(n.volumeBar, ['blur', 'sliderinactive'], function () {
                n.volumeBar.removeClass('vjs-slider-active')
                n.removeClass('vjs-slider-active')
                n.trigger('sliderinactive')
              })
              return n
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              var a = 'vjs-volume-horizontal'
              this.options_.vertical && (a = 'vjs-volume-vertical')
              return d.prototype.createEl.call(this, 'div', {
                className: 'vjs-volume-control vjs-control ' + a,
              })
            }
            b.handleMouseDown = function (a) {
              a = this.el_.ownerDocument
              this.on(a, 'mousemove', this.throttledHandleMouseMove)
              this.on(a, 'touchmove', this.throttledHandleMouseMove)
              this.on(a, 'mouseup', this.handleMouseUp)
              this.on(a, 'touchend', this.handleMouseUp)
            }
            b.handleMouseUp = function (a) {
              a = this.el_.ownerDocument
              this.off(a, 'mousemove', this.throttledHandleMouseMove)
              this.off(a, 'touchmove', this.throttledHandleMouseMove)
              this.off(a, 'mouseup', this.handleMouseUp)
              this.off(a, 'touchend', this.handleMouseUp)
            }
            b.handleMouseMove = function (a) {
              this.volumeBar.handleMouseMove(a)
            }
            return c
          })(ja)
          qk.prototype.options_ = { children: ['volumeBar'] }
          ja.registerComponent('VolumeControl', qk)
          var Ro = function (d, c) {
              c.tech_ && !c.tech_.featuresMuteControl && d.addClass('vjs-hidden')
              d.on(c, 'loadstart', function () {
                c.tech_.featuresMuteControl ? d.removeClass('vjs-hidden') : d.addClass('vjs-hidden')
              })
            },
            rk = (function (d) {
              function c(a, e) {
                e = d.call(this, a, e) || this
                Ro(Fa(e), a)
                e.on(a, ['loadstart', 'volumechange'], e.update)
                return e
              }
              ua(c, d)
              var b = c.prototype
              b.buildCSSClass = function () {
                return 'vjs-mute-control ' + d.prototype.buildCSSClass.call(this)
              }
              b.handleClick = function (a) {
                a = this.player_.volume()
                var e = this.player_.lastVolume_()
                0 === a
                  ? (this.player_.volume(0.1 > e ? 0.1 : e), this.player_.muted(!1))
                  : this.player_.muted(this.player_.muted() ? !1 : !0)
              }
              b.update = function (a) {
                this.updateIcon_()
                this.updateControlText_()
              }
              b.updateIcon_ = function () {
                var a = this.player_.volume(),
                  e = 3
                Pb &&
                  this.player_.tech_ &&
                  this.player_.tech_.el_ &&
                  this.player_.muted(this.player_.tech_.el_.muted)
                0 === a || this.player_.muted() ? (e = 0) : 0.33 > a ? (e = 1) : 0.67 > a && (e = 2)
                for (a = 0; 4 > a; a++) Qc(this.el_, 'vjs-vol-' + a)
                Lb(this.el_, 'vjs-vol-' + e)
              }
              b.updateControlText_ = function () {
                var a = this.player_.muted() || 0 === this.player_.volume() ? 'Unmute' : 'Mute'
                this.controlText() !== a && this.controlText(a)
              }
              return c
            })(ec)
          rk.prototype.controlText_ = 'Mute'
          ja.registerComponent('MuteToggle', rk)
          var sk = (function (d) {
            function c(a, e) {
              void 0 === e && (e = {})
              e.inline = 'undefined' !== typeof e.inline ? e.inline : !0
              if ('undefined' === typeof e.volumeControl || aa(e.volumeControl))
                (e.volumeControl = e.volumeControl || {}), (e.volumeControl.vertical = !e.inline)
              e = d.call(this, a, e) || this
              e.on(a, ['loadstart'], e.volumePanelState_)
              e.on(e.muteToggle, 'keyup', e.handleKeyPress)
              e.on(e.volumeControl, 'keyup', e.handleVolumeControlKeyUp)
              e.on('keydown', e.handleKeyPress)
              e.on('mouseover', e.handleMouseOver)
              e.on('mouseout', e.handleMouseOut)
              e.on(e.volumeControl, ['slideractive'], e.sliderActive_)
              e.on(e.volumeControl, ['sliderinactive'], e.sliderInactive_)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.sliderActive_ = function () {
              this.addClass('vjs-slider-active')
            }
            b.sliderInactive_ = function () {
              this.removeClass('vjs-slider-active')
            }
            b.volumePanelState_ = function () {
              this.volumeControl.hasClass('vjs-hidden') &&
                this.muteToggle.hasClass('vjs-hidden') &&
                this.addClass('vjs-hidden')
              this.volumeControl.hasClass('vjs-hidden') &&
                !this.muteToggle.hasClass('vjs-hidden') &&
                this.addClass('vjs-mute-toggle-only')
            }
            b.createEl = function () {
              var a = 'vjs-volume-panel-horizontal'
              this.options_.inline || (a = 'vjs-volume-panel-vertical')
              return d.prototype.createEl.call(this, 'div', {
                className: 'vjs-volume-panel vjs-control ' + a,
              })
            }
            b.dispose = function () {
              this.handleMouseOut()
              d.prototype.dispose.call(this)
            }
            b.handleVolumeControlKeyUp = function (a) {
              Ba.isEventKey(a, 'Esc') && this.muteToggle.focus()
            }
            b.handleMouseOver = function (a) {
              this.addClass('vjs-hover')
              sb(pa, 'keyup', Ga(this, this.handleKeyPress))
            }
            b.handleMouseOut = function (a) {
              this.removeClass('vjs-hover')
              tb(pa, 'keyup', Ga(this, this.handleKeyPress))
            }
            b.handleKeyPress = function (a) {
              Ba.isEventKey(a, 'Esc') && this.handleMouseOut()
            }
            return c
          })(ja)
          sk.prototype.options_ = { children: ['muteToggle', 'volumeControl'] }
          ja.registerComponent('VolumePanel', sk)
          var Ug = (function (d) {
            function c(a, e) {
              a = d.call(this, a, e) || this
              e && (a.menuButton_ = e.menuButton)
              a.focusedChild_ = -1
              a.on('keydown', a.handleKeyDown)
              a.boundHandleBlur_ = Ga(Fa(a), a.handleBlur)
              a.boundHandleTapClick_ = Ga(Fa(a), a.handleTapClick)
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.addEventListenerForItem = function (a) {
              a instanceof ja &&
                (this.on(a, 'blur', this.boundHandleBlur_),
                this.on(a, ['tap', 'click'], this.boundHandleTapClick_))
            }
            b.removeEventListenerForItem = function (a) {
              a instanceof ja &&
                (this.off(a, 'blur', this.boundHandleBlur_),
                this.off(a, ['tap', 'click'], this.boundHandleTapClick_))
            }
            b.removeChild = function (a) {
              'string' === typeof a && (a = this.getChild(a))
              this.removeEventListenerForItem(a)
              d.prototype.removeChild.call(this, a)
            }
            b.addItem = function (a) {
              ;(a = this.addChild(a)) && this.addEventListenerForItem(a)
            }
            b.createEl = function () {
              this.contentEl_ = Na(this.options_.contentElType || 'ul', {
                className: 'vjs-menu-content',
              })
              this.contentEl_.setAttribute('role', 'menu')
              var a = d.prototype.createEl.call(this, 'div', {
                append: this.contentEl_,
                className: 'vjs-menu',
              })
              a.appendChild(this.contentEl_)
              sb(a, 'click', function (e) {
                e.preventDefault()
                e.stopImmediatePropagation()
              })
              return a
            }
            b.dispose = function () {
              this.boundHandleTapClick_ = this.boundHandleBlur_ = this.contentEl_ = null
              d.prototype.dispose.call(this)
            }
            b.handleBlur = function (a) {
              var e = a.relatedTarget || pa.activeElement
              this.children().some(function (n) {
                return n.el() === e
              }) ||
                ((a = this.menuButton_) &&
                  a.buttonPressed_ &&
                  e !== a.el().firstChild &&
                  a.unpressButton())
            }
            b.handleTapClick = function (a) {
              if (this.menuButton_) {
                this.menuButton_.unpressButton()
                var e = this.children()
                Array.isArray(e) &&
                  (e = e.filter(function (n) {
                    return n.el() === a.target
                  })[0]) &&
                  'CaptionSettingsMenuItem' !== e.name() &&
                  this.menuButton_.focus()
              }
            }
            b.handleKeyDown = function (a) {
              if (Ba.isEventKey(a, 'Left') || Ba.isEventKey(a, 'Down'))
                a.preventDefault(), a.stopPropagation(), this.stepForward()
              else if (Ba.isEventKey(a, 'Right') || Ba.isEventKey(a, 'Up'))
                a.preventDefault(), a.stopPropagation(), this.stepBack()
            }
            b.stepForward = function () {
              var a = 0
              void 0 !== this.focusedChild_ && (a = this.focusedChild_ + 1)
              this.focus(a)
            }
            b.stepBack = function () {
              var a = 0
              void 0 !== this.focusedChild_ && (a = this.focusedChild_ - 1)
              this.focus(a)
            }
            b.focus = function (a) {
              void 0 === a && (a = 0)
              var e = this.children().slice()
              e.length && e[0].hasClass('vjs-menu-title') && e.shift()
              0 < e.length &&
                (0 > a ? (a = 0) : a >= e.length && (a = e.length - 1),
                (this.focusedChild_ = a),
                e[a].el_.focus())
            }
            return c
          })(ja)
          ja.registerComponent('Menu', Ug)
          var Vg = (function (d) {
            function c(a, e) {
              void 0 === e && (e = {})
              var n = d.call(this, a, e) || this
              n.menuButton_ = new ec(a, e)
              n.menuButton_.controlText(n.controlText_)
              n.menuButton_.el_.setAttribute('aria-haspopup', 'true')
              a = ec.prototype.buildCSSClass()
              n.menuButton_.el_.className = n.buildCSSClass() + ' ' + a
              n.menuButton_.removeClass('vjs-control')
              n.addChild(n.menuButton_)
              n.update()
              n.enabled_ = !0
              n.on(n.menuButton_, 'tap', n.handleClick)
              n.on(n.menuButton_, 'click', n.handleClick)
              n.on(n.menuButton_, 'keydown', n.handleKeyDown)
              n.on(n.menuButton_, 'mouseenter', function () {
                n.addClass('vjs-hover')
                n.menu.show()
                sb(pa, 'keyup', Ga(Fa(n), n.handleMenuKeyUp))
              })
              n.on('mouseleave', n.handleMouseLeave)
              n.on('keydown', n.handleSubmenuKeyDown)
              return n
            }
            ua(c, d)
            var b = c.prototype
            b.update = function () {
              var a = this.createMenu()
              this.menu && (this.menu.dispose(), this.removeChild(this.menu))
              this.menu = a
              this.addChild(a)
              this.buttonPressed_ = !1
              this.menuButton_.el_.setAttribute('aria-expanded', 'false')
              this.items && this.items.length <= this.hideThreshold_ ? this.hide() : this.show()
            }
            b.createMenu = function () {
              var a = new Ug(this.player_, { menuButton: this })
              this.hideThreshold_ = 0
              if (this.options_.title) {
                var e = Na('li', {
                  className: 'vjs-menu-title',
                  innerHTML: Xa(this.options_.title),
                  tabIndex: -1,
                })
                this.hideThreshold_ += 1
                e = new ja(this.player_, { el: e })
                a.addItem(e)
              }
              if ((this.items = this.createItems()))
                for (e = 0; e < this.items.length; e++) a.addItem(this.items[e])
              return a
            }
            b.createItems = function () {}
            b.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'div',
                { className: this.buildWrapperCSSClass() },
                {},
              )
            }
            b.buildWrapperCSSClass = function () {
              var a = 'vjs-menu-button'
              a = !0 === this.options_.inline ? a + '-inline' : a + '-popup'
              var e = ec.prototype.buildCSSClass()
              return 'vjs-menu-button ' + a + ' ' + e + ' ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildCSSClass = function () {
              var a = 'vjs-menu-button'
              a = !0 === this.options_.inline ? a + '-inline' : a + '-popup'
              return 'vjs-menu-button ' + a + ' ' + d.prototype.buildCSSClass.call(this)
            }
            b.controlText = function (a, e) {
              void 0 === e && (e = this.menuButton_.el())
              return this.menuButton_.controlText(a, e)
            }
            b.dispose = function () {
              this.handleMouseLeave()
              d.prototype.dispose.call(this)
            }
            b.handleClick = function (a) {
              this.buttonPressed_ ? this.unpressButton() : this.pressButton()
            }
            b.handleMouseLeave = function (a) {
              this.removeClass('vjs-hover')
              tb(pa, 'keyup', Ga(this, this.handleMenuKeyUp))
            }
            b.focus = function () {
              this.menuButton_.focus()
            }
            b.blur = function () {
              this.menuButton_.blur()
            }
            b.handleKeyDown = function (a) {
              Ba.isEventKey(a, 'Esc') || Ba.isEventKey(a, 'Tab')
                ? (this.buttonPressed_ && this.unpressButton(),
                  Ba.isEventKey(a, 'Tab') || (a.preventDefault(), this.menuButton_.focus()))
                : (!Ba.isEventKey(a, 'Up') && !Ba.isEventKey(a, 'Down')) ||
                  this.buttonPressed_ ||
                  (a.preventDefault(), this.pressButton())
            }
            b.handleMenuKeyUp = function (a) {
              ;(Ba.isEventKey(a, 'Esc') || Ba.isEventKey(a, 'Tab')) && this.removeClass('vjs-hover')
            }
            b.handleSubmenuKeyPress = function (a) {
              this.handleSubmenuKeyDown(a)
            }
            b.handleSubmenuKeyDown = function (a) {
              if (Ba.isEventKey(a, 'Esc') || Ba.isEventKey(a, 'Tab'))
                this.buttonPressed_ && this.unpressButton(),
                  Ba.isEventKey(a, 'Tab') || (a.preventDefault(), this.menuButton_.focus())
            }
            b.pressButton = function () {
              this.enabled_ &&
                ((this.buttonPressed_ = !0),
                this.menu.show(),
                this.menu.lockShowing(),
                this.menuButton_.el_.setAttribute('aria-expanded', 'true'),
                (Pb && Bb()) || this.menu.focus())
            }
            b.unpressButton = function () {
              this.enabled_ &&
                ((this.buttonPressed_ = !1),
                this.menu.unlockShowing(),
                this.menu.hide(),
                this.menuButton_.el_.setAttribute('aria-expanded', 'false'))
            }
            b.disable = function () {
              this.unpressButton()
              this.enabled_ = !1
              this.addClass('vjs-disabled')
              this.menuButton_.disable()
            }
            b.enable = function () {
              this.enabled_ = !0
              this.removeClass('vjs-disabled')
              this.menuButton_.enable()
            }
            return c
          })(ja)
          ja.registerComponent('MenuButton', Vg)
          var Wg = (function (d) {
            function c(b, a) {
              var e = a.tracks
              b = d.call(this, b, a) || this
              1 >= b.items.length && b.hide()
              if (!e) return Fa(b)
              var n = Ga(Fa(b), b.update)
              e.addEventListener('removetrack', n)
              e.addEventListener('addtrack', n)
              e.addEventListener('labelchange', n)
              b.player_.on('ready', n)
              b.player_.on('dispose', function () {
                e.removeEventListener('removetrack', n)
                e.removeEventListener('addtrack', n)
                e.removeEventListener('labelchange', n)
              })
              return b
            }
            ua(c, d)
            return c
          })(Vg)
          ja.registerComponent('TrackButton', Wg)
          var So = 'Tab Esc Up Down Right Left'.split(' '),
            de = (function (d) {
              function c(a, e) {
                a = d.call(this, a, e) || this
                a.selectable = e.selectable
                a.isSelected_ = e.selected || !1
                a.multiSelectable = e.multiSelectable
                a.selected(a.isSelected_)
                a.selectable
                  ? a.multiSelectable
                    ? a.el_.setAttribute('role', 'menuitemcheckbox')
                    : a.el_.setAttribute('role', 'menuitemradio')
                  : a.el_.setAttribute('role', 'menuitem')
                return a
              }
              ua(c, d)
              var b = c.prototype
              b.createEl = function (a, e, n) {
                this.nonIconControl = !0
                return d.prototype.createEl.call(
                  this,
                  'li',
                  X(
                    {
                      className: 'vjs-menu-item',
                      innerHTML:
                        '<span class="vjs-menu-item-text">' +
                        this.localize(this.options_.label) +
                        '</span>',
                      tabIndex: -1,
                    },
                    e,
                  ),
                  n,
                )
              }
              b.handleKeyDown = function (a) {
                So.some(function (e) {
                  return Ba.isEventKey(a, e)
                }) || d.prototype.handleKeyDown.call(this, a)
              }
              b.handleClick = function (a) {
                this.selected(!0)
              }
              b.selected = function (a) {
                this.selectable &&
                  (a
                    ? (this.addClass('vjs-selected'),
                      this.el_.setAttribute('aria-checked', 'true'),
                      this.controlText(', selected'),
                      (this.isSelected_ = !0))
                    : (this.removeClass('vjs-selected'),
                      this.el_.setAttribute('aria-checked', 'false'),
                      this.controlText(''),
                      (this.isSelected_ = !1)))
              }
              return c
            })($e)
          ja.registerComponent('MenuItem', de)
          var ee = (function (d) {
            function c(a, e) {
              var n = e.track,
                q = a.textTracks()
              e.label = n.label || n.language || 'Unknown'
              e.selected = 'showing' === n.mode
              var t = d.call(this, a, e) || this
              t.track = n
              t.kinds = (e.kinds || [e.kind || t.track.kind]).filter(Boolean)
              var v = function () {
                  for (var m = arguments.length, l = Array(m), f = 0; f < m; f++)
                    l[f] = arguments[f]
                  t.handleTracksChange.apply(Fa(t), l)
                },
                r = function () {
                  for (var m = arguments.length, l = Array(m), f = 0; f < m; f++)
                    l[f] = arguments[f]
                  t.handleSelectedLanguageChange.apply(Fa(t), l)
                }
              a.on(['loadstart', 'texttrackchange'], v)
              q.addEventListener('change', v)
              q.addEventListener('selectedlanguagechange', r)
              t.on('dispose', function () {
                a.off(['loadstart', 'texttrackchange'], v)
                q.removeEventListener('change', v)
                q.removeEventListener('selectedlanguagechange', r)
              })
              if (void 0 === q.onchange) {
                var p
                t.on(['tap', 'click'], function () {
                  if ('object' !== typeof ca.Event)
                    try {
                      p = new ca.Event('change')
                    } catch (m) {}
                  p || ((p = pa.createEvent('Event')), p.initEvent('change', !0, !0))
                  q.dispatchEvent(p)
                })
              }
              t.handleTracksChange()
              return t
            }
            ua(c, d)
            var b = c.prototype
            b.handleClick = function (a) {
              var e = this.track,
                n = this.player_.textTracks()
              d.prototype.handleClick.call(this, a)
              if (n)
                for (a = 0; a < n.length; a++) {
                  var q = n[a]
                  ;-1 !== this.kinds.indexOf(q.kind) &&
                    (q === e
                      ? 'showing' !== q.mode && (q.mode = 'showing')
                      : 'disabled' !== q.mode && (q.mode = 'disabled'))
                }
            }
            b.handleTracksChange = function (a) {
              a = 'showing' === this.track.mode
              a !== this.isSelected_ && this.selected(a)
            }
            b.handleSelectedLanguageChange = function (a) {
              'showing' === this.track.mode &&
                ((a = this.player_.cache_.selectedLanguage),
                (a &&
                  a.enabled &&
                  a.language === this.track.language &&
                  a.kind !== this.track.kind) ||
                  (this.player_.cache_.selectedLanguage = {
                    enabled: !0,
                    language: this.track.language,
                    kind: this.track.kind,
                  }))
            }
            b.dispose = function () {
              this.track = null
              d.prototype.dispose.call(this)
            }
            return c
          })(de)
          ja.registerComponent('TextTrackMenuItem', ee)
          var tk = (function (d) {
            function c(a, e) {
              e.track = { player: a, kind: e.kind, kinds: e.kinds, default: !1, mode: 'disabled' }
              e.kinds || (e.kinds = [e.kind])
              e.track.label = e.label ? e.label : e.kinds.join(' and ') + ' off'
              e.selectable = !0
              e.multiSelectable = !1
              return d.call(this, a, e) || this
            }
            ua(c, d)
            var b = c.prototype
            b.handleTracksChange = function (a) {
              a = this.player().textTracks()
              for (var e = !0, n = 0, q = a.length; n < q; n++) {
                var t = a[n]
                if (-1 < this.options_.kinds.indexOf(t.kind) && 'showing' === t.mode) {
                  e = !1
                  break
                }
              }
              e !== this.isSelected_ && this.selected(e)
            }
            b.handleSelectedLanguageChange = function (a) {
              a = this.player().textTracks()
              for (var e = !0, n = 0, q = a.length; n < q; n++) {
                var t = a[n]
                if (
                  -1 < ['captions', 'descriptions', 'subtitles'].indexOf(t.kind) &&
                  'showing' === t.mode
                ) {
                  e = !1
                  break
                }
              }
              e && (this.player_.cache_.selectedLanguage = { enabled: !1 })
            }
            return c
          })(ee)
          ja.registerComponent('OffTextTrackMenuItem', tk)
          var xd = (function (d) {
            function c(b, a) {
              void 0 === a && (a = {})
              a.tracks = b.textTracks()
              return d.call(this, b, a) || this
            }
            ua(c, d)
            c.prototype.createItems = function (b, a) {
              void 0 === b && (b = [])
              void 0 === a && (a = ee)
              var e
              this.label_ && (e = this.label_ + ' off')
              b.push(new tk(this.player_, { kinds: this.kinds_, kind: this.kind_, label: e }))
              this.hideThreshold_ += 1
              e = this.player_.textTracks()
              Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_])
              for (var n = 0; n < e.length; n++) {
                var q = e[n]
                if (-1 < this.kinds_.indexOf(q.kind)) {
                  var t = new a(this.player_, {
                    track: q,
                    kinds: this.kinds_,
                    kind: this.kind_,
                    selectable: !0,
                    multiSelectable: !1,
                  })
                  t.addClass('vjs-' + q.kind + '-menu-item')
                  b.push(t)
                }
              }
              return b
            }
            return c
          })(Wg)
          ja.registerComponent('TextTrackButton', xd)
          var uk = (function (d) {
            function c(a, e) {
              var n = e.track,
                q = e.cue,
                t = a.currentTime()
              e.selectable = !0
              e.multiSelectable = !1
              e.label = q.text
              e.selected = q.startTime <= t && t < q.endTime
              a = d.call(this, a, e) || this
              a.track = n
              a.cue = q
              n.addEventListener('cuechange', Ga(Fa(a), a.update))
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.handleClick = function (a) {
              d.prototype.handleClick.call(this)
              this.player_.currentTime(this.cue.startTime)
              this.update(this.cue.startTime)
            }
            b.update = function (a) {
              a = this.cue
              var e = this.player_.currentTime()
              this.selected(a.startTime <= e && e < a.endTime)
            }
            return c
          })(de)
          ja.registerComponent('ChaptersTrackMenuItem', uk)
          var Xg = (function (d) {
            function c(a, e, n) {
              return d.call(this, a, e, n) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-chapters-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-chapters-button ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            b.update = function (a) {
              ;(this.track_ && (!a || ('addtrack' !== a.type && 'removetrack' !== a.type))) ||
                this.setTrack(this.findChaptersTrack())
              d.prototype.update.call(this)
            }
            b.setTrack = function (a) {
              if (this.track_ !== a) {
                this.updateHandler_ || (this.updateHandler_ = this.update.bind(this))
                if (this.track_) {
                  var e = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_)
                  e && e.removeEventListener('load', this.updateHandler_)
                  this.track_ = null
                }
                if ((this.track_ = a))
                  (this.track_.mode = 'hidden'),
                    (a = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_)) &&
                      a.addEventListener('load', this.updateHandler_)
              }
            }
            b.findChaptersTrack = function () {
              for (var a = this.player_.textTracks() || [], e = a.length - 1; 0 <= e; e--) {
                var n = a[e]
                if (n.kind === this.kind_) return n
              }
            }
            b.getMenuCaption = function () {
              return this.track_ && this.track_.label
                ? this.track_.label
                : this.localize(Xa(this.kind_))
            }
            b.createMenu = function () {
              this.options_.title = this.getMenuCaption()
              return d.prototype.createMenu.call(this)
            }
            b.createItems = function () {
              var a = []
              if (!this.track_) return a
              var e = this.track_.cues
              if (!e) return a
              for (var n = 0, q = e.length; n < q; n++) {
                var t = new uk(this.player_, { track: this.track_, cue: e[n] })
                a.push(t)
              }
              return a
            }
            return c
          })(xd)
          Xg.prototype.kind_ = 'chapters'
          Xg.prototype.controlText_ = 'Chapters'
          ja.registerComponent('ChaptersButton', Xg)
          var Yg = (function (d) {
            function c(a, e, n) {
              e = d.call(this, a, e, n) || this
              var q = a.textTracks(),
                t = Ga(Fa(e), e.handleTracksChange)
              q.addEventListener('change', t)
              e.on('dispose', function () {
                q.removeEventListener('change', t)
              })
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.handleTracksChange = function (a) {
              a = this.player().textTracks()
              for (var e = !1, n = 0, q = a.length; n < q; n++) {
                var t = a[n]
                if (t.kind !== this.kind_ && 'showing' === t.mode) {
                  e = !0
                  break
                }
              }
              e ? this.disable() : this.enable()
            }
            b.buildCSSClass = function () {
              return 'vjs-descriptions-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-descriptions-button ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            return c
          })(xd)
          Yg.prototype.kind_ = 'descriptions'
          Yg.prototype.controlText_ = 'Descriptions'
          ja.registerComponent('DescriptionsButton', Yg)
          var Zg = (function (d) {
            function c(a, e, n) {
              return d.call(this, a, e, n) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-subtitles-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-subtitles-button ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            return c
          })(xd)
          Zg.prototype.kind_ = 'subtitles'
          Zg.prototype.controlText_ = 'Subtitles'
          ja.registerComponent('SubtitlesButton', Zg)
          var $g = (function (d) {
            function c(b, a) {
              a.track = {
                player: b,
                kind: a.kind,
                label: a.kind + ' settings',
                selectable: !1,
                default: !1,
                mode: 'disabled',
              }
              a.selectable = !1
              a.name = 'CaptionSettingsMenuItem'
              b = d.call(this, b, a) || this
              b.addClass('vjs-texttrack-settings')
              b.controlText(', opens ' + a.kind + ' settings dialog')
              return b
            }
            ua(c, d)
            c.prototype.handleClick = function (b) {
              this.player().getChild('textTrackSettings').open()
            }
            return c
          })(ee)
          ja.registerComponent('CaptionSettingsMenuItem', $g)
          var ah = (function (d) {
            function c(a, e, n) {
              return d.call(this, a, e, n) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-captions-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-captions-button ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            b.createItems = function () {
              var a = []
              ;(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) ||
                !this.player().getChild('textTrackSettings') ||
                (a.push(new $g(this.player_, { kind: this.kind_ })), (this.hideThreshold_ += 1))
              return d.prototype.createItems.call(this, a)
            }
            return c
          })(xd)
          ah.prototype.kind_ = 'captions'
          ah.prototype.controlText_ = 'Captions'
          ja.registerComponent('CaptionsButton', ah)
          var vk = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            c.prototype.createEl = function (b, a, e) {
              var n = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label)
              'captions' === this.options_.track.kind &&
                (n +=
                  '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' +
                  this.localize('Captions') +
                  '</span>\n      ')
              return d.prototype.createEl.call(this, b, X({ innerHTML: n + '</span>' }, a), e)
            }
            return c
          })(ee)
          ja.registerComponent('SubsCapsMenuItem', vk)
          var bh = (function (d) {
            function c(a, e) {
              void 0 === e && (e = {})
              a = d.call(this, a, e) || this
              a.label_ = 'subtitles'
              ;-1 < ['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(a.player_.language_) &&
                (a.label_ = 'captions')
              a.menuButton_.controlText(Xa(a.label_))
              return a
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-subs-caps-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-subs-caps-button ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            b.createItems = function () {
              var a = []
              ;(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) ||
                !this.player().getChild('textTrackSettings') ||
                (a.push(new $g(this.player_, { kind: this.label_ })), (this.hideThreshold_ += 1))
              return (a = d.prototype.createItems.call(this, a, vk))
            }
            return c
          })(xd)
          bh.prototype.kinds_ = ['captions', 'subtitles']
          bh.prototype.controlText_ = 'Subtitles'
          ja.registerComponent('SubsCapsButton', bh)
          var wk = (function (d) {
            function c(a, e) {
              var n = e.track,
                q = a.audioTracks()
              e.label = n.label || n.language || 'Unknown'
              e.selected = n.enabled
              var t = d.call(this, a, e) || this
              t.track = n
              t.addClass('vjs-' + n.kind + '-menu-item')
              var v = function () {
                for (var r = arguments.length, p = Array(r), m = 0; m < r; m++) p[m] = arguments[m]
                t.handleTracksChange.apply(Fa(t), p)
              }
              q.addEventListener('change', v)
              t.on('dispose', function () {
                q.removeEventListener('change', v)
              })
              return t
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function (a, e, n) {
              var q = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label)
              'main-desc' === this.options_.track.kind &&
                (q +=
                  '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' +
                  this.localize('Descriptions') +
                  '</span>\n      ')
              return d.prototype.createEl.call(this, a, X({ innerHTML: q + '</span>' }, e), n)
            }
            b.handleClick = function (a) {
              var e = this.player_.audioTracks()
              d.prototype.handleClick.call(this, a)
              for (a = 0; a < e.length; a++) {
                var n = e[a]
                n.enabled = n === this.track
              }
            }
            b.handleTracksChange = function (a) {
              this.selected(this.track.enabled)
            }
            return c
          })(de)
          ja.registerComponent('AudioTrackMenuItem', wk)
          var xk = (function (d) {
            function c(a, e) {
              void 0 === e && (e = {})
              e.tracks = a.audioTracks()
              return d.call(this, a, e) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-audio-button ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-audio-button ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            b.createItems = function (a) {
              void 0 === a && (a = [])
              this.hideThreshold_ = 1
              for (var e = this.player_.audioTracks(), n = 0; n < e.length; n++)
                a.push(new wk(this.player_, { track: e[n], selectable: !0, multiSelectable: !1 }))
              return a
            }
            return c
          })(Wg)
          xk.prototype.controlText_ = 'Audio Track'
          ja.registerComponent('AudioTrackButton', xk)
          var ch = (function (d) {
            function c(a, e) {
              var n = e.rate,
                q = parseFloat(n, 10)
              e.label = n
              e.selected = 1 === q
              e.selectable = !0
              e.multiSelectable = !1
              e = d.call(this, a, e) || this
              e.label = n
              e.rate = q
              e.on(a, 'ratechange', e.update)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.handleClick = function (a) {
              d.prototype.handleClick.call(this)
              this.player().playbackRate(this.rate)
            }
            b.update = function (a) {
              this.selected(this.player().playbackRate() === this.rate)
            }
            return c
          })(de)
          ch.prototype.contentElType = 'button'
          ja.registerComponent('PlaybackRateMenuItem', ch)
          var yk = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.updateVisibility()
              e.updateLabel()
              e.on(a, 'loadstart', e.updateVisibility)
              e.on(a, 'ratechange', e.updateLabel)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              var a = d.prototype.createEl.call(this)
              this.labelEl_ = Na('div', { className: 'vjs-playback-rate-value', innerHTML: '1x' })
              a.appendChild(this.labelEl_)
              return a
            }
            b.dispose = function () {
              this.labelEl_ = null
              d.prototype.dispose.call(this)
            }
            b.buildCSSClass = function () {
              return 'vjs-playback-rate ' + d.prototype.buildCSSClass.call(this)
            }
            b.buildWrapperCSSClass = function () {
              return 'vjs-playback-rate ' + d.prototype.buildWrapperCSSClass.call(this)
            }
            b.createMenu = function () {
              var a = new Ug(this.player()),
                e = this.playbackRates()
              if (e)
                for (var n = e.length - 1; 0 <= n; n--)
                  a.addChild(new ch(this.player(), { rate: e[n] + 'x' }))
              return a
            }
            b.updateARIAAttributes = function () {
              this.el().setAttribute('aria-valuenow', this.player().playbackRate())
            }
            b.handleClick = function (a) {
              a = this.player().playbackRate()
              for (var e = this.playbackRates(), n = e[0], q = 0; q < e.length; q++)
                if (e[q] > a) {
                  n = e[q]
                  break
                }
              this.player().playbackRate(n)
            }
            b.playbackRates = function () {
              return (
                this.options_.playbackRates ||
                (this.options_.playerOptions && this.options_.playerOptions.playbackRates)
              )
            }
            b.playbackRateSupported = function () {
              return (
                this.player().tech_ &&
                this.player().tech_.featuresPlaybackRate &&
                this.playbackRates() &&
                0 < this.playbackRates().length
              )
            }
            b.updateVisibility = function (a) {
              this.playbackRateSupported()
                ? this.removeClass('vjs-hidden')
                : this.addClass('vjs-hidden')
            }
            b.updateLabel = function (a) {
              this.playbackRateSupported() &&
                (this.labelEl_.innerHTML = this.player().playbackRate() + 'x')
            }
            return c
          })(Vg)
          yk.prototype.controlText_ = 'Playback Rate'
          ja.registerComponent('PlaybackRateMenuButton', yk)
          var zk = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-spacer ' + d.prototype.buildCSSClass.call(this)
            }
            b.createEl = function () {
              return d.prototype.createEl.call(this, 'div', { className: this.buildCSSClass() })
            }
            return c
          })(ja)
          ja.registerComponent('Spacer', zk)
          var To = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-custom-control-spacer ' + d.prototype.buildCSSClass.call(this)
            }
            b.createEl = function () {
              var a = d.prototype.createEl.call(this, { className: this.buildCSSClass() })
              a.innerHTML = '\u00a0'
              return a
            }
            return c
          })(zk)
          ja.registerComponent('CustomControlSpacer', To)
          var af = (function (d) {
            function c() {
              return d.apply(this, arguments) || this
            }
            ua(c, d)
            c.prototype.createEl = function () {
              return d.prototype.createEl.call(this, 'div', {
                className: 'vjs-control-bar',
                dir: 'ltr',
              })
            }
            return c
          })(ja)
          af.prototype.options_ = {
            children:
              'playToggle volumePanel currentTimeDisplay timeDivider durationDisplay progressControl liveDisplay seekToLive remainingTimeDisplay customControlSpacer playbackRateMenuButton chaptersButton descriptionsButton subsCapsButton audioTrackButton fullscreenToggle'.split(
                ' ',
              ),
          }
          'exitPictureInPicture' in pa &&
            af.prototype.options_.children.splice(
              af.prototype.options_.children.length - 1,
              0,
              'pictureInPictureToggle',
            )
          ja.registerComponent('ControlBar', af)
          var Ak = (function (d) {
            function c(a, e) {
              e = d.call(this, a, e) || this
              e.on(a, 'error', e.open)
              return e
            }
            ua(c, d)
            var b = c.prototype
            b.buildCSSClass = function () {
              return 'vjs-error-display ' + d.prototype.buildCSSClass.call(this)
            }
            b.content = function () {
              var a = this.player().error()
              return a ? this.localize(a.message) : ''
            }
            return c
          })(sd)
          Ak.prototype.options_ = He({}, sd.prototype.options_, {
            pauseOnOpen: !1,
            fillAlways: !0,
            temporary: !1,
            uncloseable: !0,
          })
          ja.registerComponent('ErrorDisplay', Ak)
          var Bk = ['#000', 'Black'],
            Ck = ['#00F', 'Blue'],
            Dk = ['#0FF', 'Cyan'],
            Ek = ['#0F0', 'Green'],
            Fk = ['#F0F', 'Magenta'],
            Gk = ['#F00', 'Red'],
            Hk = ['#FFF', 'White'],
            Ik = ['#FF0', 'Yellow'],
            dh = ['1', 'Opaque'],
            eh = ['0.5', 'Semi-Transparent'],
            Jk = ['0', 'Transparent'],
            Wc = {
              backgroundColor: {
                selector: '.vjs-bg-color > select',
                id: 'captions-background-color-%s',
                label: 'Color',
                options: [Bk, Hk, Gk, Ek, Ck, Ik, Fk, Dk],
              },
              backgroundOpacity: {
                selector: '.vjs-bg-opacity > select',
                id: 'captions-background-opacity-%s',
                label: 'Transparency',
                options: [dh, eh, Jk],
              },
              color: {
                selector: '.vjs-fg-color > select',
                id: 'captions-foreground-color-%s',
                label: 'Color',
                options: [Hk, Bk, Gk, Ek, Ck, Ik, Fk, Dk],
              },
              edgeStyle: {
                selector: '.vjs-edge-style > select',
                id: '%s',
                label: 'Text Edge Style',
                options: [
                  ['none', 'None'],
                  ['raised', 'Raised'],
                  ['depressed', 'Depressed'],
                  ['uniform', 'Uniform'],
                  ['dropshadow', 'Dropshadow'],
                ],
              },
              fontFamily: {
                selector: '.vjs-font-family > select',
                id: 'captions-font-family-%s',
                label: 'Font Family',
                options: [
                  ['proportionalSansSerif', 'Proportional Sans-Serif'],
                  ['monospaceSansSerif', 'Monospace Sans-Serif'],
                  ['proportionalSerif', 'Proportional Serif'],
                  ['monospaceSerif', 'Monospace Serif'],
                  ['casual', 'Casual'],
                  ['script', 'Script'],
                  ['small-caps', 'Small Caps'],
                ],
              },
              fontPercent: {
                selector: '.vjs-font-percent > select',
                id: 'captions-font-size-%s',
                label: 'Font Size',
                options: [
                  ['0.50', '50%'],
                  ['0.75', '75%'],
                  ['1.00', '100%'],
                  ['1.25', '125%'],
                  ['1.50', '150%'],
                  ['1.75', '175%'],
                  ['2.00', '200%'],
                  ['3.00', '300%'],
                  ['4.00', '400%'],
                ],
                default: 2,
                parser: function (d) {
                  return '1.00' === d ? null : Number(d)
                },
              },
              textOpacity: {
                selector: '.vjs-text-opacity > select',
                id: 'captions-foreground-opacity-%s',
                label: 'Transparency',
                options: [dh, eh],
              },
              windowColor: {
                selector: '.vjs-window-color > select',
                id: 'captions-window-color-%s',
                label: 'Color',
              },
              windowOpacity: {
                selector: '.vjs-window-opacity > select',
                id: 'captions-window-opacity-%s',
                label: 'Transparency',
                options: [Jk, eh, dh],
              },
            }
          Wc.windowColor.options = Wc.backgroundColor.options
          var Uo = (function (d) {
            function c(a, e) {
              e.temporary = !1
              var n = d.call(this, a, e) || this
              n.updateDisplay = Ga(Fa(n), n.updateDisplay)
              n.fill()
              n.hasBeenOpened_ = n.hasBeenFilled_ = !0
              n.endDialog = Na('p', {
                className: 'vjs-control-text',
                textContent: n.localize('End of dialog window.'),
              })
              n.el().appendChild(n.endDialog)
              n.setDefaults()
              void 0 === e.persistTextTrackSettings &&
                (n.options_.persistTextTrackSettings =
                  n.options_.playerOptions.persistTextTrackSettings)
              n.on(n.$('.vjs-done-button'), 'click', function () {
                n.saveSettings()
                n.close()
              })
              n.on(n.$('.vjs-default-button'), 'click', function () {
                n.setDefaults()
                n.updateDisplay()
              })
              Z(Wc, function (q) {
                n.on(n.$(q.selector), 'change', n.updateDisplay)
              })
              n.options_.persistTextTrackSettings && n.restoreSettings()
              return n
            }
            ua(c, d)
            var b = c.prototype
            b.dispose = function () {
              this.endDialog = null
              d.prototype.dispose.call(this)
            }
            b.createElSelect_ = function (a, e, n) {
              var q = this
              void 0 === e && (e = '')
              void 0 === n && (n = 'label')
              a = Wc[a]
              var t = a.id.replace('%s', this.id_),
                v = [e, t].join(' ').trim()
              return [
                '<' + n + ' id="' + t + '" class="' + ('label' === n ? 'vjs-label' : '') + '">',
                this.localize(a.label),
                '</' + n + '>',
                '<select aria-labelledby="' + v + '">',
              ]
                .concat(
                  a.options.map(function (r) {
                    var p = t + '-' + r[1].replace(/\W+/g, '')
                    return [
                      '<option id="' + p + '" value="' + r[0] + '" ',
                      'aria-labelledby="' + v + ' ' + p + '">',
                      q.localize(r[1]),
                      '</option>',
                    ].join('')
                  }),
                )
                .concat('</select>')
                .join('')
            }
            b.createElFgColor_ = function () {
              var a = 'captions-text-legend-' + this.id_
              return [
                '<fieldset class="vjs-fg-color vjs-track-setting">',
                '<legend id="' + a + '">',
                this.localize('Text'),
                '</legend>',
                this.createElSelect_('color', a),
                '<span class="vjs-text-opacity vjs-opacity">',
                this.createElSelect_('textOpacity', a),
                '</span></fieldset>',
              ].join('')
            }
            b.createElBgColor_ = function () {
              var a = 'captions-background-' + this.id_
              return [
                '<fieldset class="vjs-bg-color vjs-track-setting">',
                '<legend id="' + a + '">',
                this.localize('Background'),
                '</legend>',
                this.createElSelect_('backgroundColor', a),
                '<span class="vjs-bg-opacity vjs-opacity">',
                this.createElSelect_('backgroundOpacity', a),
                '</span></fieldset>',
              ].join('')
            }
            b.createElWinColor_ = function () {
              var a = 'captions-window-' + this.id_
              return [
                '<fieldset class="vjs-window-color vjs-track-setting">',
                '<legend id="' + a + '">',
                this.localize('Window'),
                '</legend>',
                this.createElSelect_('windowColor', a),
                '<span class="vjs-window-opacity vjs-opacity">',
                this.createElSelect_('windowOpacity', a),
                '</span></fieldset>',
              ].join('')
            }
            b.createElColors_ = function () {
              return Na('div', {
                className: 'vjs-track-settings-colors',
                innerHTML: [
                  this.createElFgColor_(),
                  this.createElBgColor_(),
                  this.createElWinColor_(),
                ].join(''),
              })
            }
            b.createElFont_ = function () {
              return Na('div', {
                className: 'vjs-track-settings-font',
                innerHTML: [
                  '<fieldset class="vjs-font-percent vjs-track-setting">',
                  this.createElSelect_('fontPercent', '', 'legend'),
                  '</fieldset><fieldset class="vjs-edge-style vjs-track-setting">',
                  this.createElSelect_('edgeStyle', '', 'legend'),
                  '</fieldset><fieldset class="vjs-font-family vjs-track-setting">',
                  this.createElSelect_('fontFamily', '', 'legend'),
                  '</fieldset>',
                ].join(''),
              })
            }
            b.createElControls_ = function () {
              var a = this.localize('restore all settings to the default values')
              return Na('div', {
                className: 'vjs-track-settings-controls',
                innerHTML: [
                  '<button type="button" class="vjs-default-button" title="' + a + '">',
                  this.localize('Reset'),
                  '<span class="vjs-control-text"> ' + a + '</span>',
                  '</button>',
                  '<button type="button" class="vjs-done-button">' +
                    this.localize('Done') +
                    '</button>',
                ].join(''),
              })
            }
            b.content = function () {
              return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
            }
            b.label = function () {
              return this.localize('Caption Settings Dialog')
            }
            b.description = function () {
              return this.localize(
                'Beginning of dialog window. Escape will cancel and close the window.',
              )
            }
            b.buildCSSClass = function () {
              return d.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings'
            }
            b.getValues = function () {
              var a = this
              return S(
                Wc,
                function (e, n, q) {
                  var t = a.$(n.selector)
                  n = ej(t.options[t.options.selectedIndex].value, n.parser)
                  void 0 !== n && (e[q] = n)
                  return e
                },
                {},
              )
            }
            b.setValues = function (a) {
              var e = this
              Z(Wc, function (n, q) {
                var t = e.$(n.selector)
                q = a[q]
                n = n.parser
                if (q)
                  for (var v = 0; v < t.options.length; v++)
                    if (ej(t.options[v].value, n) === q) {
                      t.selectedIndex = v
                      break
                    }
              })
            }
            b.setDefaults = function () {
              var a = this
              Z(Wc, function (e) {
                var n = e.hasOwnProperty('default') ? e['default'] : 0
                a.$(e.selector).selectedIndex = n
              })
            }
            b.restoreSettings = function () {
              try {
                var a = JSON.parse(ca.localStorage.getItem('vjs-text-track-settings'))
              } catch (e) {
                Ea.warn(e)
              }
              a && this.setValues(a)
            }
            b.saveSettings = function () {
              if (this.options_.persistTextTrackSettings) {
                var a = this.getValues()
                try {
                  Object.keys(a).length
                    ? ca.localStorage.setItem('vjs-text-track-settings', JSON.stringify(a))
                    : ca.localStorage.removeItem('vjs-text-track-settings')
                } catch (e) {
                  Ea.warn(e)
                }
              }
            }
            b.updateDisplay = function () {
              var a = this.player_.getChild('textTrackDisplay')
              a && a.updateDisplay()
            }
            b.conditionalBlur_ = function () {
              this.previouslyActiveEl_ = null
              var a = this.player_.controlBar,
                e = a && a.subsCapsButton
              a = a && a.captionsButton
              e ? e.focus() : a && a.focus()
            }
            return c
          })(sd)
          ja.registerComponent('TextTrackSettings', Uo)
          var Vo = (function (d) {
            function c(a, e) {
              var n = e.ResizeObserver || ca.ResizeObserver
              null === e.ResizeObserver && (n = !1)
              var q = Pa({ createEl: !n, reportTouchActivity: !1 }, e)
              var t = d.call(this, a, q) || this
              t.ResizeObserver = e.ResizeObserver || ca.ResizeObserver
              t.loadListener_ = null
              t.resizeObserver_ = null
              t.debouncedHandler_ = ko(
                function () {
                  t.resizeHandler()
                },
                100,
                !1,
                Fa(t),
              )
              n
                ? ((t.resizeObserver_ = new t.ResizeObserver(t.debouncedHandler_)),
                  t.resizeObserver_.observe(a.el()))
                : ((t.loadListener_ = function () {
                    if (t.el_ && t.el_.contentWindow) {
                      var v = t.debouncedHandler_,
                        r = (t.unloadListener_ = function () {
                          tb(this, 'resize', v)
                          tb(this, 'unload', r)
                          r = null
                        })
                      sb(t.el_.contentWindow, 'unload', r)
                      sb(t.el_.contentWindow, 'resize', v)
                    }
                  }),
                  t.one('load', t.loadListener_))
              return t
            }
            ua(c, d)
            var b = c.prototype
            b.createEl = function () {
              return d.prototype.createEl.call(
                this,
                'iframe',
                { className: 'vjs-resize-manager', tabIndex: -1 },
                { 'aria-hidden': 'true' },
              )
            }
            b.resizeHandler = function () {
              this.player_ && this.player_.trigger && this.player_.trigger('playerresize')
            }
            b.dispose = function () {
              this.debouncedHandler_ && this.debouncedHandler_.cancel()
              this.resizeObserver_ &&
                (this.player_.el() && this.resizeObserver_.unobserve(this.player_.el()),
                this.resizeObserver_.disconnect())
              this.loadListener_ && this.off('load', this.loadListener_)
              this.el_ &&
                this.el_.contentWindow &&
                this.unloadListener_ &&
                this.unloadListener_.call(this.el_.contentWindow)
              this.loadListener_ =
                this.debouncedHandler_ =
                this.resizeObserver =
                this.ResizeObserver =
                  null
              d.prototype.dispose.call(this)
            }
            return c
          })(ja)
          ja.registerComponent('ResizeManager', Vo)
          var Wo = { trackingThreshold: 30, liveTolerance: 15 },
            Xo = (function (d) {
              function c(a, e) {
                e = Pa(Wo, e, { createEl: !1 })
                var n = d.call(this, a, e) || this
                n.reset_()
                n.on(n.player_, 'durationchange', n.handleDurationchange)
                n.one(n.player_, 'canplay', function () {
                  return n.toggleTracking()
                })
                if (Zd && 'hidden' in pa && 'visibilityState' in pa)
                  n.on(pa, 'visibilitychange', n.handleVisibilityChange)
                return n
              }
              ua(c, d)
              var b = c.prototype
              b.handleVisibilityChange = function () {
                Infinity === this.player_.duration() &&
                  (pa.hidden ? this.stopTracking() : this.startTracking())
              }
              b.trackLive_ = function () {
                var a = this.player_.seekable()
                if (a && a.length) {
                  a = Number(ca.performance.now().toFixed(4))
                  var e = -1 === this.lastTime_ ? 0 : (a - this.lastTime_) / 1e3
                  this.lastTime_ = a
                  this.pastSeekEnd_ = this.pastSeekEnd() + e
                  a = this.liveCurrentTime()
                  e = this.player_.currentTime()
                  e =
                    this.player_.paused() ||
                    this.seekedBehindLive_ ||
                    Math.abs(a - e) > this.options_.liveTolerance
                  ;(this.timeupdateSeen_ && Infinity !== a) || (e = !1)
                  e !== this.behindLiveEdge_ &&
                    ((this.behindLiveEdge_ = e), this.trigger('liveedgechange'))
                }
              }
              b.handleDurationchange = function () {
                this.toggleTracking()
              }
              b.toggleTracking = function () {
                Infinity === this.player_.duration() &&
                this.liveWindow() >= this.options_.trackingThreshold
                  ? (this.player_.options_.liveui && this.player_.addClass('vjs-liveui'),
                    this.startTracking())
                  : (this.player_.removeClass('vjs-liveui'), this.stopTracking())
              }
              b.startTracking = function () {
                if (!this.isTracking())
                  if (
                    (this.timeupdateSeen_ || (this.timeupdateSeen_ = this.player_.hasStarted()),
                    (this.trackingInterval_ = this.setInterval(this.trackLive_, 30)),
                    this.trackLive_(),
                    this.on(this.player_, ['play', 'pause'], this.trackLive_),
                    this.timeupdateSeen_)
                  )
                    this.on(this.player_, 'seeked', this.handleSeeked)
                  else
                    this.one(this.player_, 'play', this.handlePlay),
                      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate)
              }
              b.handleFirstTimeupdate = function () {
                this.timeupdateSeen_ = !0
                this.on(this.player_, 'seeked', this.handleSeeked)
              }
              b.handleSeeked = function () {
                var a = Math.abs(this.liveCurrentTime() - this.player_.currentTime())
                this.seekedBehindLive_ = this.skipNextSeeked_ ? !1 : 2 < a
                this.skipNextSeeked_ = !1
                this.trackLive_()
              }
              b.handlePlay = function () {
                this.one(this.player_, 'timeupdate', this.seekToLiveEdge)
              }
              b.reset_ = function () {
                this.lastTime_ = -1
                this.pastSeekEnd_ = 0
                this.lastSeekEnd_ = -1
                this.behindLiveEdge_ = !0
                this.skipNextSeeked_ = this.seekedBehindLive_ = this.timeupdateSeen_ = !1
                this.clearInterval(this.trackingInterval_)
                this.trackingInterval_ = null
                this.off(this.player_, ['play', 'pause'], this.trackLive_)
                this.off(this.player_, 'seeked', this.handleSeeked)
                this.off(this.player_, 'play', this.handlePlay)
                this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate)
                this.off(this.player_, 'timeupdate', this.seekToLiveEdge)
              }
              b.stopTracking = function () {
                this.isTracking() && (this.reset_(), this.trigger('liveedgechange'))
              }
              b.seekableEnd = function () {
                for (var a = this.player_.seekable(), e = [], n = a ? a.length : 0; n--; )
                  e.push(a.end(n))
                return e.length ? e.sort()[e.length - 1] : Infinity
              }
              b.seekableStart = function () {
                for (var a = this.player_.seekable(), e = [], n = a ? a.length : 0; n--; )
                  e.push(a.start(n))
                return e.length ? e.sort()[0] : 0
              }
              b.liveWindow = function () {
                var a = this.liveCurrentTime()
                return Infinity === a ? 0 : a - this.seekableStart()
              }
              b.isLive = function () {
                return this.isTracking()
              }
              b.atLiveEdge = function () {
                return !this.behindLiveEdge()
              }
              b.liveCurrentTime = function () {
                return this.pastSeekEnd() + this.seekableEnd()
              }
              b.pastSeekEnd = function () {
                var a = this.seekableEnd()
                ;-1 !== this.lastSeekEnd_ && a !== this.lastSeekEnd_ && (this.pastSeekEnd_ = 0)
                this.lastSeekEnd_ = a
                return this.pastSeekEnd_
              }
              b.behindLiveEdge = function () {
                return this.behindLiveEdge_
              }
              b.isTracking = function () {
                return 'number' === typeof this.trackingInterval_
              }
              b.seekToLiveEdge = function () {
                this.seekedBehindLive_ = !1
                this.atLiveEdge() ||
                  ((this.skipNextSeeked_ = !0), this.player_.currentTime(this.liveCurrentTime()))
              }
              b.dispose = function () {
                this.off(pa, 'visibilitychange', this.handleVisibilityChange)
                this.stopTracking()
                d.prototype.dispose.call(this)
              }
              return c
            })(ja)
          ja.registerComponent('LiveTracker', Xo)
          var fh = function (d) {
              var c = d.el()
              if (c.hasAttribute('src')) return d.triggerSourceset(c.src), !0
              c = d.doubleDollar('source')
              var b = [],
                a = ''
              if (!c.length) return !1
              for (var e = 0; e < c.length; e++) {
                var n = c[e].src
                n && -1 === b.indexOf(n) && b.push(n)
              }
              if (!b.length) return !1
              1 === b.length && (a = b[0])
              d.triggerSourceset(a)
              return !0
            },
            Yo = Object.defineProperty({}, 'innerHTML', {
              get: function () {
                return this.cloneNode(!0).innerHTML
              },
              set: function (d) {
                var c = pa.createElement(this.nodeName.toLowerCase())
                c.innerHTML = d
                for (d = pa.createDocumentFragment(); c.childNodes.length; )
                  d.appendChild(c.childNodes[0])
                this.innerText = ''
                ca.Element.prototype.appendChild.call(this, d)
                return this.innerHTML
              },
            }),
            Kk = function (d, c) {
              for (
                var b = {}, a = 0;
                a < d.length && !((b = Object.getOwnPropertyDescriptor(d[a], c)) && b.set && b.get);
                a++
              );
              b.enumerable = !0
              b.configurable = !0
              return b
            },
            Lk = function (d) {
              var c = d.el()
              if (!c.resetSourceWatch_) {
                var b = {},
                  a = Kk(
                    [d.el(), ca.HTMLMediaElement.prototype, ca.Element.prototype, Yo],
                    'innerHTML',
                  ),
                  e = function (n) {
                    return function () {
                      for (var q = arguments.length, t = Array(q), v = 0; v < q; v++)
                        t[v] = arguments[v]
                      q = n.apply(c, t)
                      fh(d)
                      return q
                    }
                  }
                ;['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (n) {
                  c[n] && ((b[n] = c[n]), (c[n] = e(b[n])))
                })
                Object.defineProperty(c, 'innerHTML', Pa(a, { set: e(a.set) }))
                c.resetSourceWatch_ = function () {
                  c.resetSourceWatch_ = null
                  Object.keys(b).forEach(function (n) {
                    c[n] = b[n]
                  })
                  Object.defineProperty(c, 'innerHTML', a)
                }
                d.one('sourceset', c.resetSourceWatch_)
              }
            },
            Zo = Object.defineProperty({}, 'src', {
              get: function () {
                return this.hasAttribute('src')
                  ? bk(ca.Element.prototype.getAttribute.call(this, 'src'))
                  : ''
              },
              set: function (d) {
                ca.Element.prototype.setAttribute.call(this, 'src', d)
                return d
              },
            }),
            $o = function (d) {
              if (d.featuresSourceset) {
                var c = d.el()
                if (!c.resetSourceset_) {
                  var b = Kk([d.el(), ca.HTMLMediaElement.prototype, Zo], 'src'),
                    a = c.setAttribute,
                    e = c.load
                  Object.defineProperty(
                    c,
                    'src',
                    Pa(b, {
                      set: function (n) {
                        n = b.set.call(c, n)
                        d.triggerSourceset(c.src)
                        return n
                      },
                    }),
                  )
                  c.setAttribute = function (n, q) {
                    q = a.call(c, n, q)
                    ;/src/i.test(n) && d.triggerSourceset(c.src)
                    return q
                  }
                  c.load = function () {
                    var n = e.call(c)
                    fh(d) || (d.triggerSourceset(''), Lk(d))
                    return n
                  }
                  c.currentSrc ? d.triggerSourceset(c.currentSrc) : fh(d) || Lk(d)
                  c.resetSourceset_ = function () {
                    c.resetSourceset_ = null
                    c.load = e
                    c.setAttribute = a
                    Object.defineProperty(c, 'src', b)
                    c.resetSourceWatch_ && c.resetSourceWatch_()
                  }
                }
              }
            },
            gh = function (d, c, b, a) {
              void 0 === a && (a = !0)
              var e = function (q) {
                  return Object.defineProperty(d, c, { value: q, enumerable: !0, writable: !0 })
                },
                n = {
                  configurable: !0,
                  enumerable: !0,
                  get: function () {
                    var q = b()
                    e(q)
                    return q
                  },
                }
              a && (n.set = e)
              return Object.defineProperty(d, c, n)
            },
            va = (function (d) {
              function c(a, e) {
                e = d.call(this, a, e) || this
                var n = a.source,
                  q = !1
                n && (e.el_.currentSrc !== n.src || (a.tag && 3 === a.tag.initNetworkState_))
                  ? e.setSource(n)
                  : e.handleLateInit_(e.el_)
                a.enableSourceset && e.setupSourcesetHandling_()
                e.isScrubbing_ = !1
                if (e.el_.hasChildNodes()) {
                  var t = e.el_.childNodes,
                    v = t.length
                  for (n = []; v--; ) {
                    var r = t[v]
                    'track' === r.nodeName.toLowerCase() &&
                      (e.featuresNativeTextTracks
                        ? (e.remoteTextTrackEls().addTrackElement_(r),
                          e.remoteTextTracks().addTrack(r.track),
                          e.textTracks().addTrack(r.track),
                          q || e.el_.hasAttribute('crossorigin') || !Ze(r.src) || (q = !0))
                        : n.push(r))
                  }
                  for (t = 0; t < n.length; t++) e.el_.removeChild(n[t])
                }
                e.proxyNativeTracks_()
                e.featuresNativeTextTracks &&
                  q &&
                  Ea.warn(
                    "Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\nThis may prevent text tracks from loading.",
                  )
                e.restoreMetadataTracksInIOSNativePlayer_()
                ;(qd || Dg || Mj) && !0 === a.nativeControlsForTouch && e.setControls(!0)
                e.proxyWebkitFullscreen_()
                e.triggerReady()
                return e
              }
              ua(c, d)
              var b = c.prototype
              b.dispose = function () {
                this.el_ && this.el_.resetSourceset_ && this.el_.resetSourceset_()
                c.disposeMediaElement(this.el_)
                this.options_ = null
                d.prototype.dispose.call(this)
              }
              b.setupSourcesetHandling_ = function () {
                $o(this)
              }
              b.restoreMetadataTracksInIOSNativePlayer_ = function () {
                var a = this.textTracks(),
                  e,
                  n = function () {
                    e = []
                    for (var t = 0; t < a.length; t++) {
                      var v = a[t]
                      'metadata' === v.kind && e.push({ track: v, storedMode: v.mode })
                    }
                  }
                n()
                a.addEventListener('change', n)
                this.on('dispose', function () {
                  return a.removeEventListener('change', n)
                })
                var q = function v() {
                  for (var r = 0; r < e.length; r++) {
                    var p = e[r]
                    'disabled' === p.track.mode &&
                      p.track.mode !== p.storedMode &&
                      (p.track.mode = p.storedMode)
                  }
                  a.removeEventListener('change', v)
                }
                this.on('webkitbeginfullscreen', function () {
                  a.removeEventListener('change', n)
                  a.removeEventListener('change', q)
                  a.addEventListener('change', q)
                })
                this.on('webkitendfullscreen', function () {
                  a.removeEventListener('change', n)
                  a.addEventListener('change', n)
                  a.removeEventListener('change', q)
                })
              }
              b.overrideNative_ = function (a, e) {
                var n = this
                if (e === this['featuresNative' + a + 'Tracks']) {
                  var q = a.toLowerCase()
                  this[q + 'TracksListeners_'] &&
                    Object.keys(this[q + 'TracksListeners_']).forEach(function (t) {
                      n.el()[q + 'Tracks'].removeEventListener(t, n[q + 'TracksListeners_'][t])
                    })
                  this['featuresNative' + a + 'Tracks'] = !e
                  this[q + 'TracksListeners_'] = null
                  this.proxyNativeTracksForType_(q)
                }
              }
              b.overrideNativeAudioTracks = function (a) {
                this.overrideNative_('Audio', a)
              }
              b.overrideNativeVideoTracks = function (a) {
                this.overrideNative_('Video', a)
              }
              b.proxyNativeTracksForType_ = function (a) {
                var e = this,
                  n = Wb[a],
                  q = this.el()[n.getterName],
                  t = this[n.getterName]()
                if (this['featuresNative' + n.capitalName + 'Tracks'] && q && q.addEventListener) {
                  var v = {
                      change: function (p) {
                        p = { type: 'change', target: t, currentTarget: t, srcElement: t }
                        t.trigger(p)
                        'text' === a && e[vd.remoteText.getterName]().trigger(p)
                      },
                      addtrack: function (p) {
                        t.addTrack(p.track)
                      },
                      removetrack: function (p) {
                        t.removeTrack(p.track)
                      },
                    },
                    r = function () {
                      for (var p = [], m = 0; m < t.length; m++) {
                        for (var l = !1, f = 0; f < q.length; f++)
                          if (q[f] === t[m]) {
                            l = !0
                            break
                          }
                        l || p.push(t[m])
                      }
                      for (; p.length; ) t.removeTrack(p.shift())
                    }
                  this[n.getterName + 'Listeners_'] = v
                  Object.keys(v).forEach(function (p) {
                    var m = v[p]
                    q.addEventListener(p, m)
                    e.on('dispose', function (l) {
                      return q.removeEventListener(p, m)
                    })
                  })
                  this.on('loadstart', r)
                  this.on('dispose', function (p) {
                    return e.off('loadstart', r)
                  })
                }
              }
              b.proxyNativeTracks_ = function () {
                var a = this
                Wb.names.forEach(function (e) {
                  a.proxyNativeTracksForType_(e)
                })
              }
              b.createEl = function () {
                var a = this.options_.tag
                if (!a || (!this.options_.playerElIngest && !this.movingMediaElementInDOM)) {
                  if (a) {
                    var e = a.cloneNode(!0)
                    a.parentNode && a.parentNode.insertBefore(e, a)
                    c.disposeMediaElement(a)
                    a = e
                  } else
                    (a = pa.createElement('video')),
                      (e = this.options_.tag && ac(this.options_.tag)),
                      (e = Pa({}, e)),
                      (qd && !0 === this.options_.nativeControlsForTouch) || delete e.controls,
                      we(a, X(e, { id: this.options_.techId, class: 'vjs-tech' }))
                  a.playerId = this.options_.playerId
                }
                'undefined' !== typeof this.options_.preload &&
                  a.setAttribute('preload', this.options_.preload)
                void 0 !== this.options_.disablePictureInPicture &&
                  (a.disablePictureInPicture = this.options_.disablePictureInPicture)
                e = ['loop', 'muted', 'playsinline', 'autoplay']
                for (var n = 0; n < e.length; n++) {
                  var q = e[n],
                    t = this.options_[q]
                  'undefined' !== typeof t &&
                    (t ? a.setAttribute(q, q) : a.removeAttribute(q), (a[q] = t))
                }
                return a
              }
              b.handleLateInit_ = function (a) {
                if (0 !== a.networkState && 3 !== a.networkState)
                  if (0 === a.readyState) {
                    var e = !1,
                      n = function () {
                        e = !0
                      }
                    this.on('loadstart', n)
                    var q = function () {
                      e || this.trigger('loadstart')
                    }
                    this.on('loadedmetadata', q)
                    this.ready(function () {
                      this.off('loadstart', n)
                      this.off('loadedmetadata', q)
                      e || this.trigger('loadstart')
                    })
                  } else {
                    var t = ['loadstart']
                    t.push('loadedmetadata')
                    2 <= a.readyState && t.push('loadeddata')
                    3 <= a.readyState && t.push('canplay')
                    4 <= a.readyState && t.push('canplaythrough')
                    this.ready(function () {
                      t.forEach(function (v) {
                        this.trigger(v)
                      }, this)
                    })
                  }
              }
              b.setScrubbing = function (a) {
                this.isScrubbing_ = a
              }
              b.scrubbing = function () {
                return this.isScrubbing_
              }
              b.setCurrentTime = function (a) {
                try {
                  this.isScrubbing_ && this.el_.fastSeek && Ue
                    ? this.el_.fastSeek(a)
                    : (this.el_.currentTime = a)
                } catch (e) {
                  Ea(e, 'Video is not ready. (Video.js)')
                }
              }
              b.duration = function () {
                var a = this
                return Infinity === this.el_.duration && Jc && vc && 0 === this.el_.currentTime
                  ? (this.on('timeupdate', function n() {
                      0 < a.el_.currentTime &&
                        (Infinity === a.el_.duration && a.trigger('durationchange'),
                        a.off('timeupdate', n))
                    }),
                    NaN)
                  : this.el_.duration || NaN
              }
              b.width = function () {
                return this.el_.offsetWidth
              }
              b.height = function () {
                return this.el_.offsetHeight
              }
              b.proxyWebkitFullscreen_ = function () {
                var a = this
                if ('webkitDisplayingFullscreen' in this.el_) {
                  var e = function () {
                      this.trigger('fullscreenchange', { isFullscreen: !1 })
                    },
                    n = function () {
                      'webkitPresentationMode' in this.el_ &&
                        'picture-in-picture' !== this.el_.webkitPresentationMode &&
                        (this.one('webkitendfullscreen', e),
                        this.trigger('fullscreenchange', {
                          isFullscreen: !0,
                          nativeIOSFullscreen: !0,
                        }))
                    }
                  this.on('webkitbeginfullscreen', n)
                  this.on('dispose', function () {
                    a.off('webkitbeginfullscreen', n)
                    a.off('webkitendfullscreen', e)
                  })
                }
              }
              b.supportsFullScreen = function () {
                if ('function' === typeof this.el_.webkitEnterFullScreen) {
                  var a = (ca.navigator && ca.navigator.userAgent) || ''
                  if (/Android/.test(a) || !/Chrome|Mac OS X 10.5/.test(a)) return !0
                }
                return !1
              }
              b.enterFullScreen = function () {
                var a = this.el_
                if (a.paused && a.networkState <= a.HAVE_METADATA)
                  Ec(this.el_.play()),
                    this.setTimeout(function () {
                      a.pause()
                      try {
                        a.webkitEnterFullScreen()
                      } catch (e) {
                        this.trigger('fullscreenerror', e)
                      }
                    }, 0)
                else
                  try {
                    a.webkitEnterFullScreen()
                  } catch (e) {
                    this.trigger('fullscreenerror', e)
                  }
              }
              b.exitFullScreen = function () {
                this.el_.webkitDisplayingFullscreen
                  ? this.el_.webkitExitFullScreen()
                  : this.trigger('fullscreenerror', Error('The video is not fullscreen'))
              }
              b.requestPictureInPicture = function () {
                return this.el_.requestPictureInPicture()
              }
              b.src = function (a) {
                if (void 0 === a) return this.el_.src
                this.setSrc(a)
              }
              b.reset = function () {
                c.resetMediaElement(this.el_)
              }
              b.currentSrc = function () {
                return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc
              }
              b.setControls = function (a) {
                this.el_.controls = !!a
              }
              b.addTextTrack = function (a, e, n) {
                return this.featuresNativeTextTracks
                  ? this.el_.addTextTrack(a, e, n)
                  : d.prototype.addTextTrack.call(this, a, e, n)
              }
              b.createRemoteTextTrack = function (a) {
                if (!this.featuresNativeTextTracks)
                  return d.prototype.createRemoteTextTrack.call(this, a)
                var e = pa.createElement('track')
                a.kind && (e.kind = a.kind)
                a.label && (e.label = a.label)
                if (a.language || a.srclang) e.srclang = a.language || a.srclang
                a['default'] && (e['default'] = a['default'])
                a.id && (e.id = a.id)
                a.src && (e.src = a.src)
                return e
              }
              b.addRemoteTextTrack = function (a, e) {
                a = d.prototype.addRemoteTextTrack.call(this, a, e)
                this.featuresNativeTextTracks && this.el().appendChild(a)
                return a
              }
              b.removeRemoteTextTrack = function (a) {
                d.prototype.removeRemoteTextTrack.call(this, a)
                if (this.featuresNativeTextTracks)
                  for (var e = this.doubleDollar('track'), n = e.length; n--; )
                    (a !== e[n] && a !== e[n].track) || this.el().removeChild(e[n])
              }
              b.getVideoPlaybackQuality = function () {
                if ('function' === typeof this.el().getVideoPlaybackQuality)
                  return this.el().getVideoPlaybackQuality()
                var a = {}
                'undefined' !== typeof this.el().webkitDroppedFrameCount &&
                  'undefined' !== typeof this.el().webkitDecodedFrameCount &&
                  ((a.droppedVideoFrames = this.el().webkitDroppedFrameCount),
                  (a.totalVideoFrames = this.el().webkitDecodedFrameCount))
                ca.performance && 'function' === typeof ca.performance.now
                  ? (a.creationTime = ca.performance.now())
                  : ca.performance &&
                    ca.performance.timing &&
                    'number' === typeof ca.performance.timing.navigationStart &&
                    (a.creationTime = ca.Date.now() - ca.performance.timing.navigationStart)
                return a
              }
              return c
            })(Oa)
          gh(va, 'TEST_VID', function () {
            if (Wa()) {
              var d = pa.createElement('video'),
                c = pa.createElement('track')
              c.kind = 'captions'
              c.srclang = 'en'
              c.label = 'English'
              d.appendChild(c)
              return d
            }
          })
          va.isSupported = function () {
            try {
              va.TEST_VID.volume = 0.5
            } catch (d) {
              return !1
            }
            return !(!va.TEST_VID || !va.TEST_VID.canPlayType)
          }
          va.canPlayType = function (d) {
            return va.TEST_VID.canPlayType(d)
          }
          va.canPlaySource = function (d, c) {
            return va.canPlayType(d.type)
          }
          va.canControlVolume = function () {
            try {
              var d = va.TEST_VID.volume
              va.TEST_VID.volume = d / 2 + 0.1
              return d !== va.TEST_VID.volume
            } catch (c) {
              return !1
            }
          }
          va.canMuteVolume = function () {
            try {
              var d = va.TEST_VID.muted
              va.TEST_VID.muted = !d
              va.TEST_VID.muted
                ? va.TEST_VID.setAttribute('muted', 'muted')
                : va.TEST_VID.removeAttribute('muted')
              return d !== va.TEST_VID.muted
            } catch (c) {
              return !1
            }
          }
          va.canControlPlaybackRate = function () {
            if (Jc && vc && 58 > Oj) return !1
            try {
              var d = va.TEST_VID.playbackRate
              va.TEST_VID.playbackRate = d / 2 + 0.1
              return d !== va.TEST_VID.playbackRate
            } catch (c) {
              return !1
            }
          }
          va.canOverrideAttributes = function () {
            try {
              var d = function () {}
              Object.defineProperty(pa.createElement('video'), 'src', { get: d, set: d })
              Object.defineProperty(pa.createElement('audio'), 'src', { get: d, set: d })
              Object.defineProperty(pa.createElement('video'), 'innerHTML', { get: d, set: d })
              Object.defineProperty(pa.createElement('audio'), 'innerHTML', { get: d, set: d })
            } catch (c) {
              return !1
            }
            return !0
          }
          va.supportsNativeTextTracks = function () {
            return Ue || (Pb && vc)
          }
          va.supportsNativeVideoTracks = function () {
            return !(!va.TEST_VID || !va.TEST_VID.videoTracks)
          }
          va.supportsNativeAudioTracks = function () {
            return !(!va.TEST_VID || !va.TEST_VID.audioTracks)
          }
          va.Events =
            'loadstart suspend abort error emptied stalled loadedmetadata loadeddata canplay canplaythrough playing waiting seeking seeked ended durationchange timeupdate progress play pause ratechange resize volumechange'.split(
              ' ',
            )
          ;[
            ['featuresVolumeControl', 'canControlVolume'],
            ['featuresMuteControl', 'canMuteVolume'],
            ['featuresPlaybackRate', 'canControlPlaybackRate'],
            ['featuresSourceset', 'canOverrideAttributes'],
            ['featuresNativeTextTracks', 'supportsNativeTextTracks'],
            ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'],
            ['featuresNativeAudioTracks', 'supportsNativeAudioTracks'],
          ].forEach(function (d) {
            var c = d[1]
            gh(
              va.prototype,
              d[0],
              function () {
                return va[c]()
              },
              !0,
            )
          })
          va.prototype.movingMediaElementInDOM = !Pb
          va.prototype.featuresFullscreenResize = !0
          va.prototype.featuresProgressEvents = !0
          va.prototype.featuresTimeupdateEvents = !0
          var bf
          va.patchCanPlayType = function () {
            4 <= Ag &&
              !Nj &&
              !vc &&
              ((bf = va.TEST_VID && va.TEST_VID.constructor.prototype.canPlayType),
              (va.TEST_VID.constructor.prototype.canPlayType = function (d) {
                var c = /^application\/(?:x-|vnd\.apple\.)mpegurl/i
                return d && c.test(d) ? 'maybe' : bf.call(this, d)
              }))
          }
          va.unpatchCanPlayType = function () {
            var d = va.TEST_VID.constructor.prototype.canPlayType
            bf && (va.TEST_VID.constructor.prototype.canPlayType = bf)
            return d
          }
          va.patchCanPlayType()
          va.disposeMediaElement = function (d) {
            if (d) {
              for (d.parentNode && d.parentNode.removeChild(d); d.hasChildNodes(); )
                d.removeChild(d.firstChild)
              d.removeAttribute('src')
              if ('function' === typeof d.load)
                try {
                  d.load()
                } catch (c) {}
            }
          }
          va.resetMediaElement = function (d) {
            if (d) {
              for (var c = d.querySelectorAll('source'), b = c.length; b--; ) d.removeChild(c[b])
              d.removeAttribute('src')
              if ('function' === typeof d.load)
                try {
                  d.load()
                } catch (a) {}
            }
          }
          'muted defaultMuted autoplay controls loop playsinline'.split(' ').forEach(function (d) {
            va.prototype[d] = function () {
              return this.el_[d] || this.el_.hasAttribute(d)
            }
          })
          ;['muted', 'defaultMuted', 'autoplay', 'loop', 'playsinline'].forEach(function (d) {
            va.prototype['set' + Xa(d)] = function (c) {
              ;(this.el_[d] = c) ? this.el_.setAttribute(d, d) : this.el_.removeAttribute(d)
            }
          })
          'paused currentTime buffered volume poster preload error seeking seekable ended playbackRate defaultPlaybackRate disablePictureInPicture played networkState readyState videoWidth videoHeight crossOrigin'
            .split(' ')
            .forEach(function (d) {
              va.prototype[d] = function () {
                return this.el_[d]
              }
            })
          'volume src poster preload playbackRate defaultPlaybackRate disablePictureInPicture crossOrigin'
            .split(' ')
            .forEach(function (d) {
              va.prototype['set' + Xa(d)] = function (c) {
                this.el_[d] = c
              }
            })
          ;['pause', 'load', 'play'].forEach(function (d) {
            va.prototype[d] = function () {
              return this.el_[d]()
            }
          })
          Oa.withSourceHandlers(va)
          va.nativeSourceHandler = {}
          va.nativeSourceHandler.canPlayType = function (d) {
            try {
              return va.TEST_VID.canPlayType(d)
            } catch (c) {
              return ''
            }
          }
          va.nativeSourceHandler.canHandleSource = function (d, c) {
            return d.type
              ? va.nativeSourceHandler.canPlayType(d.type)
              : d.src
                ? ((d = Mg(d.src)), va.nativeSourceHandler.canPlayType('video/' + d))
                : ''
          }
          va.nativeSourceHandler.handleSource = function (d, c, b) {
            c.setSrc(d.src)
          }
          va.nativeSourceHandler.dispose = function () {}
          va.registerSourceHandler(va.nativeSourceHandler)
          Oa.registerTech('Html5', va)
          var Mk =
              'progress abort suspend emptied stalled loadedmetadata loadeddata timeupdate resize volumechange texttrackchange'.split(
                ' ',
              ),
            hh = {
              canplay: 'CanPlay',
              canplaythrough: 'CanPlayThrough',
              playing: 'Playing',
              seeked: 'Seeked',
            },
            ih = 'tiny xsmall small medium large xlarge huge'.split(' '),
            cf = {}
          ih.forEach(function (d) {
            var c = 'x' === d.charAt(0) ? 'x-' + d.substring(1) : d
            cf[d] = 'vjs-layout-' + c
          })
          var ap = {
              tiny: 210,
              xsmall: 320,
              small: 425,
              medium: 768,
              large: 1440,
              xlarge: 2560,
              huge: Infinity,
            },
            ab = (function (d) {
              function c(a, e, n) {
                a.id = a.id || e.id || 'vjs_video_' + Dc++
                e = X(c.getTagSettings(a), e)
                e.initChildren = !1
                e.createEl = !1
                e.evented = !1
                e.reportTouchActivity = !1
                if (!e.language)
                  if ('function' === typeof a.closest) {
                    var q = a.closest('[lang]')
                    q && q.getAttribute && (e.language = q.getAttribute('lang'))
                  } else
                    for (q = a; q && 1 === q.nodeType; ) {
                      if (ac(q).hasOwnProperty('lang')) {
                        e.language = q.getAttribute('lang')
                        break
                      }
                      q = q.parentNode
                    }
                var t = d.call(this, null, e, n) || this
                t.boundDocumentFullscreenChange_ = function (r) {
                  return t.documentFullscreenChange_(r)
                }
                t.boundFullWindowOnEscKey_ = function (r) {
                  return t.fullWindowOnEscKey(r)
                }
                t.isFullscreen_ = !1
                t.log = Jj(t.id_)
                t.fsApi_ = Ie
                t.isPosterFromTech_ = !1
                t.queuedCallbacks_ = []
                t.isReady_ = !1
                t.hasStarted_ = !1
                t.userActive_ = !1
                t.debugEnabled_ = !1
                if (!t.options_ || !t.options_.techOrder || !t.options_.techOrder.length)
                  throw Error(
                    'No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?',
                  )
                t.tag = a
                t.tagAttributes = a && ac(a)
                t.language(t.options_.language)
                if (e.languages) {
                  var v = {}
                  Object.getOwnPropertyNames(e.languages).forEach(function (r) {
                    v[r.toLowerCase()] = e.languages[r]
                  })
                  t.languages_ = v
                } else t.languages_ = c.prototype.options_.languages
                t.resetCache_()
                t.poster_ = e.poster || ''
                t.controls_ = !!e.controls
                a.controls = !1
                a.removeAttribute('controls')
                t.changingSrc_ = !1
                t.playCallbacks_ = []
                t.playTerminatedQueue_ = []
                a.hasAttribute('autoplay') ? t.autoplay(!0) : t.autoplay(t.options_.autoplay)
                e.plugins &&
                  Object.keys(e.plugins).forEach(function (r) {
                    if ('function' !== typeof t[r]) throw Error('plugin "' + r + '" does not exist')
                  })
                t.scrubbing_ = !1
                t.el_ = t.createEl()
                fg(Fa(t), { eventBusKey: 'el_' })
                t.fsApi_.requestFullscreen &&
                  (sb(pa, t.fsApi_.fullscreenchange, t.boundDocumentFullscreenChange_),
                  t.on(t.fsApi_.fullscreenchange, t.boundDocumentFullscreenChange_))
                if (t.fluid_) t.on(['playerreset', 'resize'], t.updateStyleEl_)
                n = Pa(t.options_)
                e.plugins &&
                  Object.keys(e.plugins).forEach(function (r) {
                    t[r](e.plugins[r])
                  })
                e.debug && t.debug(!0)
                t.options_.playerOptions = n
                t.middleware_ = []
                t.initChildren()
                t.isAudio('audio' === a.nodeName.toLowerCase())
                t.controls()
                  ? t.addClass('vjs-controls-enabled')
                  : t.addClass('vjs-controls-disabled')
                t.el_.setAttribute('role', 'region')
                t.isAudio()
                  ? t.el_.setAttribute('aria-label', t.localize('Audio Player'))
                  : t.el_.setAttribute('aria-label', t.localize('Video Player'))
                t.isAudio() && t.addClass('vjs-audio')
                t.flexNotSupported_() && t.addClass('vjs-no-flex')
                qd && t.addClass('vjs-touch-enabled')
                Pb || t.addClass('vjs-workinghover')
                c.players[t.id_] = Fa(t)
                t.addClass('vjs-v7')
                t.userActive(!0)
                t.reportUserActivity()
                t.one('play', t.listenForUserActivity_)
                t.on('stageclick', t.handleStageClick_)
                t.on('keydown', t.handleKeyDown)
                t.on('languagechange', t.handleLanguagechange)
                t.breakpoints(t.options_.breakpoints)
                t.responsive(t.options_.responsive)
                return t
              }
              ua(c, d)
              var b = c.prototype
              b.dispose = function () {
                var a = this
                this.trigger('dispose')
                this.off('dispose')
                tb(pa, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_)
                tb(pa, 'keydown', this.boundFullWindowOnEscKey_)
                this.styleEl_ &&
                  this.styleEl_.parentNode &&
                  (this.styleEl_.parentNode.removeChild(this.styleEl_), (this.styleEl_ = null))
                c.players[this.id_] = null
                this.tag && this.tag.player && (this.tag.player = null)
                this.el_ && this.el_.player && (this.el_.player = null)
                this.tech_ &&
                  (this.tech_.dispose(), (this.isPosterFromTech_ = !1), (this.poster_ = ''))
                this.playerElIngest_ && (this.playerElIngest_ = null)
                this.tag && (this.tag = null)
                ng[this.id()] = null
                zb.names.forEach(function (e) {
                  ;(e = a[zb[e].getterName]()) && e.off && e.off()
                })
                d.prototype.dispose.call(this)
              }
              b.createEl = function () {
                var a = this.tag,
                  e = (this.playerElIngest_ =
                    a.parentNode &&
                    a.parentNode.hasAttribute &&
                    a.parentNode.hasAttribute('data-vjs-player')),
                  n = 'video-js' === this.tag.tagName.toLowerCase()
                if (e) var q = (this.el_ = a.parentNode)
                else n || (q = this.el_ = d.prototype.createEl.call(this, 'div'))
                var t = ac(a)
                if (n) {
                  q = this.el_ = a
                  for (a = this.tag = pa.createElement('video'); q.children.length; )
                    a.appendChild(q.firstChild)
                  db(q, 'video-js') || Lb(q, 'video-js')
                  q.appendChild(a)
                  e = this.playerElIngest_ = q
                  Object.keys(q).forEach(function (m) {
                    try {
                      a[m] = q[m]
                    } catch (l) {}
                  })
                }
                a.setAttribute('tabindex', '-1')
                t.tabindex = '-1'
                if (Zd || (vc && Pj))
                  a.setAttribute('role', 'application'), (t.role = 'application')
                a.removeAttribute('width')
                a.removeAttribute('height')
                'width' in t && delete t.width
                'height' in t && delete t.height
                Object.getOwnPropertyNames(t).forEach(function (m) {
                  ;(n && 'class' === m) || q.setAttribute(m, t[m])
                  n && a.setAttribute(m, t[m])
                })
                a.playerId = a.id
                a.id += '_html5_api'
                a.className = 'vjs-tech'
                a.player = q.player = this
                this.addClass('vjs-paused')
                if (!0 !== ca.VIDEOJS_NO_DYNAMIC_STYLE) {
                  this.styleEl_ = Sj('vjs-styles-dimensions')
                  var v = Fc('.vjs-styles-defaults'),
                    r = Fc('head')
                  r.insertBefore(this.styleEl_, v ? v.nextSibling : r.firstChild)
                }
                this.fluid_ = this.fill_ = !1
                this.width(this.options_.width)
                this.height(this.options_.height)
                this.fill(this.options_.fill)
                this.fluid(this.options_.fluid)
                this.aspectRatio(this.options_.aspectRatio)
                this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin)
                v = a.getElementsByTagName('a')
                for (r = 0; r < v.length; r++) {
                  var p = v.item(r)
                  Lb(p, 'vjs-hidden')
                  p.setAttribute('hidden', 'hidden')
                }
                a.initNetworkState_ = a.networkState
                a.parentNode && !e && a.parentNode.insertBefore(q, a)
                Kb(a, q)
                this.children_.unshift(a)
                this.el_.setAttribute('lang', this.language_)
                return (this.el_ = q)
              }
              b.crossOrigin = function (a) {
                if (!a) return this.techGet_('crossOrigin')
                'anonymous' !== a && 'use-credentials' !== a
                  ? Ea.warn(
                      'crossOrigin must be "anonymous" or "use-credentials", given "' + a + '"',
                    )
                  : this.techCall_('setCrossOrigin', a)
              }
              b.width = function (a) {
                return this.dimension('width', a)
              }
              b.height = function (a) {
                return this.dimension('height', a)
              }
              b.dimension = function (a, e) {
                var n = a + '_'
                if (void 0 === e) return this[n] || 0
                if ('' === e || 'auto' === e) (this[n] = void 0), this.updateStyleEl_()
                else {
                  var q = parseFloat(e)
                  isNaN(q)
                    ? Ea.error('Improper value "' + e + '" supplied for for ' + a)
                    : ((this[n] = q), this.updateStyleEl_())
                }
              }
              b.fluid = function (a) {
                var e = this
                if (void 0 === a) return !!this.fluid_
                this.fluid_ = !!a
                tc(this) && this.off(['playerreset', 'resize'], this.updateStyleEl_)
                a
                  ? (this.addClass('vjs-fluid'),
                    this.fill(!1),
                    lo(this, function () {
                      e.on(['playerreset', 'resize'], e.updateStyleEl_)
                    }))
                  : this.removeClass('vjs-fluid')
                this.updateStyleEl_()
              }
              b.fill = function (a) {
                if (void 0 === a) return !!this.fill_
                this.fill_ = !!a
                a ? (this.addClass('vjs-fill'), this.fluid(!1)) : this.removeClass('vjs-fill')
              }
              b.aspectRatio = function (a) {
                if (void 0 === a) return this.aspectRatio_
                if (!/^\d+:\d+$/.test(a))
                  throw Error(
                    'Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.',
                  )
                this.aspectRatio_ = a
                this.fluid(!0)
                this.updateStyleEl_()
              }
              b.updateStyleEl_ = function () {
                if (!0 === ca.VIDEOJS_NO_DYNAMIC_STYLE) {
                  var a = 'number' === typeof this.width_ ? this.width_ : this.options_.width,
                    e = 'number' === typeof this.height_ ? this.height_ : this.options_.height,
                    n = this.tech_ && this.tech_.el()
                  n && (0 <= a && (n.width = a), 0 <= e && (n.height = e))
                } else {
                  a = (
                    void 0 !== this.aspectRatio_ && 'auto' !== this.aspectRatio_
                      ? this.aspectRatio_
                      : 0 < this.videoWidth()
                        ? this.videoWidth() + ':' + this.videoHeight()
                        : '16:9'
                  ).split(':')
                  var q = a[1] / a[0]
                  a =
                    void 0 !== this.width_
                      ? this.width_
                      : void 0 !== this.height_
                        ? this.height_ / q
                        : this.videoWidth() || 300
                  e = void 0 !== this.height_ ? this.height_ : a * q
                  n = /^[^a-zA-Z]/.test(this.id())
                    ? 'dimensions-' + this.id()
                    : this.id() + '-dimensions'
                  this.addClass(n)
                  Tj(
                    this.styleEl_,
                    '\n      .' +
                      n +
                      ' {\n        width: ' +
                      a +
                      'px;\n        height: ' +
                      e +
                      'px;\n      }\n\n      .' +
                      n +
                      '.vjs-fluid {\n        padding-top: ' +
                      100 * q +
                      '%;\n      }\n    ',
                  )
                }
              }
              b.loadTech_ = function (a, e) {
                var n = this
                this.tech_ && this.unloadTech_()
                var q = Xa(a),
                  t = a.charAt(0).toLowerCase() + a.slice(1)
                'Html5' !== q &&
                  this.tag &&
                  (Oa.getTech('Html5').disposeMediaElement(this.tag),
                  (this.tag = this.tag.player = null))
                this.techName_ = q
                this.isReady_ = !1
                var v = 'string' === typeof this.autoplay() ? !1 : this.autoplay(),
                  r = {
                    source: e,
                    autoplay: v,
                    nativeControlsForTouch: this.options_.nativeControlsForTouch,
                    playerId: this.id(),
                    techId: this.id() + '_' + t + '_api',
                    playsinline: this.options_.playsinline,
                    preload: this.options_.preload,
                    loop: this.options_.loop,
                    disablePictureInPicture: this.options_.disablePictureInPicture,
                    muted: this.options_.muted,
                    poster: this.poster(),
                    language: this.language(),
                    playerElIngest: this.playerElIngest_ || !1,
                    'vtt.js': this.options_['vtt.js'],
                    canOverridePoster: !!this.options_.techCanOverridePoster,
                    enableSourceset: this.options_.enableSourceset,
                    Promise: this.options_.Promise,
                  }
                zb.names.forEach(function (p) {
                  p = zb[p]
                  r[p.getterName] = n[p.privateName]
                })
                X(r, this.options_[q])
                X(r, this.options_[t])
                X(r, this.options_[a.toLowerCase()])
                this.tag && (r.tag = this.tag)
                e &&
                  e.src === this.cache_.src &&
                  0 < this.cache_.currentTime &&
                  (r.startTime = this.cache_.currentTime)
                a = Oa.getTech(a)
                if (!a)
                  throw Error(
                    "No Tech named '" +
                      q +
                      "' exists! '" +
                      q +
                      "' should be registered using videojs.registerTech()'",
                  )
                this.tech_ = new a(r)
                this.tech_.ready(Ga(this, this.handleTechReady_), !0)
                Xj.jsonToTextTracks(this.textTracksJson_ || [], this.tech_)
                Mk.forEach(function (p) {
                  n.on(n.tech_, p, n['handleTech' + Xa(p) + '_'])
                })
                Object.keys(hh).forEach(function (p) {
                  n.on(n.tech_, p, function (m) {
                    if (0 === n.tech_.playbackRate() && n.tech_.seeking())
                      n.queuedCallbacks_.push({
                        callback: n['handleTech' + hh[p] + '_'].bind(n),
                        event: m,
                      })
                    else n['handleTech' + hh[p] + '_'](m)
                  })
                })
                this.on(this.tech_, 'loadstart', this.handleTechLoadStart_)
                this.on(this.tech_, 'sourceset', this.handleTechSourceset_)
                this.on(this.tech_, 'waiting', this.handleTechWaiting_)
                this.on(this.tech_, 'ended', this.handleTechEnded_)
                this.on(this.tech_, 'seeking', this.handleTechSeeking_)
                this.on(this.tech_, 'play', this.handleTechPlay_)
                this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_)
                this.on(this.tech_, 'pause', this.handleTechPause_)
                this.on(this.tech_, 'durationchange', this.handleTechDurationChange_)
                this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_)
                this.on(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_)
                this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_)
                this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_)
                this.on(this.tech_, 'error', this.handleTechError_)
                this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_)
                this.on(this.tech_, 'posterchange', this.handleTechPosterChange_)
                this.on(this.tech_, 'textdata', this.handleTechTextData_)
                this.on(this.tech_, 'ratechange', this.handleTechRateChange_)
                this.usingNativeControls(this.techGet_('controls'))
                this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_()
                this.tech_.el().parentNode === this.el() ||
                  ('Html5' === q && this.tag) ||
                  Kb(this.tech_.el(), this.el())
                this.tag && (this.tag = this.tag.player = null)
              }
              b.unloadTech_ = function () {
                var a = this
                zb.names.forEach(function (e) {
                  e = zb[e]
                  a[e.privateName] = a[e.getterName]()
                })
                this.textTracksJson_ = Xj.textTracksToJson(this.tech_)
                this.isReady_ = !1
                this.tech_.dispose()
                this.tech_ = !1
                this.isPosterFromTech_ && ((this.poster_ = ''), this.trigger('posterchange'))
                this.isPosterFromTech_ = !1
              }
              b.tech = function (a) {
                void 0 === a &&
                  Ea.warn(
                    "Using the tech directly can be dangerous. I hope you know what you're doing.\nSee https://github.com/videojs/video.js/issues/2617 for more info.\n",
                  )
                return this.tech_
              }
              b.addTechControlsListeners_ = function () {
                this.removeTechControlsListeners_()
                this.on(this.tech_, 'mouseup', this.handleTechClick_)
                this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_)
                this.on(this.tech_, 'touchstart', this.handleTechTouchStart_)
                this.on(this.tech_, 'touchmove', this.handleTechTouchMove_)
                this.on(this.tech_, 'touchend', this.handleTechTouchEnd_)
                this.on(this.tech_, 'tap', this.handleTechTap_)
              }
              b.removeTechControlsListeners_ = function () {
                this.off(this.tech_, 'tap', this.handleTechTap_)
                this.off(this.tech_, 'touchstart', this.handleTechTouchStart_)
                this.off(this.tech_, 'touchmove', this.handleTechTouchMove_)
                this.off(this.tech_, 'touchend', this.handleTechTouchEnd_)
                this.off(this.tech_, 'mouseup', this.handleTechClick_)
                this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_)
              }
              b.handleTechReady_ = function () {
                this.triggerReady()
                this.cache_.volume && this.techCall_('setVolume', this.cache_.volume)
                this.handleTechPosterChange_()
                this.handleTechDurationChange_()
              }
              b.handleTechLoadStart_ = function () {
                this.removeClass('vjs-ended')
                this.removeClass('vjs-seeking')
                this.error(null)
                this.handleTechDurationChange_()
                this.paused()
                  ? (this.hasStarted(!1), this.trigger('loadstart'))
                  : (this.trigger('loadstart'), this.trigger('firstplay'))
                this.manualAutoplay_(this.autoplay())
              }
              b.manualAutoplay_ = function (a) {
                var e = this
                if (this.tech_ && 'string' === typeof a) {
                  var n = function () {
                    var t = e.muted()
                    e.muted(!0)
                    var v = function () {
                      e.muted(t)
                    }
                    e.playTerminatedQueue_.push(v)
                    var r = e.play()
                    if (Pd(r)) return r['catch'](v)
                  }
                  if ('any' === a && !0 !== this.muted()) {
                    var q = this.play()
                    Pd(q) && (q = q['catch'](n))
                  } else q = 'muted' === a && !0 !== this.muted() ? n() : this.play()
                  if (Pd(q))
                    return q
                      .then(function () {
                        e.trigger({ type: 'autoplay-success', autoplay: a })
                      })
                      ['catch'](function (t) {
                        e.trigger({ type: 'autoplay-failure', autoplay: a })
                      })
                }
              }
              b.updateSourceCaches_ = function (a) {
                void 0 === a && (a = '')
                var e = a,
                  n = ''
                'string' !== typeof e && ((e = a.src), (n = a.type))
                this.cache_.source = this.cache_.source || {}
                this.cache_.sources = this.cache_.sources || []
                e && !n && (n = Do(this, e))
                this.cache_.source = Pa({}, a, { src: e, type: n })
                a = this.cache_.sources.filter(function (p) {
                  return p.src && p.src === e
                })
                n = []
                for (var q = this.doubleDollar('source'), t = [], v = 0; v < q.length; v++) {
                  var r = ac(q[v])
                  n.push(r)
                  r.src && r.src === e && t.push(r.src)
                }
                t.length && !a.length
                  ? (this.cache_.sources = n)
                  : a.length || (this.cache_.sources = [this.cache_.source])
                this.cache_.src = e
              }
              b.handleTechSourceset_ = function (a) {
                var e = this
                if (!this.changingSrc_) {
                  var n = function (v) {
                      return e.updateSourceCaches_(v)
                    },
                    q = this.currentSource().src,
                    t = a.src
                  q &&
                    !/^blob:/.test(q) &&
                    /^blob:/.test(t) &&
                    (!this.lastSource_ ||
                      (this.lastSource_.tech !== t && this.lastSource_.player !== q)) &&
                    (n = function () {})
                  n(t)
                  a.src ||
                    this.tech_.any(['sourceset', 'loadstart'], function (v) {
                      'sourceset' !== v.type &&
                        ((v = e.techGet('currentSrc')),
                        (e.lastSource_.tech = v),
                        e.updateSourceCaches_(v))
                    })
                }
                this.lastSource_ = { player: this.currentSource().src, tech: a.src }
                this.trigger({ src: a.src, type: 'sourceset' })
              }
              b.hasStarted = function (a) {
                if (void 0 === a) return this.hasStarted_
                a !== this.hasStarted_ &&
                  ((this.hasStarted_ = a)
                    ? (this.addClass('vjs-has-started'), this.trigger('firstplay'))
                    : this.removeClass('vjs-has-started'))
              }
              b.handleTechPlay_ = function () {
                this.removeClass('vjs-ended')
                this.removeClass('vjs-paused')
                this.addClass('vjs-playing')
                this.hasStarted(!0)
                this.trigger('play')
              }
              b.handleTechRateChange_ = function () {
                0 < this.tech_.playbackRate() &&
                  0 === this.cache_.lastPlaybackRate &&
                  (this.queuedCallbacks_.forEach(function (a) {
                    return a.callback(a.event)
                  }),
                  (this.queuedCallbacks_ = []))
                this.cache_.lastPlaybackRate = this.tech_.playbackRate()
                this.trigger('ratechange')
              }
              b.handleTechWaiting_ = function () {
                var a = this
                this.addClass('vjs-waiting')
                this.trigger('waiting')
                var e = this.currentTime()
                this.on('timeupdate', function q() {
                  e !== a.currentTime() && (a.removeClass('vjs-waiting'), a.off('timeupdate', q))
                })
              }
              b.handleTechCanPlay_ = function () {
                this.removeClass('vjs-waiting')
                this.trigger('canplay')
              }
              b.handleTechCanPlayThrough_ = function () {
                this.removeClass('vjs-waiting')
                this.trigger('canplaythrough')
              }
              b.handleTechPlaying_ = function () {
                this.removeClass('vjs-waiting')
                this.trigger('playing')
              }
              b.handleTechSeeking_ = function () {
                this.addClass('vjs-seeking')
                this.trigger('seeking')
              }
              b.handleTechSeeked_ = function () {
                this.removeClass('vjs-seeking')
                this.removeClass('vjs-ended')
                this.trigger('seeked')
              }
              b.handleTechFirstPlay_ = function () {
                this.options_.starttime &&
                  (Ea.warn(
                    'Passing the `starttime` option to the player will be deprecated in 6.0',
                  ),
                  this.currentTime(this.options_.starttime))
                this.addClass('vjs-has-started')
                this.trigger('firstplay')
              }
              b.handleTechPause_ = function () {
                this.removeClass('vjs-playing')
                this.addClass('vjs-paused')
                this.trigger('pause')
              }
              b.handleTechEnded_ = function () {
                this.addClass('vjs-ended')
                this.options_.loop
                  ? (this.currentTime(0), this.play())
                  : this.paused() || this.pause()
                this.trigger('ended')
              }
              b.handleTechDurationChange_ = function () {
                this.duration(this.techGet_('duration'))
              }
              b.handleTechClick_ = function (a) {
                Cc(a) && this.controls_ && (this.paused() ? Ec(this.play()) : this.pause())
              }
              b.handleTechDoubleClick_ = function (a) {
                this.controls_ &&
                  (Array.prototype.some.call(
                    this.doubleDollar('.vjs-control-bar, .vjs-modal-dialog'),
                    function (e) {
                      return e.contains(a.target)
                    },
                  ) ||
                    (void 0 !== this.options_ &&
                      void 0 !== this.options_.userActions &&
                      void 0 !== this.options_.userActions.doubleClick &&
                      !1 === this.options_.userActions.doubleClick) ||
                    (void 0 !== this.options_ &&
                    void 0 !== this.options_.userActions &&
                    'function' === typeof this.options_.userActions.doubleClick
                      ? this.options_.userActions.doubleClick.call(this, a)
                      : this.isFullscreen()
                        ? this.exitFullscreen()
                        : this.requestFullscreen()))
              }
              b.handleTechTap_ = function () {
                this.userActive(!this.userActive())
              }
              b.handleTechTouchStart_ = function () {
                this.userWasActive = this.userActive()
              }
              b.handleTechTouchMove_ = function () {
                this.userWasActive && this.reportUserActivity()
              }
              b.handleTechTouchEnd_ = function (a) {
                a.cancelable && a.preventDefault()
              }
              b.handleStageClick_ = function () {
                this.reportUserActivity()
              }
              b.toggleFullscreenClass_ = function () {
                this.isFullscreen()
                  ? this.addClass('vjs-fullscreen')
                  : this.removeClass('vjs-fullscreen')
              }
              b.documentFullscreenChange_ = function (a) {
                a = a.target.player
                if (!a || a === this) {
                  a = this.el()
                  var e = pa[this.fsApi_.fullscreenElement] === a
                  !e && a.matches
                    ? (e = a.matches(':' + this.fsApi_.fullscreen))
                    : !e &&
                      a.msMatchesSelector &&
                      (e = a.msMatchesSelector(':' + this.fsApi_.fullscreen))
                  this.isFullscreen(e)
                }
              }
              b.handleTechFullscreenChange_ = function (a, e) {
                e &&
                  (e.nativeIOSFullscreen && this.toggleClass('vjs-ios-native-fs'),
                  this.isFullscreen(e.isFullscreen))
              }
              b.handleTechFullscreenError_ = function (a, e) {
                this.trigger('fullscreenerror', e)
              }
              b.togglePictureInPictureClass_ = function () {
                this.isInPictureInPicture()
                  ? this.addClass('vjs-picture-in-picture')
                  : this.removeClass('vjs-picture-in-picture')
              }
              b.handleTechEnterPictureInPicture_ = function (a) {
                this.isInPictureInPicture(!0)
              }
              b.handleTechLeavePictureInPicture_ = function (a) {
                this.isInPictureInPicture(!1)
              }
              b.handleTechError_ = function () {
                var a = this.tech_.error()
                this.error(a)
              }
              b.handleTechTextData_ = function () {
                var a = null
                1 < arguments.length && (a = arguments[1])
                this.trigger('textdata', a)
              }
              b.getCache = function () {
                return this.cache_
              }
              b.resetCache_ = function () {
                this.cache_ = {
                  currentTime: 0,
                  initTime: 0,
                  inactivityTimeout: this.options_.inactivityTimeout,
                  duration: NaN,
                  lastVolume: 1,
                  lastPlaybackRate: this.defaultPlaybackRate(),
                  media: null,
                  src: '',
                  source: {},
                  sources: [],
                  volume: 1,
                }
              }
              b.techCall_ = function (a, e) {
                this.ready(function () {
                  if (a in Bo) return this.tech_[a](this.middleware_.reduce(mg(a), e))
                  if (a in hk) return cj(this.middleware_, this.tech_, a, e)
                  try {
                    if (this.tech_) this.tech_[a](e)
                  } catch (n) {
                    throw (Ea(n), n)
                  }
                }, !0)
              }
              b.techGet_ = function (a) {
                if (this.tech_ && this.tech_.isReady_) {
                  if (a in Ao) {
                    var e = this.tech_
                    return this.middleware_.reduceRight(mg(a), e[a]())
                  }
                  if (a in hk) return cj(this.middleware_, this.tech_, a)
                  try {
                    return this.tech_[a]()
                  } catch (n) {
                    if (void 0 === this.tech_[a])
                      throw (
                        (Ea(
                          'Video.js: ' +
                            a +
                            ' method not defined for ' +
                            this.techName_ +
                            ' playback technology.',
                          n,
                        ),
                        n)
                      )
                    if ('TypeError' === n.name)
                      throw (
                        (Ea(
                          'Video.js: ' +
                            a +
                            ' unavailable on ' +
                            this.techName_ +
                            ' playback technology element.',
                          n,
                        ),
                        (this.tech_.isReady_ = !1),
                        n)
                      )
                    Ea(n)
                    throw n
                  }
                }
              }
              b.play = function () {
                var a = this,
                  e = this.options_.Promise || ca.Promise
                return e
                  ? new e(function (n) {
                      a.play_(n)
                    })
                  : this.play_()
              }
              b.play_ = function (a) {
                var e = this
                void 0 === a && (a = Ec)
                this.playCallbacks_.push(a)
                a = !(this.changingSrc_ || (!this.src() && !this.currentSrc()))
                this.waitToPlay_ &&
                  (this.off(['ready', 'loadstart'], this.waitToPlay_), (this.waitToPlay_ = null))
                this.isReady_ && a
                  ? ((a = this.techGet_('play')),
                    null === a ? this.runPlayTerminatedQueue_() : this.runPlayCallbacks_(a))
                  : ((this.waitToPlay_ = function (n) {
                      e.play_()
                    }),
                    this.one(['ready', 'loadstart'], this.waitToPlay_),
                    a || (!Ue && !Pb) || this.load())
              }
              b.runPlayTerminatedQueue_ = function () {
                var a = this.playTerminatedQueue_.slice(0)
                this.playTerminatedQueue_ = []
                a.forEach(function (e) {
                  e()
                })
              }
              b.runPlayCallbacks_ = function (a) {
                var e = this.playCallbacks_.slice(0)
                this.playCallbacks_ = []
                this.playTerminatedQueue_ = []
                e.forEach(function (n) {
                  n(a)
                })
              }
              b.pause = function () {
                this.techCall_('pause')
              }
              b.paused = function () {
                return !1 === this.techGet_('paused') ? !1 : !0
              }
              b.played = function () {
                return this.techGet_('played') || Rc(0, 0)
              }
              b.scrubbing = function (a) {
                if ('undefined' === typeof a) return this.scrubbing_
                this.scrubbing_ = !!a
                this.techCall_('setScrubbing', this.scrubbing_)
                a ? this.addClass('vjs-scrubbing') : this.removeClass('vjs-scrubbing')
              }
              b.currentTime = function (a) {
                if ('undefined' !== typeof a)
                  0 > a && (a = 0),
                    this.isReady_ && !this.changingSrc_ && this.tech_ && this.tech_.isReady_
                      ? (this.techCall_('setCurrentTime', a), (this.cache_.initTime = 0))
                      : ((this.cache_.initTime = a),
                        this.off('canplay', this.applyInitTime_),
                        this.one('canplay', this.applyInitTime_))
                else
                  return (
                    (this.cache_.currentTime = this.techGet_('currentTime') || 0),
                    this.cache_.currentTime
                  )
              }
              b.applyInitTime_ = function () {
                this.currentTime(this.cache_.initTime)
              }
              b.duration = function (a) {
                if (void 0 === a)
                  return void 0 !== this.cache_.duration ? this.cache_.duration : NaN
                a = parseFloat(a)
                0 > a && (a = Infinity)
                a !== this.cache_.duration &&
                  ((this.cache_.duration = a),
                  Infinity === a ? this.addClass('vjs-live') : this.removeClass('vjs-live'),
                  isNaN(a) || this.trigger('durationchange'))
              }
              b.remainingTime = function () {
                return this.duration() - this.currentTime()
              }
              b.remainingTimeDisplay = function () {
                return Math.floor(this.duration()) - Math.floor(this.currentTime())
              }
              b.buffered = function () {
                var a = this.techGet_('buffered')
                ;(a && a.length) || (a = Rc(0, 0))
                return a
              }
              b.bufferedPercent = function () {
                return Vi(this.buffered(), this.duration())
              }
              b.bufferedEnd = function () {
                var a = this.buffered(),
                  e = this.duration()
                a = a.end(a.length - 1)
                a > e && (a = e)
                return a
              }
              b.volume = function (a) {
                if (void 0 !== a)
                  (a = Math.max(0, Math.min(1, parseFloat(a)))),
                    (this.cache_.volume = a),
                    this.techCall_('setVolume', a),
                    0 < a && this.lastVolume_(a)
                else return (a = parseFloat(this.techGet_('volume'))), isNaN(a) ? 1 : a
              }
              b.muted = function (a) {
                if (void 0 !== a) this.techCall_('setMuted', a)
                else return this.techGet_('muted') || !1
              }
              b.defaultMuted = function (a) {
                return void 0 !== a
                  ? this.techCall_('setDefaultMuted', a)
                  : this.techGet_('defaultMuted') || !1
              }
              b.lastVolume_ = function (a) {
                if (void 0 !== a && 0 !== a) this.cache_.lastVolume = a
                else return this.cache_.lastVolume
              }
              b.supportsFullScreen = function () {
                return this.techGet_('supportsFullScreen') || !1
              }
              b.isFullscreen = function (a) {
                if (void 0 !== a) {
                  var e = this.isFullscreen_
                  this.isFullscreen_ = !!a
                  this.isFullscreen_ !== e &&
                    this.fsApi_.prefixed &&
                    this.trigger('fullscreenchange')
                  this.toggleFullscreenClass_()
                } else return this.isFullscreen_
              }
              b.requestFullscreen = function (a) {
                var e = this.options_.Promise || ca.Promise
                if (e) {
                  var n = this
                  return new e(function (q, t) {
                    function v() {
                      n.off('fullscreenerror', p)
                      n.off('fullscreenchange', r)
                    }
                    function r() {
                      v()
                      q()
                    }
                    function p(l, f) {
                      v()
                      t(f)
                    }
                    n.one('fullscreenchange', r)
                    n.one('fullscreenerror', p)
                    var m = n.requestFullscreenHelper_(a)
                    if (m) return m.then(v, v), m
                  })
                }
                return this.requestFullscreenHelper_()
              }
              b.requestFullscreenHelper_ = function (a) {
                var e = this
                if (!this.fsApi_.prefixed) {
                  var n = (this.options_.fullscreen && this.options_.fullscreen.options) || {}
                  void 0 !== a && (n = a)
                }
                if (this.fsApi_.requestFullscreen)
                  return (
                    (a = this.el_[this.fsApi_.requestFullscreen](n)) &&
                      a.then(
                        function () {
                          return e.isFullscreen(!0)
                        },
                        function () {
                          return e.isFullscreen(!1)
                        },
                      ),
                    a
                  )
                this.tech_.supportsFullScreen()
                  ? this.techCall_('enterFullScreen')
                  : this.enterFullWindow()
              }
              b.exitFullscreen = function () {
                var a = this.options_.Promise || ca.Promise
                if (a) {
                  var e = this
                  return new a(function (n, q) {
                    function t() {
                      e.off('fullscreenerror', r)
                      e.off('fullscreenchange', v)
                    }
                    function v() {
                      t()
                      n()
                    }
                    function r(m, l) {
                      t()
                      q(l)
                    }
                    e.one('fullscreenchange', v)
                    e.one('fullscreenerror', r)
                    var p = e.exitFullscreenHelper_()
                    if (p) return p.then(t, t), p
                  })
                }
                return this.exitFullscreenHelper_()
              }
              b.exitFullscreenHelper_ = function () {
                var a = this
                if (this.fsApi_.requestFullscreen) {
                  var e = pa[this.fsApi_.exitFullscreen]()
                  e &&
                    e.then(function () {
                      return a.isFullscreen(!1)
                    })
                  return e
                }
                this.tech_.supportsFullScreen()
                  ? this.techCall_('exitFullScreen')
                  : this.exitFullWindow()
              }
              b.enterFullWindow = function () {
                this.isFullscreen(!0)
                this.isFullWindow = !0
                this.docOrigOverflow = pa.documentElement.style.overflow
                sb(pa, 'keydown', this.boundFullWindowOnEscKey_)
                pa.documentElement.style.overflow = 'hidden'
                Lb(pa.body, 'vjs-full-window')
                this.trigger('enterFullWindow')
              }
              b.fullWindowOnEscKey = function (a) {
                Ba.isEventKey(a, 'Esc') &&
                  (!0 === this.isFullscreen() ? this.exitFullscreen() : this.exitFullWindow())
              }
              b.exitFullWindow = function () {
                this.isFullscreen(!1)
                this.isFullWindow = !1
                tb(pa, 'keydown', this.boundFullWindowOnEscKey_)
                pa.documentElement.style.overflow = this.docOrigOverflow
                Qc(pa.body, 'vjs-full-window')
                this.trigger('exitFullWindow')
              }
              b.disablePictureInPicture = function (a) {
                if (void 0 === a) return this.techGet_('disablePictureInPicture')
                this.techCall_('setDisablePictureInPicture', a)
                this.options_.disablePictureInPicture = a
                this.trigger('disablepictureinpicturechanged')
              }
              b.isInPictureInPicture = function (a) {
                if (void 0 !== a)
                  (this.isInPictureInPicture_ = !!a), this.togglePictureInPictureClass_()
                else return !!this.isInPictureInPicture_
              }
              b.requestPictureInPicture = function () {
                if ('pictureInPictureEnabled' in pa && !1 === this.disablePictureInPicture())
                  return this.techGet_('requestPictureInPicture')
              }
              b.exitPictureInPicture = function () {
                if ('pictureInPictureEnabled' in pa) return pa.exitPictureInPicture()
              }
              b.handleKeyDown = function (a) {
                var e = this.options_.userActions
                if (e && e.hotkeys) {
                  var n = this.el_.ownerDocument.activeElement
                  var q = n.tagName.toLowerCase()
                  if (n.isContentEditable) n = !0
                  else {
                    var t = 'button checkbox hidden radio reset submit'.split(' ')
                    n = 'input' === q ? -1 === t.indexOf(n.type) : -1 !== ['textarea'].indexOf(q)
                  }
                  n ||
                    ('function' === typeof e.hotkeys
                      ? e.hotkeys.call(this, a)
                      : this.handleHotkeys(a))
                }
              }
              b.handleHotkeys = function (a) {
                var e = this.options_.userActions ? this.options_.userActions.hotkeys : {},
                  n = e.fullscreenKey,
                  q = e.muteKey
                q =
                  void 0 === q
                    ? function (t) {
                        return Ba.isEventKey(t, 'm')
                      }
                    : q
                e = e.playPauseKey
                e =
                  void 0 === e
                    ? function (t) {
                        return Ba.isEventKey(t, 'k') || Ba.isEventKey(t, 'Space')
                      }
                    : e
                ;(void 0 === n
                  ? function (t) {
                      return Ba.isEventKey(t, 'f')
                    }
                  : n
                ).call(this, a)
                  ? (a.preventDefault(),
                    a.stopPropagation(),
                    (n = ja.getComponent('FullscreenToggle')),
                    !1 !== pa[this.fsApi_.fullscreenEnabled] &&
                      n.prototype.handleClick.call(this, a))
                  : q.call(this, a)
                    ? (a.preventDefault(),
                      a.stopPropagation(),
                      ja.getComponent('MuteToggle').prototype.handleClick.call(this, a))
                    : e.call(this, a) &&
                      (a.preventDefault(),
                      a.stopPropagation(),
                      ja.getComponent('PlayToggle').prototype.handleClick.call(this, a))
              }
              b.canPlayType = function (a) {
                for (var e, n = 0, q = this.options_.techOrder; n < q.length; n++) {
                  e = q[n]
                  var t = Oa.getTech(e)
                  t || (t = ja.getComponent(e))
                  if (!t)
                    Ea.error(
                      'The "' +
                        e +
                        '" tech is undefined. Skipped browser support check for that tech.',
                    )
                  else if (t.isSupported() && (e = t.canPlayType(a))) return e
                }
                return ''
              }
              b.selectSource = function (a) {
                var e = this,
                  n = this.options_.techOrder
                    .map(function (r) {
                      return [r, Oa.getTech(r)]
                    })
                    .filter(function (r) {
                      var p = r[0]
                      if ((r = r[1])) return r.isSupported()
                      Ea.error(
                        'The "' +
                          p +
                          '" tech is undefined. Skipped browser support check for that tech.',
                      )
                      return !1
                    }),
                  q = function (r, p, m) {
                    var l
                    r.some(function (f) {
                      return p.some(function (g) {
                        if ((l = m(f, g))) return !0
                      })
                    })
                    return l
                  },
                  t = function (r) {
                    return function (p, m) {
                      return r(m, p)
                    }
                  },
                  v = function (r, p) {
                    var m = r[0]
                    if (r[1].canPlaySource(p, e.options_[m.toLowerCase()]))
                      return { source: p, tech: m }
                  }
                return (this.options_.sourceOrder ? q(a, n, t(v)) : q(n, a, v)) || !1
              }
              b.src = function (a) {
                var e = this
                if ('undefined' === typeof a) return this.cache_.src || ''
                var n = Eo(a)
                n.length
                  ? ((this.changingSrc_ = !0),
                    (this.cache_.sources = n),
                    this.updateSourceCaches_(n[0]),
                    Wn(this, n[0], function (q, t) {
                      e.middleware_ = t
                      e.cache_.sources = n
                      e.updateSourceCaches_(q)
                      if (e.src_(q)) {
                        if (1 < n.length) return e.src(n.slice(1))
                        e.changingSrc_ = !1
                        e.setTimeout(function () {
                          this.error({
                            code: 4,
                            message: this.localize(this.options_.notSupportedMessage),
                          })
                        }, 0)
                        e.triggerReady()
                      } else Xn(t, e.tech_)
                    }))
                  : this.setTimeout(function () {
                      this.error({
                        code: 4,
                        message: this.localize(this.options_.notSupportedMessage),
                      })
                    }, 0)
              }
              b.src_ = function (a) {
                var e = this,
                  n = this.selectSource([a])
                if (!n) return !0
                if (!mo(n.tech, this.techName_))
                  return (
                    (this.changingSrc_ = !0),
                    this.loadTech_(n.tech, n.source),
                    this.tech_.ready(function () {
                      e.changingSrc_ = !1
                    }),
                    !1
                  )
                this.ready(function () {
                  this.tech_.constructor.prototype.hasOwnProperty('setSource')
                    ? this.techCall_('setSource', a)
                    : this.techCall_('src', a.src)
                  this.changingSrc_ = !1
                }, !0)
                return !1
              }
              b.load = function () {
                this.techCall_('load')
              }
              b.reset = function () {
                var a = this,
                  e = this.options_.Promise || ca.Promise
                this.paused() || !e
                  ? this.doReset_()
                  : ((e = this.play()),
                    Ec(
                      e.then(function () {
                        return a.doReset_()
                      }),
                    ))
              }
              b.doReset_ = function () {
                this.tech_ && this.tech_.clearTracks('text')
                this.resetCache_()
                this.poster('')
                this.loadTech_(this.options_.techOrder[0], null)
                this.techCall_('reset')
                this.resetControlBarUI_()
                tc(this) && this.trigger('playerreset')
              }
              b.resetControlBarUI_ = function () {
                this.resetProgressBar_()
                this.resetPlaybackRate_()
                this.resetVolumeBar_()
              }
              b.resetProgressBar_ = function () {
                this.currentTime(0)
                var a = this.controlBar,
                  e = a.durationDisplay
                a = a.remainingTimeDisplay
                e && e.updateContent()
                a && a.updateContent()
              }
              b.resetPlaybackRate_ = function () {
                this.playbackRate(this.defaultPlaybackRate())
                this.handleTechRateChange_()
              }
              b.resetVolumeBar_ = function () {
                this.volume(1)
                this.trigger('volumechange')
              }
              b.currentSources = function () {
                var a = this.currentSource(),
                  e = []
                0 !== Object.keys(a).length && e.push(a)
                return this.cache_.sources || e
              }
              b.currentSource = function () {
                return this.cache_.source || {}
              }
              b.currentSrc = function () {
                return (this.currentSource() && this.currentSource().src) || ''
              }
              b.currentType = function () {
                return (this.currentSource() && this.currentSource().type) || ''
              }
              b.preload = function (a) {
                if (void 0 !== a) this.techCall_('setPreload', a), (this.options_.preload = a)
                else return this.techGet_('preload')
              }
              b.autoplay = function (a) {
                if (void 0 === a) return this.options_.autoplay || !1
                if ('string' === typeof a && /(any|play|muted)/.test(a)) {
                  this.options_.autoplay = a
                  this.manualAutoplay_(a)
                  var e = !1
                } else this.options_.autoplay = a ? !0 : !1
                e = 'undefined' === typeof e ? this.options_.autoplay : e
                this.tech_ && this.techCall_('setAutoplay', e)
              }
              b.playsinline = function (a) {
                return void 0 !== a
                  ? (this.techCall_('setPlaysinline', a), (this.options_.playsinline = a), this)
                  : this.techGet_('playsinline')
              }
              b.loop = function (a) {
                if (void 0 !== a) this.techCall_('setLoop', a), (this.options_.loop = a)
                else return this.techGet_('loop')
              }
              b.poster = function (a) {
                if (void 0 === a) return this.poster_
                a || (a = '')
                a !== this.poster_ &&
                  ((this.poster_ = a),
                  this.techCall_('setPoster', a),
                  (this.isPosterFromTech_ = !1),
                  this.trigger('posterchange'))
              }
              b.handleTechPosterChange_ = function () {
                if (
                  (!this.poster_ || this.options_.techCanOverridePoster) &&
                  this.tech_ &&
                  this.tech_.poster
                ) {
                  var a = this.tech_.poster() || ''
                  a !== this.poster_ &&
                    ((this.poster_ = a),
                    (this.isPosterFromTech_ = !0),
                    this.trigger('posterchange'))
                }
              }
              b.controls = function (a) {
                if (void 0 === a) return !!this.controls_
                a = !!a
                this.controls_ !== a &&
                  ((this.controls_ = a),
                  this.usingNativeControls() && this.techCall_('setControls', a),
                  this.controls_
                    ? (this.removeClass('vjs-controls-disabled'),
                      this.addClass('vjs-controls-enabled'),
                      this.trigger('controlsenabled'),
                      this.usingNativeControls() || this.addTechControlsListeners_())
                    : (this.removeClass('vjs-controls-enabled'),
                      this.addClass('vjs-controls-disabled'),
                      this.trigger('controlsdisabled'),
                      this.usingNativeControls() || this.removeTechControlsListeners_()))
              }
              b.usingNativeControls = function (a) {
                if (void 0 === a) return !!this.usingNativeControls_
                a = !!a
                this.usingNativeControls_ !== a &&
                  ((this.usingNativeControls_ = a)
                    ? (this.addClass('vjs-using-native-controls'),
                      this.trigger('usingnativecontrols'))
                    : (this.removeClass('vjs-using-native-controls'),
                      this.trigger('usingcustomcontrols')))
              }
              b.error = function (a) {
                if (void 0 === a) return this.error_ || null
                if (this.options_.suppressNotSupportedError && a && 4 === a.code) {
                  var e = function () {
                    this.error(a)
                  }
                  this.options_.suppressNotSupportedError = !1
                  this.any(['click', 'touchstart'], e)
                  this.one('loadstart', function () {
                    this.off(['click', 'touchstart'], e)
                  })
                } else
                  null === a
                    ? ((this.error_ = a),
                      this.removeClass('vjs-error'),
                      this.errorDisplay && this.errorDisplay.close())
                    : ((this.error_ = new wb(a)),
                      this.addClass('vjs-error'),
                      Ea.error(
                        '(CODE:' + this.error_.code + ' ' + wb.errorTypes[this.error_.code] + ')',
                        this.error_.message,
                        this.error_,
                      ),
                      this.trigger('error'))
              }
              b.reportUserActivity = function (a) {
                this.userActivity_ = !0
              }
              b.userActive = function (a) {
                if (void 0 === a) return this.userActive_
                a = !!a
                if (a !== this.userActive_)
                  if ((this.userActive_ = a))
                    (this.userActivity_ = !0),
                      this.removeClass('vjs-user-inactive'),
                      this.addClass('vjs-user-active'),
                      this.trigger('useractive')
                  else {
                    if (this.tech_)
                      this.tech_.one('mousemove', function (e) {
                        e.stopPropagation()
                        e.preventDefault()
                      })
                    this.userActivity_ = !1
                    this.removeClass('vjs-user-active')
                    this.addClass('vjs-user-inactive')
                    this.trigger('userinactive')
                  }
              }
              b.listenForUserActivity_ = function () {
                var a,
                  e,
                  n,
                  q = Ga(this, this.reportUserActivity),
                  t = function (r) {
                    q()
                    this.clearInterval(a)
                  }
                this.on('mousedown', function () {
                  q()
                  this.clearInterval(a)
                  a = this.setInterval(q, 250)
                })
                this.on('mousemove', function (r) {
                  if (r.screenX !== e || r.screenY !== n) (e = r.screenX), (n = r.screenY), q()
                })
                this.on('mouseup', t)
                this.on('mouseleave', t)
                !(t = this.getChild('controlBar')) ||
                  Pb ||
                  Jc ||
                  (t.on('mouseenter', function (r) {
                    this.player().cache_.inactivityTimeout =
                      this.player().options_.inactivityTimeout
                    this.player().options_.inactivityTimeout = 0
                  }),
                  t.on('mouseleave', function (r) {
                    this.player().options_.inactivityTimeout =
                      this.player().cache_.inactivityTimeout
                  }))
                this.on('keydown', q)
                this.on('keyup', q)
                var v
                this.setInterval(function () {
                  if (this.userActivity_) {
                    this.userActivity_ = !1
                    this.userActive(!0)
                    this.clearTimeout(v)
                    var r = this.options_.inactivityTimeout
                    0 >= r ||
                      (v = this.setTimeout(function () {
                        this.userActivity_ || this.userActive(!1)
                      }, r))
                  }
                }, 250)
              }
              b.playbackRate = function (a) {
                if (void 0 !== a) this.techCall_('setPlaybackRate', a)
                else
                  return this.tech_ && this.tech_.featuresPlaybackRate
                    ? this.cache_.lastPlaybackRate || this.techGet_('playbackRate')
                    : 1
              }
              b.defaultPlaybackRate = function (a) {
                return void 0 !== a
                  ? this.techCall_('setDefaultPlaybackRate', a)
                  : this.tech_ && this.tech_.featuresPlaybackRate
                    ? this.techGet_('defaultPlaybackRate')
                    : 1
              }
              b.isAudio = function (a) {
                if (void 0 !== a) this.isAudio_ = !!a
                else return !!this.isAudio_
              }
              b.addTextTrack = function (a, e, n) {
                if (this.tech_) return this.tech_.addTextTrack(a, e, n)
              }
              b.addRemoteTextTrack = function (a, e) {
                if (this.tech_) return this.tech_.addRemoteTextTrack(a, e)
              }
              b.removeRemoteTextTrack = function (a) {
                void 0 === a && (a = {})
                var e = a.track
                e || (e = a)
                if (this.tech_) return this.tech_.removeRemoteTextTrack(e)
              }
              b.getVideoPlaybackQuality = function () {
                return this.techGet_('getVideoPlaybackQuality')
              }
              b.videoWidth = function () {
                return (this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth()) || 0
              }
              b.videoHeight = function () {
                return (this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight()) || 0
              }
              b.language = function (a) {
                if (void 0 === a) return this.language_
                this.language_ !== String(a).toLowerCase() &&
                  ((this.language_ = String(a).toLowerCase()),
                  tc(this) && this.trigger('languagechange'))
              }
              b.languages = function () {
                return Pa(c.prototype.options_.languages, this.languages_)
              }
              b.toJSON = function () {
                var a = Pa(this.options_),
                  e = a.tracks
                a.tracks = []
                for (var n = 0; n < e.length; n++) {
                  var q = e[n]
                  q = Pa(q)
                  q.player = void 0
                  a.tracks[n] = q
                }
                return a
              }
              b.createModal = function (a, e) {
                var n = this
                e = e || {}
                e.content = a || ''
                var q = new sd(this, e)
                this.addChild(q)
                q.on('dispose', function () {
                  n.removeChild(q)
                })
                q.open()
                return q
              }
              b.updateCurrentBreakpoint_ = function () {
                if (this.responsive())
                  for (
                    var a = this.currentBreakpoint(), e = this.currentWidth(), n = 0;
                    n < ih.length;
                    n++
                  ) {
                    var q = ih[n]
                    if (e <= this.breakpoints_[q]) {
                      if (a === q) break
                      a && this.removeClass(cf[a])
                      this.addClass(cf[q])
                      this.breakpoint_ = q
                      break
                    }
                  }
              }
              b.removeCurrentBreakpoint_ = function () {
                var a = this.currentBreakpointClass()
                this.breakpoint_ = ''
                a && this.removeClass(a)
              }
              b.breakpoints = function (a) {
                if (void 0 === a) return X(this.breakpoints_)
                this.breakpoint_ = ''
                this.breakpoints_ = X({}, ap, a)
                this.updateCurrentBreakpoint_()
                return X(this.breakpoints_)
              }
              b.responsive = function (a) {
                if (void 0 === a) return this.responsive_
                a = !!a
                if (a !== this.responsive_)
                  return (
                    (this.responsive_ = a)
                      ? (this.on('playerresize', this.updateCurrentBreakpoint_),
                        this.updateCurrentBreakpoint_())
                      : (this.off('playerresize', this.updateCurrentBreakpoint_),
                        this.removeCurrentBreakpoint_()),
                    a
                  )
              }
              b.currentBreakpoint = function () {
                return this.breakpoint_
              }
              b.currentBreakpointClass = function () {
                return cf[this.breakpoint_] || ''
              }
              b.loadMedia = function (a, e) {
                var n = this
                if (a && 'object' === typeof a) {
                  this.reset()
                  this.cache_.media = Pa(a)
                  a = this.cache_.media
                  var q = a.poster,
                    t = a.src,
                    v = a.textTracks
                  !a.artwork && q && (this.cache_.media.artwork = [{ src: q, type: Me(q) }])
                  t && this.src(t)
                  q && this.poster(q)
                  Array.isArray(v) &&
                    v.forEach(function (r) {
                      return n.addRemoteTextTrack(r, !1)
                    })
                  this.ready(e)
                }
              }
              b.getMedia = function () {
                if (!this.cache_.media) {
                  var a = this.poster(),
                    e = this.currentSources(),
                    n = Array.prototype.map.call(this.remoteTextTracks(), function (q) {
                      return { kind: q.kind, label: q.label, language: q.language, src: q.src }
                    })
                  e = { src: e, textTracks: n }
                  a && ((e.poster = a), (e.artwork = [{ src: e.poster, type: Me(e.poster) }]))
                  return e
                }
                return Pa(this.cache_.media)
              }
              c.getTagSettings = function (a) {
                var e = { sources: [], tracks: [] },
                  n = ac(a),
                  q = n['data-setup']
                db(a, 'vjs-fill') && (n.fill = !0)
                db(a, 'vjs-fluid') && (n.fluid = !0)
                if (null !== q) {
                  var t = null
                  try {
                    var v = JSON.parse(q || '{}', void 0)
                  } catch (r) {
                    t = r
                  }
                  v = [t, v]
                  q = v[0]
                  v = v[1]
                  q && Ea.error(q)
                  X(n, v)
                }
                X(e, n)
                if (a.hasChildNodes())
                  for (a = a.childNodes, n = 0, q = a.length; n < q; n++)
                    (v = a[n]),
                      (t = v.nodeName.toLowerCase()),
                      'source' === t ? e.sources.push(ac(v)) : 'track' === t && e.tracks.push(ac(v))
                return e
              }
              b.flexNotSupported_ = function () {
                var a = pa.createElement('i')
                return !(
                  'flexBasis' in a.style ||
                  'webkitFlexBasis' in a.style ||
                  'mozFlexBasis' in a.style ||
                  'msFlexBasis' in a.style ||
                  'msFlexOrder' in a.style
                )
              }
              b.debug = function (a) {
                if (void 0 === a) return this.debugEnabled_
                a
                  ? (this.trigger('debugon'),
                    (this.previousLogLevel_ = this.log.level),
                    this.log.level('debug'),
                    (this.debugEnabled_ = !0))
                  : (this.trigger('debugoff'),
                    this.log.level(this.previousLogLevel_),
                    (this.previousLogLevel_ = void 0),
                    (this.debugEnabled_ = !1))
              }
              return c
            })(ja)
          zb.names.forEach(function (d) {
            var c = zb[d]
            ab.prototype[c.getterName] = function () {
              if (this.tech_) return this.tech_[c.getterName]()
              this[c.privateName] = this[c.privateName] || new c.ListClass()
              return this[c.privateName]
            }
          })
          ab.prototype.crossorigin = ab.prototype.crossOrigin
          ab.players = {}
          var fe = ca.navigator
          ab.prototype.options_ = {
            techOrder: Oa.defaultTechOrder_,
            html5: {},
            inactivityTimeout: 2e3,
            playbackRates: [],
            liveui: !1,
            children:
              'mediaLoader posterImage textTrackDisplay loadingSpinner bigPlayButton liveTracker controlBar errorDisplay textTrackSettings resizeManager'.split(
                ' ',
              ),
            language:
              (fe && ((fe.languages && fe.languages[0]) || fe.userLanguage || fe.language)) || 'en',
            languages: {},
            notSupportedMessage: 'No compatible source was found for this media.',
            fullscreen: { options: { navigationUI: 'hide' } },
            breakpoints: {},
            responsive: !1,
          }
          ;['ended', 'seeking', 'seekable', 'networkState', 'readyState'].forEach(function (d) {
            ab.prototype[d] = function () {
              return this.techGet_(d)
            }
          })
          Mk.forEach(function (d) {
            ab.prototype['handleTech' + Xa(d) + '_'] = function () {
              return this.trigger(d)
            }
          })
          ja.registerComponent('Player', ab)
          var Nk = y(function (d) {
              function c(b, a) {
                d.exports = c =
                  Object.setPrototypeOf ||
                  function (e, n) {
                    e.__proto__ = n
                    return e
                  }
                return c(b, a)
              }
              d.exports = c
            }),
            bp = function () {
              if ('undefined' === typeof Reflect || !Reflect.construct || Reflect.construct.sham)
                return !1
              if ('function' === typeof Proxy) return !0
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0
              } catch (d) {
                return !1
              }
            },
            cp = y(function (d) {
              function c(b, a, e) {
                bp()
                  ? (d.exports = c = Reflect.construct)
                  : (d.exports = c =
                      function (n, q, t) {
                        var v = [null]
                        v.push.apply(v, q)
                        n = new (Function.bind.apply(n, v))()
                        t && Nk(n, t.prototype)
                        return n
                      })
                return c.apply(null, arguments)
              }
              d.exports = c
            }),
            wc = {},
            df = function (d) {
              return wc.hasOwnProperty(d) ? wc[d] : void 0
            },
            ef = function (d, c, b) {
              b = (b ? 'before' : '') + 'pluginsetup'
              d.trigger(b, c)
              d.trigger(b + ':' + c.name, c)
            },
            dp = function (d, c) {
              var b = function () {
                ef(this, { name: d, plugin: c, instance: null }, !0)
                var a = c.apply(this, arguments)
                this.activePlugins_ = this.activePlugins_ || {}
                this.activePlugins_[d] = !0
                ef(this, { name: d, plugin: c, instance: a })
                return a
              }
              Object.keys(c).forEach(function (a) {
                b[a] = c[a]
              })
              return b
            },
            Ok = function (d, c) {
              c.prototype.name = d
              return function () {
                ef(this, { name: d, plugin: c, instance: null }, !0)
                for (var b = arguments.length, a = Array(b), e = 0; e < b; e++) a[e] = arguments[e]
                var n = cp(c, [this].concat(a))
                this[d] = function () {
                  return n
                }
                ef(this, n.getEventHash())
                return n
              }
            },
            kc = (function () {
              function d(b) {
                if (this.constructor === d)
                  throw Error('Plugin must be sub-classed; not directly instantiated.')
                this.player = b
                this.log || (this.log = this.player.log.createLogger(this.name))
                fg(this)
                delete this.trigger
                Ti(this, this.constructor.defaultState)
                var a = this.name
                b.activePlugins_ = b.activePlugins_ || {}
                b.activePlugins_[a] = !0
                this.dispose = Ga(this, this.dispose)
                b.on('dispose', this.dispose)
              }
              var c = d.prototype
              c.version = function () {
                return this.constructor.VERSION
              }
              c.getEventHash = function (b) {
                void 0 === b && (b = {})
                b.name = this.name
                b.plugin = this.constructor
                b.instance = this
                return b
              }
              c.trigger = function (b, a) {
                void 0 === a && (a = {})
                return id(this.eventBusEl_, b, this.getEventHash(a))
              }
              c.handleStateChanged = function (b) {}
              c.dispose = function () {
                var b = this.name,
                  a = this.player
                this.trigger('dispose')
                this.off()
                a.off('dispose', this.dispose)
                a.activePlugins_[b] = !1
                this.player = this.state = null
                a[b] = Ok(b, wc[b])
              }
              d.isBasic = function (b) {
                b = 'string' === typeof b ? df(b) : b
                return 'function' === typeof b && !d.prototype.isPrototypeOf(b.prototype)
              }
              d.registerPlugin = function (b, a) {
                if ('string' !== typeof b)
                  throw Error(
                    'Illegal plugin name, "' + b + '", must be a string, was ' + typeof b + '.',
                  )
                if (wc.hasOwnProperty(b))
                  Ea.warn(
                    'A plugin named "' +
                      b +
                      '" already exists. You may want to avoid re-registering plugins!',
                  )
                else if (ab.prototype.hasOwnProperty(b))
                  throw Error(
                    'Illegal plugin name, "' +
                      b +
                      '", cannot share a name with an existing player method!',
                  )
                if ('function' !== typeof a)
                  throw Error(
                    'Illegal plugin for "' + b + '", must be a function, was ' + typeof a + '.',
                  )
                wc[b] = a
                'plugin' !== b &&
                  (d.isBasic(a) ? (ab.prototype[b] = dp(b, a)) : (ab.prototype[b] = Ok(b, a)))
                return a
              }
              d.deregisterPlugin = function (b) {
                if ('plugin' === b) throw Error('Cannot de-register base plugin.')
                wc.hasOwnProperty(b) && (delete wc[b], delete ab.prototype[b])
              }
              d.getPlugins = function (b) {
                void 0 === b && (b = Object.keys(wc))
                var a
                b.forEach(function (e) {
                  var n = df(e)
                  n && ((a = a || {}), (a[e] = n))
                })
                return a
              }
              d.getPluginVersion = function (b) {
                return ((b = df(b)) && b.VERSION) || ''
              }
              return d
            })()
          kc.getPlugin = df
          kc.BASE_PLUGIN_NAME = 'plugin'
          kc.registerPlugin('plugin', kc)
          ab.prototype.usingPlugin = function (d) {
            return !!this.activePlugins_ && !0 === this.activePlugins_[d]
          }
          ab.prototype.hasPlugin = function (d) {
            return !!wc.hasOwnProperty(d)
          }
          var ep = function (d, c) {
              if ('function' !== typeof c && null !== c)
                throw new TypeError('Super expression must either be null or a function')
              d.prototype = Object.create(c && c.prototype, {
                constructor: { value: d, writable: !0, configurable: !0 },
              })
              c && Nk(d, c)
            },
            fj = function (d) {
              return 0 === d.indexOf('#') ? d.slice(1) : d
            }
          U.hooks_ = {}
          U.hooks = function (d, c) {
            U.hooks_[d] = U.hooks_[d] || []
            c && (U.hooks_[d] = U.hooks_[d].concat(c))
            return U.hooks_[d]
          }
          U.hook = function (d, c) {
            U.hooks(d, c)
          }
          U.hookOnce = function (d, c) {
            U.hooks(
              d,
              [].concat(c).map(function (b) {
                return function e() {
                  U.removeHook(d, e)
                  return b.apply(void 0, arguments)
                }
              }),
            )
          }
          U.removeHook = function (d, c) {
            c = U.hooks(d).indexOf(c)
            if (-1 >= c) return !1
            U.hooks_[d] = U.hooks_[d].slice()
            U.hooks_[d].splice(c, 1)
            return !0
          }
          if (!0 !== ca.VIDEOJS_NO_DYNAMIC_STYLE && Wa()) {
            var ff = Fc('.vjs-styles-defaults')
            if (!ff) {
              ff = Sj('vjs-styles-defaults')
              var jh = Fc('head')
              jh && jh.insertBefore(ff, jh.firstChild)
              Tj(
                ff,
                '\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ',
              )
            }
          }
          Jd(1, U)
          U.VERSION = '7.11.8'
          U.options = ab.prototype.options_
          U.getPlayers = function () {
            return ab.players
          }
          U.getPlayer = function (d) {
            var c = ab.players
            if ('string' === typeof d) {
              d = fj(d)
              var b = c[d]
              if (b) return b
              d = Fc('#' + d)
            }
            if (Ua(d) && ((b = d), (d = b.player), (b = b.playerId), d || c[b])) return d || c[b]
          }
          U.getAllPlayers = function () {
            return Object.keys(ab.players)
              .map(function (d) {
                return ab.players[d]
              })
              .filter(Boolean)
          }
          U.players = ab.players
          U.getComponent = ja.getComponent
          U.registerComponent = function (d, c) {
            Oa.isTech(c) &&
              Ea.warn(
                'The ' +
                  d +
                  ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)',
              )
            ja.registerComponent.call(ja, d, c)
          }
          U.getTech = Oa.getTech
          U.registerTech = Oa.registerTech
          U.use = function (d, c) {
            Tc[d] = Tc[d] || []
            Tc[d].push(c)
          }
          Object.defineProperty(U, 'middleware', { value: {}, writeable: !1, enumerable: !0 })
          Object.defineProperty(U.middleware, 'TERMINATOR', {
            value: Le,
            writeable: !1,
            enumerable: !0,
          })
          U.browser = io
          U.TOUCH_ENABLED = qd
          U.extend = function (d, c) {
            void 0 === c && (c = {})
            var b = function () {
                d.apply(this, arguments)
              },
              a = {}
            'object' === typeof c
              ? (c.constructor !== Object.prototype.constructor && (b = c.constructor), (a = c))
              : 'function' === typeof c && (b = c)
            ep(b, d)
            d && (b.super_ = d)
            for (var e in a) a.hasOwnProperty(e) && (b.prototype[e] = a[e])
            return b
          }
          U.mergeOptions = Pa
          U.bind = Ga
          U.registerPlugin = kc.registerPlugin
          U.deregisterPlugin = kc.deregisterPlugin
          U.plugin = function (d, c) {
            Ea.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead')
            return kc.registerPlugin(d, c)
          }
          U.getPlugins = kc.getPlugins
          U.getPlugin = kc.getPlugin
          U.getPluginVersion = kc.getPluginVersion
          U.addLanguage = function (d, c) {
            var b
            d = ('' + d).toLowerCase()
            U.options.languages = Pa(U.options.languages, ((b = {}), (b[d] = c), b))
            return U.options.languages[d]
          }
          U.log = Ea
          U.createLogger = Jj
          U.createTimeRange = U.createTimeRanges = Rc
          U.formatTime = kd
          U.setFormatTime = function (d) {
            pg = d
          }
          U.resetFormatTime = function () {
            pg = kk
          }
          U.parseUrl = Lg
          U.isCrossOrigin = Ze
          U.EventTarget = kb
          U.on = sb
          U.one = Je
          U.off = tb
          U.trigger = id
          U.xhr = cc
          U.TextTrack = ae
          U.AudioTrack = fk
          U.VideoTrack = gk
          'isEl isTextNode createEl hasClass addClass removeClass toggleClass setAttributes getAttributes emptyEl appendContent insertContent'
            .split(' ')
            .forEach(function (d) {
              U[d] = function () {
                Ea.warn('videojs.' + d + '() is deprecated; use videojs.dom.' + d + '() instead')
                return Rj[d].apply(null, arguments)
              }
            })
          U.computedStyle = qa
          U.dom = Rj
          U.url = xo
          U.defineLazyProperty = gh
          var fp = y(function (d) {
              d.exports = function (c) {
                if (void 0 === c)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  )
                return c
              }
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            }),
            Xb = F(fp),
            Pk = y(function (d) {
              function c(b, a) {
                d.exports = c =
                  Object.setPrototypeOf ||
                  function (e, n) {
                    e.__proto__ = n
                    return e
                  }
                d.exports['default'] = d.exports
                d.exports.__esModule = !0
                return c(b, a)
              }
              d.exports = c
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            })
          F(Pk)
          var gp = y(function (d) {
              d.exports = function (c, b) {
                c.prototype = Object.create(b.prototype)
                c.prototype.constructor = c
                Pk(c, b)
              }
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            }),
            xc = F(gp),
            Qk = 'undefined' !== typeof Eb ? Eb : 'undefined' !== typeof window ? window : {}
          if ('undefined' !== typeof document) var kh = document
          else (kh = Qk['__GLOBAL_DOCUMENT_CACHE@4']) || (kh = Qk['__GLOBAL_DOCUMENT_CACHE@4'] = Gj)
          var fc = kh,
            ra =
              'undefined' !== typeof window
                ? window
                : 'undefined' !== typeof Eb
                  ? Eb
                  : 'undefined' !== typeof self
                    ? self
                    : {},
            Rk = y(function (d, c) {
              ;(function (b) {
                var a =
                    /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/?#]*\/)*[^;?#]*)?(;[^?#]*)?(\?[^#]*)?(#.*)?$/,
                  e = /^([^\/?#]*)(.*)$/,
                  n = /(?:\/|^)\.(?=\/)/g,
                  q = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,
                  t = {
                    buildAbsoluteURL: function (v, r, p) {
                      p = p || {}
                      v = v.trim()
                      r = r.trim()
                      if (!r) {
                        if (!p.alwaysNormalize) return v
                        p = t.parseURL(v)
                        if (!p) throw Error('Error trying to parse base URL.')
                        p.path = t.normalizePath(p.path)
                        return t.buildURLFromParts(p)
                      }
                      var m = t.parseURL(r)
                      if (!m) throw Error('Error trying to parse relative URL.')
                      if (m.scheme) {
                        if (!p.alwaysNormalize) return r
                        m.path = t.normalizePath(m.path)
                        return t.buildURLFromParts(m)
                      }
                      r = t.parseURL(v)
                      if (!r) throw Error('Error trying to parse base URL.')
                      !r.netLoc &&
                        r.path &&
                        '/' !== r.path[0] &&
                        ((v = e.exec(r.path)), (r.netLoc = v[1]), (r.path = v[2]))
                      r.netLoc && !r.path && (r.path = '/')
                      v = {
                        scheme: r.scheme,
                        netLoc: m.netLoc,
                        path: null,
                        params: m.params,
                        query: m.query,
                        fragment: m.fragment,
                      }
                      m.netLoc ||
                        ((v.netLoc = r.netLoc),
                        '/' !== m.path[0] &&
                          (m.path
                            ? ((r = r.path),
                              (r = r.substring(0, r.lastIndexOf('/') + 1) + m.path),
                              (v.path = t.normalizePath(r)))
                            : ((v.path = r.path),
                              m.params || ((v.params = r.params), m.query || (v.query = r.query)))))
                      null === v.path &&
                        (v.path = p.alwaysNormalize ? t.normalizePath(m.path) : m.path)
                      return t.buildURLFromParts(v)
                    },
                    parseURL: function (v) {
                      return (v = a.exec(v))
                        ? {
                            scheme: v[1] || '',
                            netLoc: v[2] || '',
                            path: v[3] || '',
                            params: v[4] || '',
                            query: v[5] || '',
                            fragment: v[6] || '',
                          }
                        : null
                    },
                    normalizePath: function (v) {
                      for (
                        v = v.split('').reverse().join('').replace(n, '');
                        v.length !== (v = v.replace(q, '')).length;

                      );
                      return v.split('').reverse().join('')
                    },
                    buildURLFromParts: function (v) {
                      return v.scheme + v.netLoc + v.path + v.params + v.query + v.fragment
                    },
                  }
                d.exports = t
              })()
            }),
            Gc =
              'undefined' !== typeof window
                ? window
                : 'undefined' !== typeof Eb
                  ? Eb
                  : 'undefined' !== typeof self
                    ? self
                    : {},
            lc = function (d, c) {
              if (/^[a-z]+:/i.test(c)) return c
              ;/\/\//i.test(d) ||
                (d = Rk.buildAbsoluteURL((Gc.location && Gc.location.href) || '', d))
              return Rk.buildAbsoluteURL(d, c)
            },
            Sk = y(function (d) {
              function c(b, a) {
                d.exports = c =
                  Object.setPrototypeOf ||
                  function (e, n) {
                    e.__proto__ = n
                    return e
                  }
                d.exports['default'] = d.exports
                d.exports.__esModule = !0
                return c(b, a)
              }
              d.exports = c
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            })
          F(Sk)
          var hp = y(function (d) {
              d.exports = function (c, b) {
                c.prototype = Object.create(b.prototype)
                c.prototype.constructor = c
                Sk(c, b)
              }
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            }),
            lh = F(hp),
            mh = (function () {
              function d() {
                this.listeners = {}
              }
              var c = d.prototype
              c.on = function (b, a) {
                this.listeners[b] || (this.listeners[b] = [])
                this.listeners[b].push(a)
              }
              c.off = function (b, a) {
                if (!this.listeners[b]) return !1
                a = this.listeners[b].indexOf(a)
                this.listeners[b] = this.listeners[b].slice(0)
                this.listeners[b].splice(a, 1)
                return -1 < a
              }
              c.trigger = function (b) {
                var a = this.listeners[b]
                if (a)
                  if (2 === arguments.length)
                    for (var e = a.length, n = 0; n < e; ++n) a[n].call(this, arguments[1])
                  else {
                    e = Array.prototype.slice.call(arguments, 1)
                    n = a.length
                    for (var q = 0; q < n; ++q) a[q].apply(this, e)
                  }
              }
              c.dispose = function () {
                this.listeners = {}
              }
              c.pipe = function (b) {
                this.on('data', function (a) {
                  b.push(a)
                })
              }
              return d
            })(),
            ip = y(function (d) {
              function c() {
                d.exports = c =
                  Object.assign ||
                  function (b) {
                    for (var a = 1; a < arguments.length; a++) {
                      var e = arguments[a],
                        n
                      for (n in e) Object.prototype.hasOwnProperty.call(e, n) && (b[n] = e[n])
                    }
                    return b
                  }
                d.exports['default'] = d.exports
                d.exports.__esModule = !0
                return c.apply(this, arguments)
              }
              d.exports = c
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            }),
            jp = F(ip),
            kp = y(function (d) {
              d.exports = function (c) {
                if (void 0 === c)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  )
                return c
              }
              d.exports['default'] = d.exports
              d.exports.__esModule = !0
            }),
            lp = F(kp),
            mp = (function (d) {
              function c() {
                var b = d.call(this) || this
                b.buffer = ''
                return b
              }
              lh(c, d)
              c.prototype.push = function (b) {
                this.buffer += b
                for (b = this.buffer.indexOf('\n'); -1 < b; b = this.buffer.indexOf('\n'))
                  this.trigger('data', this.buffer.substring(0, b)),
                    (this.buffer = this.buffer.substring(b + 1))
              }
              return c
            })(mh),
            ge = function (d) {
              d = d.split.call(d, RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))'))
              for (var c = {}, b = d.length, a; b--; )
                '' !== d[b] &&
                  ((a = /([^=]*)=(.*)/.exec(d[b]).slice(1)),
                  (a[0] = a[0].replace(/^\s+|\s+$/g, '')),
                  (a[1] = a[1].replace(/^\s+|\s+$/g, '')),
                  (a[1] = a[1].replace(/^['"](.*)['"]$/g, '$1')),
                  (c[a[0]] = a[1]))
              return c
            },
            np = (function (d) {
              function c() {
                var a = d.call(this) || this
                a.customParsers = []
                a.tagMappers = []
                return a
              }
              lh(c, d)
              var b = c.prototype
              b.push = function (a) {
                var e = this,
                  n,
                  q
                a = a.trim()
                0 !== a.length &&
                  ('#' !== a[0]
                    ? this.trigger('data', { type: 'uri', uri: a })
                    : this.tagMappers
                        .reduce(
                          function (t, v) {
                            v = v(a)
                            return v === a ? t : t.concat([v])
                          },
                          [a],
                        )
                        .forEach(function (t) {
                          for (var v = 0; v < e.customParsers.length; v++)
                            if (e.customParsers[v].call(e, t)) return
                          0 !== t.indexOf('#EXT')
                            ? e.trigger('data', { type: 'comment', text: t.slice(1) })
                            : ((t = t.replace('\r', '')),
                              (n = /^#EXTM3U/.exec(t))
                                ? e.trigger('data', { type: 'tag', tagType: 'm3u' })
                                : (n = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(t))
                                  ? ((q = { type: 'tag', tagType: 'inf' }),
                                    n[1] && (q.duration = parseFloat(n[1])),
                                    n[2] && (q.title = n[2]),
                                    e.trigger('data', q))
                                  : (n = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(t))
                                    ? ((q = { type: 'tag', tagType: 'targetduration' }),
                                      n[1] && (q.duration = parseInt(n[1], 10)),
                                      e.trigger('data', q))
                                    : (n = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(t))
                                      ? ((q = { type: 'tag', tagType: 'totalduration' }),
                                        n[1] && (q.duration = parseInt(n[1], 10)),
                                        e.trigger('data', q))
                                      : (n = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(t))
                                        ? ((q = { type: 'tag', tagType: 'version' }),
                                          n[1] && (q.version = parseInt(n[1], 10)),
                                          e.trigger('data', q))
                                        : (n = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(t))
                                          ? ((q = { type: 'tag', tagType: 'media-sequence' }),
                                            n[1] && (q.number = parseInt(n[1], 10)),
                                            e.trigger('data', q))
                                          : (n =
                                                /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(
                                                  t,
                                                ))
                                            ? ((q = {
                                                type: 'tag',
                                                tagType: 'discontinuity-sequence',
                                              }),
                                              n[1] && (q.number = parseInt(n[1], 10)),
                                              e.trigger('data', q))
                                            : (n = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(t))
                                              ? ((q = { type: 'tag', tagType: 'playlist-type' }),
                                                n[1] && (q.playlistType = n[1]),
                                                e.trigger('data', q))
                                              : (n =
                                                    /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(
                                                      t,
                                                    ))
                                                ? ((q = { type: 'tag', tagType: 'byterange' }),
                                                  n[1] && (q.length = parseInt(n[1], 10)),
                                                  n[2] && (q.offset = parseInt(n[2], 10)),
                                                  e.trigger('data', q))
                                                : (n = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(t))
                                                  ? ((q = { type: 'tag', tagType: 'allow-cache' }),
                                                    n[1] && (q.allowed = !/NO/.test(n[1])),
                                                    e.trigger('data', q))
                                                  : (n = /^#EXT-X-MAP:?(.*)$/.exec(t))
                                                    ? ((q = { type: 'tag', tagType: 'map' }),
                                                      n[1] &&
                                                        ((t = ge(n[1])),
                                                        t.URI && (q.uri = t.URI),
                                                        t.BYTERANGE &&
                                                          ((v = t.BYTERANGE.split('@')),
                                                          (t = v[0]),
                                                          (v = v[1]),
                                                          (q.byterange = {}),
                                                          t &&
                                                            (q.byterange.length = parseInt(t, 10)),
                                                          v &&
                                                            (q.byterange.offset = parseInt(
                                                              v,
                                                              10,
                                                            )))),
                                                      e.trigger('data', q))
                                                    : (n = /^#EXT-X-STREAM-INF:?(.*)$/.exec(t))
                                                      ? ((q = {
                                                          type: 'tag',
                                                          tagType: 'stream-inf',
                                                        }),
                                                        n[1] &&
                                                          ((q.attributes = ge(n[1])),
                                                          q.attributes.RESOLUTION &&
                                                            ((t =
                                                              q.attributes.RESOLUTION.split('x')),
                                                            (v = {}),
                                                            t[0] && (v.width = parseInt(t[0], 10)),
                                                            t[1] && (v.height = parseInt(t[1], 10)),
                                                            (q.attributes.RESOLUTION = v)),
                                                          q.attributes.BANDWIDTH &&
                                                            (q.attributes.BANDWIDTH = parseInt(
                                                              q.attributes.BANDWIDTH,
                                                              10,
                                                            )),
                                                          q.attributes['PROGRAM-ID'] &&
                                                            (q.attributes['PROGRAM-ID'] = parseInt(
                                                              q.attributes['PROGRAM-ID'],
                                                              10,
                                                            ))),
                                                        e.trigger('data', q))
                                                      : (n = /^#EXT-X-MEDIA:?(.*)$/.exec(t))
                                                        ? ((q = { type: 'tag', tagType: 'media' }),
                                                          n[1] && (q.attributes = ge(n[1])),
                                                          e.trigger('data', q))
                                                        : (n = /^#EXT-X-ENDLIST/.exec(t))
                                                          ? e.trigger('data', {
                                                              type: 'tag',
                                                              tagType: 'endlist',
                                                            })
                                                          : (n = /^#EXT-X-DISCONTINUITY/.exec(t))
                                                            ? e.trigger('data', {
                                                                type: 'tag',
                                                                tagType: 'discontinuity',
                                                              })
                                                            : (n =
                                                                  /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(
                                                                    t,
                                                                  ))
                                                              ? ((q = {
                                                                  type: 'tag',
                                                                  tagType: 'program-date-time',
                                                                }),
                                                                n[1] &&
                                                                  ((q.dateTimeString = n[1]),
                                                                  (q.dateTimeObject = new Date(
                                                                    n[1],
                                                                  ))),
                                                                e.trigger('data', q))
                                                              : (n = /^#EXT-X-KEY:?(.*)$/.exec(t))
                                                                ? ((q = {
                                                                    type: 'tag',
                                                                    tagType: 'key',
                                                                  }),
                                                                  n[1] &&
                                                                    ((q.attributes = ge(n[1])),
                                                                    q.attributes.IV &&
                                                                      ('0x' ===
                                                                        q.attributes.IV.substring(
                                                                          0,
                                                                          2,
                                                                        ).toLowerCase() &&
                                                                        (q.attributes.IV =
                                                                          q.attributes.IV.substring(
                                                                            2,
                                                                          )),
                                                                      (q.attributes.IV =
                                                                        q.attributes.IV.match(
                                                                          /.{8}/g,
                                                                        )),
                                                                      (q.attributes.IV[0] =
                                                                        parseInt(
                                                                          q.attributes.IV[0],
                                                                          16,
                                                                        )),
                                                                      (q.attributes.IV[1] =
                                                                        parseInt(
                                                                          q.attributes.IV[1],
                                                                          16,
                                                                        )),
                                                                      (q.attributes.IV[2] =
                                                                        parseInt(
                                                                          q.attributes.IV[2],
                                                                          16,
                                                                        )),
                                                                      (q.attributes.IV[3] =
                                                                        parseInt(
                                                                          q.attributes.IV[3],
                                                                          16,
                                                                        )),
                                                                      (q.attributes.IV =
                                                                        new Uint32Array(
                                                                          q.attributes.IV,
                                                                        )))),
                                                                  e.trigger('data', q))
                                                                : (n = /^#EXT-X-START:?(.*)$/.exec(
                                                                      t,
                                                                    ))
                                                                  ? ((q = {
                                                                      type: 'tag',
                                                                      tagType: 'start',
                                                                    }),
                                                                    n[1] &&
                                                                      ((q.attributes = ge(n[1])),
                                                                      (q.attributes['TIME-OFFSET'] =
                                                                        parseFloat(
                                                                          q.attributes[
                                                                            'TIME-OFFSET'
                                                                          ],
                                                                        )),
                                                                      (q.attributes.PRECISE =
                                                                        /YES/.test(
                                                                          q.attributes.PRECISE,
                                                                        ))),
                                                                    e.trigger('data', q))
                                                                  : (n =
                                                                        /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(
                                                                          t,
                                                                        ))
                                                                    ? ((q = {
                                                                        type: 'tag',
                                                                        tagType: 'cue-out-cont',
                                                                      }),
                                                                      (q.data = n[1] ? n[1] : ''),
                                                                      e.trigger('data', q))
                                                                    : (n =
                                                                          /^#EXT-X-CUE-OUT:?(.*)?$/.exec(
                                                                            t,
                                                                          ))
                                                                      ? ((q = {
                                                                          type: 'tag',
                                                                          tagType: 'cue-out',
                                                                        }),
                                                                        (q.data = n[1] ? n[1] : ''),
                                                                        e.trigger('data', q))
                                                                      : (n =
                                                                            /^#EXT-X-CUE-IN:?(.*)?$/.exec(
                                                                              t,
                                                                            ))
                                                                        ? ((q = {
                                                                            type: 'tag',
                                                                            tagType: 'cue-in',
                                                                          }),
                                                                          (q.data = n[1]
                                                                            ? n[1]
                                                                            : ''),
                                                                          e.trigger('data', q))
                                                                        : e.trigger('data', {
                                                                            type: 'tag',
                                                                            data: t.slice(4),
                                                                          }))
                        }))
              }
              b.addParser = function (a) {
                var e = this,
                  n = a.expression,
                  q = a.customType,
                  t = a.dataParser,
                  v = a.segment
                'function' !== typeof t &&
                  (t = function (r) {
                    return r
                  })
                this.customParsers.push(function (r) {
                  if (n.exec(r))
                    return (
                      e.trigger('data', { type: 'custom', data: t(r), customType: q, segment: v }),
                      !0
                    )
                })
              }
              b.addTagMapper = function (a) {
                var e = a.expression,
                  n = a.map
                this.tagMappers.push(function (q) {
                  return e.test(q) ? n(q) : q
                })
              }
              return c
            })(mh),
            op = (function (d) {
              function c() {
                var a = d.call(this) || this
                a.lineStream = new mp()
                a.parseStream = new np()
                a.lineStream.pipe(a.parseStream)
                var e = lp(a),
                  n = [],
                  q = {},
                  t,
                  v,
                  r = function () {},
                  p = { AUDIO: {}, VIDEO: {}, 'CLOSED-CAPTIONS': {}, SUBTITLES: {} },
                  m = 0
                a.manifest = { allowCache: !0, discontinuityStarts: [], segments: [] }
                var l = 0
                a.parseStream.on('data', function (f) {
                  var g, k
                  ;({
                    tag: function () {
                      ;(
                        ({
                          'allow-cache': function () {
                            this.manifest.allowCache = f.allowed
                            'allowed' in f ||
                              (this.trigger('info', { message: 'defaulting allowCache to YES' }),
                              (this.manifest.allowCache = !0))
                          },
                          byterange: function () {
                            var u = {}
                            'length' in f &&
                              ((q.byterange = u),
                              (u.length = f.length),
                              'offset' in f || (f.offset = l))
                            'offset' in f && ((q.byterange = u), (u.offset = f.offset))
                            l = u.offset + u.length
                          },
                          endlist: function () {
                            this.manifest.endList = !0
                          },
                          inf: function () {
                            'mediaSequence' in this.manifest ||
                              ((this.manifest.mediaSequence = 0),
                              this.trigger('info', {
                                message: 'defaulting media sequence to zero',
                              }))
                            'discontinuitySequence' in this.manifest ||
                              ((this.manifest.discontinuitySequence = 0),
                              this.trigger('info', {
                                message: 'defaulting discontinuity sequence to zero',
                              }))
                            0 < f.duration && (q.duration = f.duration)
                            0 === f.duration &&
                              ((q.duration = 0.01),
                              this.trigger('info', {
                                message: 'updating zero segment duration to a small value',
                              }))
                            this.manifest.segments = n
                          },
                          key: function () {
                            f.attributes
                              ? 'NONE' === f.attributes.METHOD
                                ? (v = null)
                                : f.attributes.URI
                                  ? 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed' ===
                                    f.attributes.KEYFORMAT
                                    ? -1 ===
                                      ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'].indexOf(
                                        f.attributes.METHOD,
                                      )
                                      ? this.trigger('warn', {
                                          message: 'invalid key method provided for Widevine',
                                        })
                                      : ('SAMPLE-AES-CENC' === f.attributes.METHOD &&
                                          this.trigger('warn', {
                                            message:
                                              'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead',
                                          }),
                                        'data:text/plain;base64,' !==
                                        f.attributes.URI.substring(0, 23)
                                          ? this.trigger('warn', {
                                              message: 'invalid key URI provided for Widevine',
                                            })
                                          : f.attributes.KEYID &&
                                              '0x' === f.attributes.KEYID.substring(0, 2)
                                            ? (this.manifest.contentProtection = {
                                                'com.widevine.alpha': {
                                                  attributes: {
                                                    schemeIdUri: f.attributes.KEYFORMAT,
                                                    keyId: f.attributes.KEYID.substring(2),
                                                  },
                                                  pssh: gj(f.attributes.URI.split(',')[1]),
                                                },
                                              })
                                            : this.trigger('warn', {
                                                message: 'invalid key ID provided for Widevine',
                                              }))
                                    : (f.attributes.METHOD ||
                                        this.trigger('warn', {
                                          message: 'defaulting key method to AES-128',
                                        }),
                                      (v = {
                                        method: f.attributes.METHOD || 'AES-128',
                                        uri: f.attributes.URI,
                                      }),
                                      'undefined' !== typeof f.attributes.IV &&
                                        (v.iv = f.attributes.IV))
                                  : this.trigger('warn', {
                                      message: 'ignoring key declaration without URI',
                                    })
                              : this.trigger('warn', {
                                  message: 'ignoring key declaration without attribute list',
                                })
                          },
                          'media-sequence': function () {
                            isFinite(f.number)
                              ? (this.manifest.mediaSequence = f.number)
                              : this.trigger('warn', {
                                  message: 'ignoring invalid media sequence: ' + f.number,
                                })
                          },
                          'discontinuity-sequence': function () {
                            isFinite(f.number)
                              ? (m = this.manifest.discontinuitySequence = f.number)
                              : this.trigger('warn', {
                                  message: 'ignoring invalid discontinuity sequence: ' + f.number,
                                })
                          },
                          'playlist-type': function () {
                            ;/VOD|EVENT/.test(f.playlistType)
                              ? (this.manifest.playlistType = f.playlistType)
                              : this.trigger('warn', {
                                  message: 'ignoring unknown playlist type: ' + f.playlist,
                                })
                          },
                          map: function () {
                            t = {}
                            f.uri && (t.uri = f.uri)
                            f.byterange && (t.byterange = f.byterange)
                          },
                          'stream-inf': function () {
                            this.manifest.playlists = n
                            this.manifest.mediaGroups = this.manifest.mediaGroups || p
                            f.attributes
                              ? (q.attributes || (q.attributes = {}),
                                jp(q.attributes, f.attributes))
                              : this.trigger('warn', {
                                  message: 'ignoring empty stream-inf attributes',
                                })
                          },
                          media: function () {
                            this.manifest.mediaGroups = this.manifest.mediaGroups || p
                            if (
                              f.attributes &&
                              f.attributes.TYPE &&
                              f.attributes['GROUP-ID'] &&
                              f.attributes.NAME
                            ) {
                              var u = this.manifest.mediaGroups[f.attributes.TYPE]
                              u[f.attributes['GROUP-ID']] = u[f.attributes['GROUP-ID']] || {}
                              g = u[f.attributes['GROUP-ID']]
                              k = { default: /yes/i.test(f.attributes.DEFAULT) }
                              k.autoselect = k['default']
                                ? !0
                                : /yes/i.test(f.attributes.AUTOSELECT)
                              f.attributes.LANGUAGE && (k.language = f.attributes.LANGUAGE)
                              f.attributes.URI && (k.uri = f.attributes.URI)
                              f.attributes['INSTREAM-ID'] &&
                                (k.instreamId = f.attributes['INSTREAM-ID'])
                              f.attributes.CHARACTERISTICS &&
                                (k.characteristics = f.attributes.CHARACTERISTICS)
                              f.attributes.FORCED && (k.forced = /yes/i.test(f.attributes.FORCED))
                              g[f.attributes.NAME] = k
                            } else
                              this.trigger('warn', {
                                message: 'ignoring incomplete or missing media group',
                              })
                          },
                          discontinuity: function () {
                            m += 1
                            q.discontinuity = !0
                            this.manifest.discontinuityStarts.push(n.length)
                          },
                          'program-date-time': function () {
                            'undefined' === typeof this.manifest.dateTimeString &&
                              ((this.manifest.dateTimeString = f.dateTimeString),
                              (this.manifest.dateTimeObject = f.dateTimeObject))
                            q.dateTimeString = f.dateTimeString
                            q.dateTimeObject = f.dateTimeObject
                          },
                          targetduration: function () {
                            !isFinite(f.duration) || 0 > f.duration
                              ? this.trigger('warn', {
                                  message: 'ignoring invalid target duration: ' + f.duration,
                                })
                              : (this.manifest.targetDuration = f.duration)
                          },
                          totalduration: function () {
                            !isFinite(f.duration) || 0 > f.duration
                              ? this.trigger('warn', {
                                  message: 'ignoring invalid total duration: ' + f.duration,
                                })
                              : (this.manifest.totalDuration = f.duration)
                          },
                          start: function () {
                            !f.attributes || isNaN(f.attributes['TIME-OFFSET'])
                              ? this.trigger('warn', {
                                  message:
                                    'ignoring start declaration without appropriate attribute list',
                                })
                              : (this.manifest.start = {
                                  timeOffset: f.attributes['TIME-OFFSET'],
                                  precise: f.attributes.PRECISE,
                                })
                          },
                          'cue-out': function () {
                            q.cueOut = f.data
                          },
                          'cue-out-cont': function () {
                            q.cueOutCont = f.data
                          },
                          'cue-in': function () {
                            q.cueIn = f.data
                          },
                        })[f.tagType] || r
                      ).call(e)
                    },
                    uri: function () {
                      q.uri = f.uri
                      n.push(q)
                      !this.manifest.targetDuration ||
                        'duration' in q ||
                        (this.trigger('warn', {
                          message: 'defaulting segment duration to the target duration',
                        }),
                        (q.duration = this.manifest.targetDuration))
                      v && (q.key = v)
                      q.timeline = m
                      t && (q.map = t)
                      q = {}
                    },
                    comment: function () {},
                    custom: function () {
                      f.segment
                        ? ((q.custom = q.custom || {}), (q.custom[f.customType] = f.data))
                        : ((this.manifest.custom = this.manifest.custom || {}),
                          (this.manifest.custom[f.customType] = f.data))
                    },
                  })[f.type].call(e)
                })
                return a
              }
              lh(c, d)
              var b = c.prototype
              b.push = function (a) {
                this.lineStream.push(a)
              }
              b.end = function () {
                this.lineStream.push('\n')
              }
              b.addParser = function (a) {
                this.parseStream.addParser(a)
              }
              b.addTagMapper = function (a) {
                this.parseStream.addTagMapper(a)
              }
              return c
            })(mh),
            pp = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i,
            qp = /^application\/dash\+xml/i,
            Tk = function (d) {
              return pp.test(d)
                ? 'hls'
                : qp.test(d)
                  ? 'dash'
                  : 'application/vnd.videojs.vhs+json' === d
                    ? 'vhs-json'
                    : null
            },
            rp =
              'undefined' !== typeof window
                ? window
                : 'undefined' !== typeof Eb
                  ? Eb
                  : 'undefined' !== typeof self
                    ? self
                    : {},
            sp = {
              lt: '<',
              gt: '>',
              amp: '&',
              quot: '"',
              apos: "'",
              Agrave: '\u00c0',
              Aacute: '\u00c1',
              Acirc: '\u00c2',
              Atilde: '\u00c3',
              Auml: '\u00c4',
              Aring: '\u00c5',
              AElig: '\u00c6',
              Ccedil: '\u00c7',
              Egrave: '\u00c8',
              Eacute: '\u00c9',
              Ecirc: '\u00ca',
              Euml: '\u00cb',
              Igrave: '\u00cc',
              Iacute: '\u00cd',
              Icirc: '\u00ce',
              Iuml: '\u00cf',
              ETH: '\u00d0',
              Ntilde: '\u00d1',
              Ograve: '\u00d2',
              Oacute: '\u00d3',
              Ocirc: '\u00d4',
              Otilde: '\u00d5',
              Ouml: '\u00d6',
              Oslash: '\u00d8',
              Ugrave: '\u00d9',
              Uacute: '\u00da',
              Ucirc: '\u00db',
              Uuml: '\u00dc',
              Yacute: '\u00dd',
              THORN: '\u00de',
              szlig: '\u00df',
              agrave: '\u00e0',
              aacute: '\u00e1',
              acirc: '\u00e2',
              atilde: '\u00e3',
              auml: '\u00e4',
              aring: '\u00e5',
              aelig: '\u00e6',
              ccedil: '\u00e7',
              egrave: '\u00e8',
              eacute: '\u00e9',
              ecirc: '\u00ea',
              euml: '\u00eb',
              igrave: '\u00ec',
              iacute: '\u00ed',
              icirc: '\u00ee',
              iuml: '\u00ef',
              eth: '\u00f0',
              ntilde: '\u00f1',
              ograve: '\u00f2',
              oacute: '\u00f3',
              ocirc: '\u00f4',
              otilde: '\u00f5',
              ouml: '\u00f6',
              oslash: '\u00f8',
              ugrave: '\u00f9',
              uacute: '\u00fa',
              ucirc: '\u00fb',
              uuml: '\u00fc',
              yacute: '\u00fd',
              thorn: '\u00fe',
              yuml: '\u00ff',
              nbsp: '\u00a0',
              iexcl: '\u00a1',
              cent: '\u00a2',
              pound: '\u00a3',
              curren: '\u00a4',
              yen: '\u00a5',
              brvbar: '\u00a6',
              sect: '\u00a7',
              uml: '\u00a8',
              copy: '\u00a9',
              ordf: '\u00aa',
              laquo: '\u00ab',
              not: '\u00ac',
              shy: '\u00ad\u00ad',
              reg: '\u00ae',
              macr: '\u00af',
              deg: '\u00b0',
              plusmn: '\u00b1',
              sup2: '\u00b2',
              sup3: '\u00b3',
              acute: '\u00b4',
              micro: '\u00b5',
              para: '\u00b6',
              middot: '\u00b7',
              cedil: '\u00b8',
              sup1: '\u00b9',
              ordm: '\u00ba',
              raquo: '\u00bb',
              frac14: '\u00bc',
              frac12: '\u00bd',
              frac34: '\u00be',
              iquest: '\u00bf',
              times: '\u00d7',
              divide: '\u00f7',
              forall: '\u2200',
              part: '\u2202',
              exist: '\u2203',
              empty: '\u2205',
              nabla: '\u2207',
              isin: '\u2208',
              notin: '\u2209',
              ni: '\u220b',
              prod: '\u220f',
              sum: '\u2211',
              minus: '\u2212',
              lowast: '\u2217',
              radic: '\u221a',
              prop: '\u221d',
              infin: '\u221e',
              ang: '\u2220',
              and: '\u2227',
              or: '\u2228',
              cap: '\u2229',
              cup: '\u222a',
              int: '\u222b',
              there4: '\u2234',
              sim: '\u223c',
              cong: '\u2245',
              asymp: '\u2248',
              ne: '\u2260',
              equiv: '\u2261',
              le: '\u2264',
              ge: '\u2265',
              sub: '\u2282',
              sup: '\u2283',
              nsub: '\u2284',
              sube: '\u2286',
              supe: '\u2287',
              oplus: '\u2295',
              otimes: '\u2297',
              perp: '\u22a5',
              sdot: '\u22c5',
              Alpha: '\u0391',
              Beta: '\u0392',
              Gamma: '\u0393',
              Delta: '\u0394',
              Epsilon: '\u0395',
              Zeta: '\u0396',
              Eta: '\u0397',
              Theta: '\u0398',
              Iota: '\u0399',
              Kappa: '\u039a',
              Lambda: '\u039b',
              Mu: '\u039c',
              Nu: '\u039d',
              Xi: '\u039e',
              Omicron: '\u039f',
              Pi: '\u03a0',
              Rho: '\u03a1',
              Sigma: '\u03a3',
              Tau: '\u03a4',
              Upsilon: '\u03a5',
              Phi: '\u03a6',
              Chi: '\u03a7',
              Psi: '\u03a8',
              Omega: '\u03a9',
              alpha: '\u03b1',
              beta: '\u03b2',
              gamma: '\u03b3',
              delta: '\u03b4',
              epsilon: '\u03b5',
              zeta: '\u03b6',
              eta: '\u03b7',
              theta: '\u03b8',
              iota: '\u03b9',
              kappa: '\u03ba',
              lambda: '\u03bb',
              mu: '\u03bc',
              nu: '\u03bd',
              xi: '\u03be',
              omicron: '\u03bf',
              pi: '\u03c0',
              rho: '\u03c1',
              sigmaf: '\u03c2',
              sigma: '\u03c3',
              tau: '\u03c4',
              upsilon: '\u03c5',
              phi: '\u03c6',
              chi: '\u03c7',
              psi: '\u03c8',
              omega: '\u03c9',
              thetasym: '\u03d1',
              upsih: '\u03d2',
              piv: '\u03d6',
              OElig: '\u0152',
              oelig: '\u0153',
              Scaron: '\u0160',
              scaron: '\u0161',
              Yuml: '\u0178',
              fnof: '\u0192',
              circ: '\u02c6',
              tilde: '\u02dc',
              ensp: '\u2002',
              emsp: '\u2003',
              thinsp: '\u2009',
              zwnj: '\u200c',
              zwj: '\u200d',
              lrm: '\u200e',
              rlm: '\u200f',
              ndash: '\u2013',
              mdash: '\u2014',
              lsquo: '\u2018',
              rsquo: '\u2019',
              sbquo: '\u201a',
              ldquo: '\u201c',
              rdquo: '\u201d',
              bdquo: '\u201e',
              dagger: '\u2020',
              Dagger: '\u2021',
              bull: '\u2022',
              hellip: '\u2026',
              permil: '\u2030',
              prime: '\u2032',
              Prime: '\u2033',
              lsaquo: '\u2039',
              rsaquo: '\u203a',
              oline: '\u203e',
              euro: '\u20ac',
              trade: '\u2122',
              larr: '\u2190',
              uarr: '\u2191',
              rarr: '\u2192',
              darr: '\u2193',
              harr: '\u2194',
              crarr: '\u21b5',
              lceil: '\u2308',
              rceil: '\u2309',
              lfloor: '\u230a',
              rfloor: '\u230b',
              loz: '\u25ca',
              spades: '\u2660',
              clubs: '\u2663',
              hearts: '\u2665',
              diams: '\u2666',
            },
            nh =
              /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,
            Uk = new RegExp(
              '[\\-\\.0-9' + nh.source.slice(1, -1) + '\\u00B7\\u0300-\\u036F\\u203F-\\u2040]',
            ),
            Vk = new RegExp('^' + nh.source + Uk.source + '*(?::' + nh.source + Uk.source + '*)?$')
          hj.prototype = {
            parse: function (d, c, b) {
              var a = this.domBuilder
              a.startDocument()
              var e = c,
                n = (c = {}),
                q
              for (q in e) n[q] = e[q]
              Zn(d, c, b, a, this.errorHandler)
              a.endDocument()
            },
          }
          ij.prototype = {
            setTagName: function (d) {
              if (!Vk.test(d)) throw Error('invalid tagName:' + d)
              this.tagName = d
            },
            add: function (d, c, b) {
              if (!Vk.test(d)) throw Error('invalid attribute:' + d)
              this[this.length++] = { qName: d, value: c, offset: b }
            },
            length: 0,
            getLocalName: function (d) {
              return this[d].localName
            },
            getLocator: function (d) {
              return this[d].locator
            },
            getQName: function (d) {
              return this[d].qName
            },
            getURI: function (d) {
              return this[d].uri
            },
            getValue: function (d) {
              return this[d].value
            },
          }
          var Fb = {},
            dc = (Fb.ELEMENT_NODE = 1),
            pd = (Fb.ATTRIBUTE_NODE = 2),
            Qe = (Fb.TEXT_NODE = 3),
            Aj = (Fb.CDATA_SECTION_NODE = 4),
            Ej = (Fb.ENTITY_REFERENCE_NODE = 5),
            tp = (Fb.ENTITY_NODE = 6),
            Dj = (Fb.PROCESSING_INSTRUCTION_NODE = 7),
            Bj = (Fb.COMMENT_NODE = 8),
            zj = (Fb.DOCUMENT_NODE = 9),
            Cj = (Fb.DOCUMENT_TYPE_NODE = 10),
            uc = (Fb.DOCUMENT_FRAGMENT_NODE = 11),
            up = (Fb.NOTATION_NODE = 12),
            ub = {},
            ib = {}
          ub.INDEX_SIZE_ERR = ((ib[1] = 'Index size error'), 1)
          ub.DOMSTRING_SIZE_ERR = ((ib[2] = 'DOMString size error'), 2)
          var vp = (ub.HIERARCHY_REQUEST_ERR = ((ib[3] = 'Hierarchy request error'), 3))
          ub.WRONG_DOCUMENT_ERR = ((ib[4] = 'Wrong document'), 4)
          ub.INVALID_CHARACTER_ERR = ((ib[5] = 'Invalid character'), 5)
          ub.NO_DATA_ALLOWED_ERR = ((ib[6] = 'No data allowed'), 6)
          ub.NO_MODIFICATION_ALLOWED_ERR = ((ib[7] = 'No modification allowed'), 7)
          var fo = (ub.NOT_FOUND_ERR = ((ib[8] = 'Not found'), 8))
          ub.NOT_SUPPORTED_ERR = ((ib[9] = 'Not supported'), 9)
          var Wk = (ub.INUSE_ATTRIBUTE_ERR = ((ib[10] = 'Attribute in use'), 10))
          ub.INVALID_STATE_ERR = ((ib[11] = 'Invalid state'), 11)
          ub.SYNTAX_ERR = ((ib[12] = 'Syntax error'), 12)
          ub.INVALID_MODIFICATION_ERR = ((ib[13] = 'Invalid modification'), 13)
          ub.NAMESPACE_ERR = ((ib[14] = 'Invalid namespace'), 14)
          ub.INVALID_ACCESS_ERR = ((ib[15] = 'Invalid access'), 15)
          ld.prototype = Error.prototype
          Td(ub, ld)
          Hc.prototype = {
            length: 0,
            item: function (d) {
              return this[d] || null
            },
            toString: function (d, c) {
              for (var b = [], a = 0; a < this.length; a++) od(this[a], b, d, c)
              return b.join('')
            },
          }
          md.prototype.item = function (d) {
            qg(this)
            return this[d]
          }
          Db(md, Hc)
          Ne.prototype = {
            length: 0,
            item: Hc.prototype.item,
            getNamedItem: function (d) {
              for (var c = this.length; c--; ) {
                var b = this[c]
                if (b.nodeName == d) return b
              }
            },
            setNamedItem: function (d) {
              var c = d.ownerElement
              if (c && c != this._ownerElement) throw new ld(Wk)
              c = this.getNamedItem(d.nodeName)
              nj(this._ownerElement, this, d, c)
              return c
            },
            setNamedItemNS: function (d) {
              var c = d.ownerElement
              if (c && c != this._ownerElement) throw new ld(Wk)
              c = this.getNamedItemNS(d.namespaceURI, d.localName)
              nj(this._ownerElement, this, d, c)
              return c
            },
            removeNamedItem: function (d) {
              d = this.getNamedItem(d)
              pj(this._ownerElement, this, d)
              return d
            },
            removeNamedItemNS: function (d, c) {
              d = this.getNamedItemNS(d, c)
              pj(this._ownerElement, this, d)
              return d
            },
            getNamedItemNS: function (d, c) {
              for (var b = this.length; b--; ) {
                var a = this[b]
                if (a.localName == c && a.namespaceURI == d) return a
              }
              return null
            },
          }
          qj.prototype = {
            hasFeature: function (d, c) {
              return (d = this._features[d.toLowerCase()]) && (!c || c in d) ? !0 : !1
            },
            createDocument: function (d, c, b) {
              var a = new Vd()
              a.implementation = this
              a.childNodes = new Hc()
              ;(a.doctype = b) && a.appendChild(b)
              c && ((d = a.createElementNS(d, c)), a.appendChild(d))
              return a
            },
            createDocumentType: function (d, c, b) {
              var a = new vg()
              a.name = d
              a.nodeName = d
              a.publicId = c
              a.systemId = b
              return a
            },
          }
          yb.prototype = {
            firstChild: null,
            lastChild: null,
            previousSibling: null,
            nextSibling: null,
            attributes: null,
            parentNode: null,
            childNodes: null,
            ownerDocument: null,
            nodeValue: null,
            namespaceURI: null,
            prefix: null,
            localName: null,
            insertBefore: function (d, c) {
              return tj(this, d, c)
            },
            replaceChild: function (d, c) {
              this.insertBefore(d, c)
              c && this.removeChild(c)
            },
            removeChild: function (d) {
              return sj(this, d)
            },
            appendChild: function (d) {
              return this.insertBefore(d, null)
            },
            hasChildNodes: function () {
              return null != this.firstChild
            },
            cloneNode: function (d) {
              return yg(this.ownerDocument || this, this, d)
            },
            normalize: function () {
              for (var d = this.firstChild; d; ) {
                var c = d.nextSibling
                c && c.nodeType == Qe && d.nodeType == Qe
                  ? (this.removeChild(c), d.appendData(c.data))
                  : (d.normalize(), (d = c))
              }
            },
            isSupported: function (d, c) {
              return this.ownerDocument.implementation.hasFeature(d, c)
            },
            hasAttributes: function () {
              return 0 < this.attributes.length
            },
            lookupPrefix: function (d) {
              for (var c = this; c; ) {
                var b = c._nsMap
                if (b) for (var a in b) if (b[a] == d) return a
                c = c.nodeType == pd ? c.ownerDocument : c.parentNode
              }
              return null
            },
            lookupNamespaceURI: function (d) {
              for (var c = this; c; ) {
                var b = c._nsMap
                if (b && d in b) return b[d]
                c = c.nodeType == pd ? c.ownerDocument : c.parentNode
              }
              return null
            },
            isDefaultNamespace: function (d) {
              return null == this.lookupPrefix(d)
            },
          }
          Td(Fb, yb)
          Td(Fb, yb.prototype)
          Vd.prototype = {
            nodeName: '#document',
            nodeType: zj,
            doctype: null,
            documentElement: null,
            _inc: 1,
            insertBefore: function (d, c) {
              if (d.nodeType == uc) {
                for (var b = d.firstChild; b; ) {
                  var a = b.nextSibling
                  this.insertBefore(b, c)
                  b = a
                }
                return d
              }
              null == this.documentElement && d.nodeType == dc && (this.documentElement = d)
              return tj(this, d, c), (d.ownerDocument = this), d
            },
            removeChild: function (d) {
              this.documentElement == d && (this.documentElement = null)
              return sj(this, d)
            },
            importNode: function (d, c) {
              return Fj(this, d, c)
            },
            getElementById: function (d) {
              var c = null
              Ud(this.documentElement, function (b) {
                if (b.nodeType == dc && b.getAttribute('id') == d) return (c = b), !0
              })
              return c
            },
            getElementsByClassName: function (d) {
              var c = new RegExp('(^|\\s)' + d + '(\\s|$)')
              return new md(this, function (b) {
                var a = []
                Ud(b.documentElement, function (e) {
                  e !== b && e.nodeType == dc && c.test(e.getAttribute('class')) && a.push(e)
                })
                return a
              })
            },
            createElement: function (d) {
              var c = new nd()
              c.ownerDocument = this
              c.nodeName = d
              c.tagName = d
              c.childNodes = new Hc()
              return ((c.attributes = new Ne())._ownerElement = c)
            },
            createDocumentFragment: function () {
              var d = new Pe()
              d.ownerDocument = this
              d.childNodes = new Hc()
              return d
            },
            createTextNode: function (d) {
              var c = new sg()
              c.ownerDocument = this
              c.appendData(d)
              return c
            },
            createComment: function (d) {
              var c = new tg()
              c.ownerDocument = this
              c.appendData(d)
              return c
            },
            createCDATASection: function (d) {
              var c = new ug()
              c.ownerDocument = this
              c.appendData(d)
              return c
            },
            createProcessingInstruction: function (d, c) {
              var b = new xg()
              b.ownerDocument = this
              b.tagName = b.target = d
              b.nodeValue = b.data = c
              return b
            },
            createAttribute: function (d) {
              var c = new Oe()
              c.ownerDocument = this
              c.name = d
              c.nodeName = d
              c.localName = d
              c.specified = !0
              return c
            },
            createEntityReference: function (d) {
              var c = new wg()
              c.ownerDocument = this
              c.nodeName = d
              return c
            },
            createElementNS: function (d, c) {
              var b = new nd(),
                a = c.split(':'),
                e = (b.attributes = new Ne())
              b.childNodes = new Hc()
              b.ownerDocument = this
              b.nodeName = c
              b.tagName = c
              b.namespaceURI = d
              2 == a.length ? ((b.prefix = a[0]), (b.localName = a[1])) : (b.localName = c)
              return (e._ownerElement = b)
            },
            createAttributeNS: function (d, c) {
              var b = new Oe(),
                a = c.split(':')
              b.ownerDocument = this
              b.nodeName = c
              b.name = c
              b.namespaceURI = d
              b.specified = !0
              2 == a.length ? ((b.prefix = a[0]), (b.localName = a[1])) : (b.localName = c)
              return b
            },
          }
          Db(Vd, yb)
          nd.prototype = {
            nodeType: dc,
            hasAttribute: function (d) {
              return null != this.getAttributeNode(d)
            },
            getAttribute: function (d) {
              return ((d = this.getAttributeNode(d)) && d.value) || ''
            },
            getAttributeNode: function (d) {
              return this.attributes.getNamedItem(d)
            },
            setAttribute: function (d, c) {
              d = this.ownerDocument.createAttribute(d)
              d.value = d.nodeValue = '' + c
              this.setAttributeNode(d)
            },
            removeAttribute: function (d) {
              ;(d = this.getAttributeNode(d)) && this.removeAttributeNode(d)
            },
            appendChild: function (d) {
              if (d.nodeType === uc) return this.insertBefore(d, null)
              var c = d.parentNode
              c && c.removeChild(d)
              c = this.lastChild
              d.parentNode = this
              d.previousSibling = c
              d.nextSibling = null
              c ? (c.nextSibling = d) : (this.firstChild = d)
              this.lastChild = d
              rg(this.ownerDocument, this, d)
              return d
            },
            setAttributeNode: function (d) {
              return this.attributes.setNamedItem(d)
            },
            setAttributeNodeNS: function (d) {
              return this.attributes.setNamedItemNS(d)
            },
            removeAttributeNode: function (d) {
              return this.attributes.removeNamedItem(d.nodeName)
            },
            removeAttributeNS: function (d, c) {
              ;(d = this.getAttributeNodeNS(d, c)) && this.removeAttributeNode(d)
            },
            hasAttributeNS: function (d, c) {
              return null != this.getAttributeNodeNS(d, c)
            },
            getAttributeNS: function (d, c) {
              return ((d = this.getAttributeNodeNS(d, c)) && d.value) || ''
            },
            setAttributeNS: function (d, c, b) {
              d = this.ownerDocument.createAttributeNS(d, c)
              d.value = d.nodeValue = '' + b
              this.setAttributeNode(d)
            },
            getAttributeNodeNS: function (d, c) {
              return this.attributes.getNamedItemNS(d, c)
            },
            getElementsByTagName: function (d) {
              return new md(this, function (c) {
                var b = []
                Ud(c, function (a) {
                  a === c || a.nodeType != dc || ('*' !== d && a.tagName != d) || b.push(a)
                })
                return b
              })
            },
            getElementsByTagNameNS: function (d, c) {
              return new md(this, function (b) {
                var a = []
                Ud(b, function (e) {
                  e === b ||
                    e.nodeType !== dc ||
                    ('*' !== d && e.namespaceURI !== d) ||
                    ('*' !== c && e.localName != c) ||
                    a.push(e)
                })
                return a
              })
            },
          }
          Vd.prototype.getElementsByTagName = nd.prototype.getElementsByTagName
          Vd.prototype.getElementsByTagNameNS = nd.prototype.getElementsByTagNameNS
          Db(nd, yb)
          Oe.prototype.nodeType = pd
          Db(Oe, yb)
          Wd.prototype = {
            data: '',
            substringData: function (d, c) {
              return this.data.substring(d, d + c)
            },
            appendData: function (d) {
              this.nodeValue = this.data = d = this.data + d
              this.length = d.length
            },
            insertData: function (d, c) {
              this.replaceData(d, 0, c)
            },
            appendChild: function (d) {
              throw Error(ib[vp])
            },
            deleteData: function (d, c) {
              this.replaceData(d, c, '')
            },
            replaceData: function (d, c, b) {
              var a = this.data.substring(0, d)
              d = this.data.substring(d + c)
              this.nodeValue = this.data = b = a + b + d
              this.length = b.length
            },
          }
          Db(Wd, yb)
          sg.prototype = {
            nodeName: '#text',
            nodeType: Qe,
            splitText: function (d) {
              var c = this.data,
                b = c.substring(d)
              this.data = this.nodeValue = c = c.substring(0, d)
              this.length = c.length
              d = this.ownerDocument.createTextNode(b)
              this.parentNode && this.parentNode.insertBefore(d, this.nextSibling)
              return d
            },
          }
          Db(sg, Wd)
          tg.prototype = { nodeName: '#comment', nodeType: Bj }
          Db(tg, Wd)
          ug.prototype = { nodeName: '#cdata-section', nodeType: Aj }
          Db(ug, Wd)
          vg.prototype.nodeType = Cj
          Db(vg, yb)
          uj.prototype.nodeType = up
          Db(uj, yb)
          vj.prototype.nodeType = tp
          Db(vj, yb)
          wg.prototype.nodeType = Ej
          Db(wg, yb)
          Pe.prototype.nodeName = '#document-fragment'
          Pe.prototype.nodeType = uc
          Db(Pe, yb)
          xg.prototype.nodeType = Dj
          Db(xg, yb)
          wj.prototype.serializeToString = function (d, c, b) {
            return xj.call(d, c, b)
          }
          yb.prototype.toString = xj
          try {
            if (Object.defineProperty) {
              var wp = function b(c) {
                switch (c.nodeType) {
                  case dc:
                  case uc:
                    var a = []
                    for (c = c.firstChild; c; )
                      7 !== c.nodeType && 8 !== c.nodeType && a.push(b(c)), (c = c.nextSibling)
                    return a.join('')
                  default:
                    return c.nodeValue
                }
              }
              Object.defineProperty(md.prototype, 'length', {
                get: function () {
                  qg(this)
                  return this.$$length
                },
              })
              Object.defineProperty(yb.prototype, 'textContent', {
                get: function () {
                  return wp(this)
                },
                set: function (c) {
                  switch (this.nodeType) {
                    case dc:
                    case uc:
                      for (; this.firstChild; ) this.removeChild(this.firstChild)
                      ;(c || String(c)) && this.appendChild(this.ownerDocument.createTextNode(c))
                      break
                    default:
                      this.nodeValue = this.value = this.data = c
                  }
                },
              })
              lj = function (c, b, a) {
                c['doubleDollar' + b] = a
              }
            }
          } catch (d) {}
          var oh = y(function (d, c) {
            function b(m) {
              this.options = m || { locator: {} }
            }
            function a(m, l, f) {
              function g(w) {
                var A = m[w]
                !A &&
                  u &&
                  (A =
                    2 == m.length
                      ? function (H) {
                          m(w, H)
                        }
                      : m)
                k[w] =
                  (A &&
                    function (H) {
                      A('[xmldom ' + w + ']\t' + H + q(f))
                    }) ||
                  function () {}
              }
              if (!m) {
                if (l instanceof e) return l
                m = l
              }
              var k = {},
                u = m instanceof Function
              f = f || {}
              g('warning')
              g('error')
              g('fatalError')
              return k
            }
            function e() {
              this.cdata = !1
            }
            function n(m, l) {
              l.lineNumber = m.lineNumber
              l.columnNumber = m.columnNumber
            }
            function q(m) {
              if (m)
                return (
                  '\n@' +
                  (m.systemId || '') +
                  '#[line:' +
                  m.lineNumber +
                  ',col:' +
                  m.columnNumber +
                  ']'
                )
            }
            function t(m, l, f) {
              return 'string' == typeof m
                ? m.substr(l, f)
                : m.length >= l + f || l
                  ? new java.lang.String(m, l, f) + ''
                  : m
            }
            function v(m, l) {
              m.currentElement ? m.currentElement.appendChild(l) : m.doc.appendChild(l)
            }
            b.prototype.parseFromString = function (m, l) {
              var f = this.options,
                g = new r(),
                k = f.domBuilder || new e(),
                u = f.errorHandler,
                w = f.locator,
                A = f.xmlns || {},
                H = (l = /\/x?html?$/.test(l))
                  ? sp
                  : { lt: '<', gt: '>', amp: '&', quot: '"', apos: "'" }
              w && k.setDocumentLocator(w)
              g.errorHandler = a(u, k, w)
              g.domBuilder = f.domBuilder || k
              l && (A[''] = 'http://www.w3.org/1999/xhtml')
              A.xml = A.xml || 'http://www.w3.org/XML/1998/namespace'
              m && 'string' === typeof m
                ? g.parse(m, A, H)
                : g.errorHandler.error('invalid doc source')
              return k.doc
            }
            e.prototype = {
              startDocument: function () {
                this.doc = new p().createDocument(null, null, null)
                this.locator && (this.doc.documentURI = this.locator.systemId)
              },
              startElement: function (m, l, f, g) {
                var k = this.doc
                l = k.createElementNS(m, f || l)
                var u = g.length
                v(this, l)
                this.currentElement = l
                this.locator && n(this.locator, l)
                for (var w = 0; w < u; w++) {
                  m = g.getURI(w)
                  var A = g.getValue(w)
                  f = g.getQName(w)
                  m = k.createAttributeNS(m, f)
                  this.locator && n(g.getLocator(w), m)
                  m.value = m.nodeValue = A
                  l.setAttributeNode(m)
                }
              },
              endElement: function (m, l, f) {
                m = this.currentElement
                m.tagName
                this.currentElement = m.parentNode
              },
              startPrefixMapping: function (m, l) {},
              endPrefixMapping: function (m) {},
              processingInstruction: function (m, l) {
                m = this.doc.createProcessingInstruction(m, l)
                this.locator && n(this.locator, m)
                v(this, m)
              },
              ignorableWhitespace: function (m, l, f) {},
              characters: function (m, l, f) {
                if ((m = t.apply(this, arguments))) {
                  var g = this.cdata ? this.doc.createCDATASection(m) : this.doc.createTextNode(m)
                  this.currentElement
                    ? this.currentElement.appendChild(g)
                    : /^\s*$/.test(m) && this.doc.appendChild(g)
                  this.locator && n(this.locator, g)
                }
              },
              skippedEntity: function (m) {},
              endDocument: function () {
                this.doc.normalize()
              },
              setDocumentLocator: function (m) {
                if ((this.locator = m)) m.lineNumber = 0
              },
              comment: function (m, l, f) {
                m = t.apply(this, arguments)
                var g = this.doc.createComment(m)
                this.locator && n(this.locator, g)
                v(this, g)
              },
              startCDATA: function () {
                this.cdata = !0
              },
              endCDATA: function () {
                this.cdata = !1
              },
              startDTD: function (m, l, f) {
                var g = this.doc.implementation
                g &&
                  g.createDocumentType &&
                  ((m = g.createDocumentType(m, l, f)),
                  this.locator && n(this.locator, m),
                  v(this, m))
              },
              warning: function (m) {
                console.warn('[xmldom warning]\t' + m, q(this.locator))
              },
              error: function (m) {
                console.error('[xmldom error]\t' + m, q(this.locator))
              },
              fatalError: function (m) {
                console.error('[xmldom fatalError]\t' + m, q(this.locator))
                throw m
              },
            }
            'endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl'.replace(
              /\w+/g,
              function (m) {
                e.prototype[m] = function () {
                  return null
                }
              },
            )
            var r = hj,
              p = (c.DOMImplementation = qj)
            c.XMLSerializer = wj
            c.DOMParser = b
          })
          oh.DOMImplementation
          oh.XMLSerializer
          var xp = oh.DOMParser,
            Xk = function (d) {
              return !!d && 'object' === typeof d
            },
            Rb = function c() {
              for (var b = arguments.length, a = Array(b), e = 0; e < b; e++) a[e] = arguments[e]
              return a.reduce(function (n, q) {
                if ('object' !== typeof q) return n
                Object.keys(q).forEach(function (t) {
                  Array.isArray(n[t]) && Array.isArray(q[t])
                    ? (n[t] = n[t].concat(q[t]))
                    : Xk(n[t]) && Xk(q[t])
                      ? (n[t] = c(n[t], q[t]))
                      : (n[t] = q[t])
                })
                return n
              }, {})
            },
            yp = function (c) {
              return Object.keys(c).map(function (b) {
                return c[b]
              })
            },
            gf = function (c) {
              return c.reduce(function (b, a) {
                return b.concat(a)
              }, [])
            },
            Yk = function (c) {
              if (!c.length) return []
              for (var b = [], a = 0; a < c.length; a++) b.push(c[a])
              return b
            },
            zp = function (c, b) {
              return c.reduce(function (a, e, n) {
                e[b] && a.push(n)
                return a
              }, [])
            },
            he = function (c) {
              var b = c.baseUrl,
                a = c.source
              a = void 0 === a ? '' : a
              var e = c.range
              e = void 0 === e ? '' : e
              c = c.indexRange
              c = void 0 === c ? '' : c
              b = { uri: a, resolvedUri: lc((void 0 === b ? '' : b) || '', a) }
              if (e || c)
                (e = (e ? e : c).split('-')),
                  (a = parseInt(e[0], 10)),
                  (e = parseInt(e[1], 10)),
                  (b.byterange = { length: e - a + 1, offset: a })
              return b
            },
            Zk = function (c) {
              c && 'number' !== typeof c && (c = parseInt(c, 10))
              return isNaN(c) ? null : c
            },
            Ap = {
              static: function (c) {
                var b = c.duration,
                  a = c.timescale
                a = void 0 === a ? 1 : a
                var e = c.sourceDuration
                c = Zk(c.endNumber)
                return { start: 0, end: 'number' === typeof c ? c : Math.ceil(e / (b / a)) }
              },
              dynamic: function (c) {
                var b = c.NOW,
                  a = c.clientOffset,
                  e = c.availabilityStartTime,
                  n = c.timescale
                n = void 0 === n ? 1 : n
                var q = c.duration,
                  t = c.start,
                  v = void 0 === t ? 0 : t
                t = c.minimumUpdatePeriod
                var r = void 0 === t ? 0 : t
                t = c.timeShiftBufferDepth
                t = void 0 === t ? Infinity : t
                c = Zk(c.endNumber)
                b = (b + a) / 1e3
                e += v
                a = Math.ceil(((b + r - e) * n) / q)
                v = Math.floor(((b - e) * n) / q)
                return {
                  start: Math.max(0, Math.floor(((b - e - t) * n) / q)),
                  end: 'number' === typeof c ? c : Math.min(a, v),
                }
              },
            },
            Bp = function (c) {
              return function (b, a) {
                var e = c.duration,
                  n = c.timescale,
                  q = c.startNumber
                return {
                  number: (void 0 === q ? 1 : q) + b,
                  duration: e / (void 0 === n ? 1 : n),
                  timeline: c.periodIndex,
                  time: a * e,
                }
              }
            },
            ph = function (c) {
              var b = c.type,
                a = void 0 === b ? 'static' : b
              b = c.duration
              var e = c.timescale
              e = void 0 === e ? 1 : e
              var n = c.sourceDuration,
                q = Ap[a](c),
                t = q.end,
                v = []
              for (q = q.start; q < t; q++) v.push(q)
              c = v.map(Bp(c))
              'static' === a && ((a = c.length - 1), (c[a].duration = n - (b / e) * a))
              return c
            },
            $k = function (c) {
              var b = c.baseUrl,
                a = c.initialization,
                e = void 0 === a ? {} : a
              a = c.sourceDuration
              var n = c.indexRange,
                q = void 0 === n ? '' : n
              n = c.duration
              if (!b) throw Error('NO_BASE_URL')
              e = he({ baseUrl: b, source: e.sourceURL, range: e.range })
              b = he({ baseUrl: b, source: b, indexRange: q })
              b.map = e
              n
                ? ((c = ph(c)),
                  c.length && ((b.duration = c[0].duration), (b.timeline = c[0].timeline)))
                : a && ((b.duration = a), (b.timeline = 0))
              b.number = 0
              return [b]
            },
            qh = function (c, b, a) {
              var e = c.sidx.map ? c.sidx.map : null,
                n = c.sidx.duration,
                q = c.timeline || 0,
                t = c.sidx.byterange,
                v = t.offset + t.length
              t = b.timescale
              var r = b.references.filter(function (g) {
                  return 1 !== g.referenceType
                }),
                p = []
              v += b.firstOffset
              for (var m = 0; m < r.length; m++) {
                var l = b.references[m],
                  f = l.referencedSize
                l = $k({
                  baseUrl: a,
                  timescale: t,
                  timeline: q,
                  periodIndex: q,
                  duration: l.subsegmentDuration,
                  sourceDuration: n,
                  indexRange: v + '-' + (v + f - 1),
                })[0]
                e && (l.map = e)
                p.push(l)
                v += f
              }
              c.segments = p
              return c
            },
            al = function (c) {
              return yp(
                c.reduce(function (b, a) {
                  var e = a.attributes.id + (a.attributes.lang || '')
                  if (b[e]) {
                    var n
                    a.segments[0] && (a.segments[0].discontinuity = !0)
                    ;(n = b[e].segments).push.apply(n, a.segments)
                    a.attributes.contentProtection &&
                      (b[e].attributes.contentProtection = a.attributes.contentProtection)
                  } else b[e] = a
                  return b
                }, {}),
              ).map(function (b) {
                b.discontinuityStarts = zp(b.segments, 'discontinuity')
                return b
              })
            },
            rh = function (c, b) {
              void 0 === b && (b = {})
              if (!Object.keys(b).length) return c
              for (var a in c) {
                var e = c[a]
                if (e.sidx) {
                  var n = e.sidx.byterange
                  n = e.sidx.uri + '-' + (n.offset + '-' + (n.offset + n.length - 1))
                  n = b[n] && b[n].sidx
                  e.sidx && n && qh(e, n, e.sidx.resolvedUri)
                }
              }
              return c
            },
            Cp = function (c, b) {
              void 0 === b && (b = {})
              var a
              c = c.reduce(function (n, q) {
                var t = (q.attributes.role && q.attributes.role.value) || '',
                  v = q.attributes.lang || '',
                  r = 'main'
                v && (r = '' + q.attributes.lang + (t ? ' (' + t + ')' : ''))
                if (n[r] && n[r].playlists[0].attributes.BANDWIDTH > q.attributes.bandwidth)
                  return n
                var p,
                  m = q.attributes,
                  l = q.segments,
                  f = q.sidx,
                  g = {
                    attributes:
                      ((p = { NAME: m.id, BANDWIDTH: m.bandwidth, CODECS: m.codecs }),
                      (p['PROGRAM-ID'] = 1),
                      p),
                    uri: '',
                    endList: 'static' === (m.type || 'static'),
                    timeline: m.periodIndex,
                    resolvedUri: '',
                    targetDuration: m.duration,
                    segments: l,
                    mediaSequence: l.length ? l[0].number : 1,
                  }
                m.contentProtection && (g.contentProtection = m.contentProtection)
                f && (g.sidx = f)
                n[r] = {
                  language: v,
                  autoselect: !0,
                  default: 'main' === t,
                  playlists: rh([g], b),
                  uri: '',
                }
                'undefined' === typeof a && 'main' === t && ((a = q), (a['default'] = !0))
                return n
              }, {})
              if (!a) {
                var e = Object.keys(c)[0]
                c[e]['default'] = !0
              }
              return c
            },
            Dp = function (c, b) {
              void 0 === b && (b = {})
              return c.reduce(function (a, e) {
                var n = e.attributes.lang || 'text'
                if (a[n]) return a
                var q,
                  t = e.attributes
                e = e.segments
                'undefined' === typeof e &&
                  ((e = [
                    {
                      uri: t.baseUrl,
                      timeline: t.periodIndex,
                      resolvedUri: t.baseUrl || '',
                      duration: t.sourceDuration,
                      number: 0,
                    },
                  ]),
                  (t.duration = t.sourceDuration))
                var v = ((q = { NAME: t.id, BANDWIDTH: t.bandwidth }), (q['PROGRAM-ID'] = 1), q)
                t.codecs && (v.CODECS = t.codecs)
                a[n] = {
                  language: n,
                  default: !1,
                  autoselect: !1,
                  playlists: rh(
                    [
                      {
                        attributes: v,
                        uri: '',
                        endList: 'static' === (t.type || 'static'),
                        timeline: t.periodIndex,
                        resolvedUri: t.baseUrl || '',
                        targetDuration: t.duration,
                        segments: e,
                        mediaSequence: e.length ? e[0].number : 1,
                      },
                    ],
                    b,
                  ),
                  uri: '',
                }
                return a
              }, {})
            },
            Ep = function (c) {
              var b,
                a = c.attributes,
                e = c.segments
              c = c.sidx
              var n = {
                attributes:
                  ((b = {
                    NAME: a.id,
                    AUDIO: 'audio',
                    SUBTITLES: 'subs',
                    RESOLUTION: { width: a.width, height: a.height },
                    CODECS: a.codecs,
                    BANDWIDTH: a.bandwidth,
                  }),
                  (b['PROGRAM-ID'] = 1),
                  b),
                uri: '',
                endList: 'static' === (a.type || 'static'),
                timeline: a.periodIndex,
                resolvedUri: '',
                targetDuration: a.duration,
                segments: e,
                mediaSequence: e.length ? e[0].number : 1,
              }
              a.contentProtection && (n.contentProtection = a.contentProtection)
              c && (n.sidx = c)
              return n
            },
            Fp = function (c, b, a) {
              var e
              void 0 === a && (a = {})
              if (!c.length) return {}
              var n = c[0].attributes,
                q = n.sourceDuration,
                t = n.type
              t = void 0 === t ? 'static' : t
              var v = n.suggestedPresentationDelay
              n = n.minimumUpdatePeriod
              var r = al(
                  c.filter(function (l) {
                    l = l.attributes
                    return (
                      'video/mp4' === l.mimeType ||
                      'video/webm' === l.mimeType ||
                      'video' === l.contentType
                    )
                  }),
                ).map(Ep),
                p = al(
                  c.filter(function (l) {
                    l = l.attributes
                    return (
                      'audio/mp4' === l.mimeType ||
                      'audio/webm' === l.mimeType ||
                      'audio' === l.contentType
                    )
                  }),
                )
              c = c.filter(function (l) {
                l = l.attributes
                return 'text/vtt' === l.mimeType || 'text' === l.contentType
              })
              var m = {
                allowCache: !0,
                discontinuityStarts: [],
                segments: [],
                endList: !0,
                mediaGroups:
                  ((e = { AUDIO: {}, VIDEO: {} }),
                  (e['CLOSED-CAPTIONS'] = {}),
                  (e.SUBTITLES = {}),
                  e),
                uri: '',
                duration: q,
                playlists: rh(r, a),
              }
              0 <= n && (m.minimumUpdatePeriod = 1e3 * n)
              b && (m.locations = b)
              'dynamic' === t && (m.suggestedPresentationDelay = v)
              p.length && (m.mediaGroups.AUDIO.audio = Cp(p, a))
              c.length && (m.mediaGroups.SUBTITLES.subs = Dp(c, a))
              return m
            },
            bl = function (c, b) {
              var a = c.type
              a = void 0 === a ? 'static' : a
              var e = c.minimumUpdatePeriod
              e = void 0 === e ? 0 : e
              var n = c.media
              n = void 0 === n ? '' : n
              var q = c.sourceDuration,
                t = c.timescale
              t = void 0 === t ? 1 : t
              var v = c.startNumber
              v = void 0 === v ? 1 : v
              for (var r = c.periodIndex, p = [], m = -1, l = 0; l < b.length; l++) {
                var f = b[l],
                  g = f.d,
                  k = f.r || 0
                f = f.t || 0
                0 > m && (m = f)
                f && f > m && (m = f)
                if (0 > k)
                  if (((k = l + 1), k === b.length))
                    if ('dynamic' === a && 0 < e && 0 < n.indexOf('$Number$')) {
                      k = c.timescale
                      f = c.start
                      var u = c.minimumUpdatePeriod
                      k = Math.ceil(
                        (((c.NOW + c.clientOffset) / 1e3 +
                          (void 0 === u ? 0 : u) -
                          (c.availabilityStartTime + (void 0 === f ? 0 : f))) *
                          (void 0 === k ? 1 : k) -
                          m) /
                          g,
                      )
                    } else k = (q * t - m) / g
                  else k = (b[k].t - m) / g
                else k += 1
                k = v + p.length + k
                for (f = v + p.length; f < k; )
                  p.push({ number: f, duration: g / t, time: m, timeline: r }), (m += g), f++
              }
              return p
            },
            cl = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g,
            dl = function (c) {
              return function (b, a, e, n) {
                if ('doubleDollar' === b) return '$'
                if ('undefined' === typeof c[a]) return b
                b = '' + c[a]
                if ('RepresentationID' === a) return b
                n = e ? parseInt(n, 10) : 1
                return b.length >= n ? b : '' + Array(n - b.length + 1).join('0') + b
              }
            },
            Gp = function (c, b) {
              return c.duration || b
                ? c.duration
                  ? ph(c)
                  : bl(c, b)
                : [
                    {
                      number: c.startNumber || 1,
                      duration: c.sourceDuration,
                      time: 0,
                      timeline: c.periodIndex,
                    },
                  ]
            },
            Hp = function (c, b) {
              var a = { RepresentationID: c.id, Bandwidth: c.bandwidth || 0 },
                e = c.initialization
              e = void 0 === e ? { sourceURL: '', range: '' } : e
              var n = he({
                baseUrl: c.baseUrl,
                source: e.sourceURL.replace(cl, dl(a)),
                range: e.range,
              })
              return Gp(c, b).map(function (q) {
                a.Number = q.number
                a.Time = q.time
                var t = (c.media || '').replace(cl, dl(a))
                return {
                  uri: t,
                  timeline: q.timeline,
                  duration: q.duration,
                  resolvedUri: lc(c.baseUrl || '', t),
                  map: n,
                  number: q.number,
                }
              })
            },
            Ip = function (c, b) {
              var a = c.duration,
                e = c.segmentUrls
              e = void 0 === e ? [] : e
              if ((!a && !b) || (a && b)) throw Error('SEGMENT_TIME_UNSPECIFIED')
              var n = e.map(function (t) {
                  var v = c.baseUrl,
                    r = c.initialization
                  r = void 0 === r ? {} : r
                  r = he({ baseUrl: v, source: r.sourceURL, range: r.range })
                  t = he({ baseUrl: v, source: t.media, range: t.mediaRange })
                  t.map = r
                  return t
                }),
                q
              a && (q = ph(c))
              b && (q = bl(c, b))
              return q
                .map(function (t, v) {
                  if (n[v])
                    return (
                      (v = n[v]),
                      (v.timeline = t.timeline),
                      (v.duration = t.duration),
                      (v.number = t.number),
                      v
                    )
                })
                .filter(function (t) {
                  return t
                })
            },
            Jp = function (c) {
              var b = c.attributes
              c = c.segmentInfo
              if (c.template) {
                var a = Hp
                var e = Rb(b, c.template)
              } else
                c.base ? ((a = $k), (e = Rb(b, c.base))) : c.list && ((a = Ip), (e = Rb(b, c.list)))
              b = { attributes: b }
              if (!a) return b
              a = a(e, c.timeline)
              if (e.duration) {
                var n = e,
                  q = n.timescale
                e.duration = n.duration / (void 0 === q ? 1 : q)
              } else
                e.duration = a.length
                  ? a.reduce(function (t, v) {
                      return Math.max(t, Math.ceil(v.duration))
                    }, 0)
                  : 0
              b.attributes = e
              b.segments = a
              c.base && e.indexRange && ((b.sidx = a[0]), (b.segments = []))
              return b
            },
            eb = function (c, b) {
              return Yk(c.childNodes).filter(function (a) {
                return a.tagName === b
              })
            },
            sh = function (c) {
              return c.textContent.trim()
            },
            yd = function (c) {
              c =
                /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/.exec(
                  c,
                )
              if (!c) return 0
              c = c.slice(1)
              var b = c[1],
                a = c[2],
                e = c[3],
                n = c[4],
                q = c[5]
              return (
                31536e3 * parseFloat(c[0] || 0) +
                2592e3 * parseFloat(b || 0) +
                86400 * parseFloat(a || 0) +
                3600 * parseFloat(e || 0) +
                60 * parseFloat(n || 0) +
                parseFloat(q || 0)
              )
            },
            el = {
              mediaPresentationDuration: function (c) {
                return yd(c)
              },
              availabilityStartTime: function (c) {
                ;/^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/.test(c) && (c += 'Z')
                return Date.parse(c) / 1e3
              },
              minimumUpdatePeriod: function (c) {
                return yd(c)
              },
              suggestedPresentationDelay: function (c) {
                return yd(c)
              },
              type: function (c) {
                return c
              },
              timeShiftBufferDepth: function (c) {
                return yd(c)
              },
              start: function (c) {
                return yd(c)
              },
              width: function (c) {
                return parseInt(c, 10)
              },
              height: function (c) {
                return parseInt(c, 10)
              },
              bandwidth: function (c) {
                return parseInt(c, 10)
              },
              startNumber: function (c) {
                return parseInt(c, 10)
              },
              timescale: function (c) {
                return parseInt(c, 10)
              },
              duration: function (c) {
                var b = parseInt(c, 10)
                return isNaN(b) ? yd(c) : b
              },
              d: function (c) {
                return parseInt(c, 10)
              },
              t: function (c) {
                return parseInt(c, 10)
              },
              r: function (c) {
                return parseInt(c, 10)
              },
              DEFAULT: function (c) {
                return c
              },
            },
            Ab = function (c) {
              return c && c.attributes
                ? Yk(c.attributes).reduce(function (b, a) {
                    b[a.name] = (el[a.name] || el.DEFAULT)(a.value)
                    return b
                  }, {})
                : {}
            },
            Kp = {
              'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',
              'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',
              'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',
              'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',
            },
            hf = function (c, b) {
              return b.length
                ? gf(
                    c.map(function (a) {
                      return b.map(function (e) {
                        return lc(a, sh(e))
                      })
                    }),
                  )
                : c
            },
            th = function (c) {
              var b = eb(c, 'SegmentTemplate')[0],
                a = eb(c, 'SegmentList')[0],
                e =
                  a &&
                  eb(a, 'SegmentURL').map(function (v) {
                    return Rb({ tag: 'SegmentURL' }, Ab(v))
                  })
              c = eb(c, 'SegmentBase')[0]
              var n = a || b
              n = n && eb(n, 'SegmentTimeline')[0]
              var q = a || c || b
              q = q && eb(q, 'Initialization')[0]
              ;(b = b && Ab(b)) && q
                ? (b.initialization = q && Ab(q))
                : b && b.initialization && (b.initialization = { sourceURL: b.initialization })
              var t = {
                template: b,
                timeline:
                  n &&
                  eb(n, 'S').map(function (v) {
                    return Ab(v)
                  }),
                list: a && Rb(Ab(a), { segmentUrls: e, initialization: Ab(q) }),
                base: c && Rb(Ab(c), { initialization: Ab(q) }),
              }
              Object.keys(t).forEach(function (v) {
                t[v] || delete t[v]
              })
              return t
            },
            Lp = function (c, b, a) {
              return function (e) {
                var n = eb(e, 'BaseURL')
                n = hf(b, n)
                var q = Rb(c, Ab(e)),
                  t = th(e)
                return n.map(function (v) {
                  return { segmentInfo: Rb(a, t), attributes: Rb(q, { baseUrl: v }) }
                })
              }
            },
            Mp = function (c) {
              return c.reduce(function (b, a) {
                var e = Ab(a),
                  n = Kp[e.schemeIdUri]
                n &&
                  ((b[n] = { attributes: e }), (a = eb(a, 'cenc:pssh')[0])) &&
                  ((a = (a = sh(a)) && gj(a)), (b[n].pssh = a))
                return b
              }, {})
            },
            Np = function (c, b, a) {
              return function (e) {
                var n = Ab(e),
                  q = hf(b, eb(e, 'BaseURL')),
                  t = eb(e, 'Role')[0]
                t = { role: Ab(t) }
                n = Rb(c, n, t)
                t = Mp(eb(e, 'ContentProtection'))
                Object.keys(t).length && (n = Rb(n, { contentProtection: t }))
                t = th(e)
                e = eb(e, 'Representation')
                t = Rb(a, t)
                return gf(e.map(Lp(n, q, t)))
              }
            },
            Op = function (c, b) {
              return function (a, e) {
                var n = hf(b, eb(a, 'BaseURL')),
                  q = Ab(a)
                q = parseInt(q.id, 10)
                e = rp.isNaN(q) ? e : q
                e = Rb(c, { periodIndex: e })
                q = eb(a, 'AdaptationSet')
                a = th(a)
                return gf(q.map(Np(e, n, a)))
              }
            },
            fl = function (c) {
              if ('' === c) throw Error('DASH_EMPTY_MANIFEST')
              var b = new xp(),
                a
              try {
                var e =
                  (a = b.parseFromString(c, 'application/xml')) &&
                  'MPD' === a.documentElement.tagName
                    ? a.documentElement
                    : null
              } catch (n) {}
              if (!e || (e && 0 < e.getElementsByTagName('parsererror').length))
                throw Error('DASH_INVALID_XML')
              return e
            },
            Pp = function (c) {
              c = eb(c, 'UTCTiming')[0]
              if (!c) return null
              c = Ab(c)
              switch (c.schemeIdUri) {
                case 'urn:mpeg:dash:utc:http-head:2014':
                case 'urn:mpeg:dash:utc:http-head:2012':
                  c.method = 'HEAD'
                  break
                case 'urn:mpeg:dash:utc:http-xsdate:2014':
                case 'urn:mpeg:dash:utc:http-iso:2014':
                case 'urn:mpeg:dash:utc:http-xsdate:2012':
                case 'urn:mpeg:dash:utc:http-iso:2012':
                  c.method = 'GET'
                  break
                case 'urn:mpeg:dash:utc:direct:2014':
                case 'urn:mpeg:dash:utc:direct:2012':
                  c.method = 'DIRECT'
                  c.value = Date.parse(c.value)
                  break
                default:
                  throw Error('UNSUPPORTED_UTC_TIMING_SCHEME')
              }
              return c
            },
            gl = Math.pow(2, 32),
            za = function (c) {
              if (c instanceof Uint8Array) return c
              Array.isArray(c) ||
                ArrayBuffer.isView(c) ||
                c instanceof ArrayBuffer ||
                (c = 'number' !== typeof c || ('number' === typeof c && c !== c) ? 0 : [c])
              return new Uint8Array(
                (c && c.buffer) || c,
                (c && c.byteOffset) || 0,
                (c && c.byteLength) || 0,
              )
            },
            ob = Gc.BigInt || Number,
            uh = [
              ob('0x1'),
              ob('0x100'),
              ob('0x10000'),
              ob('0x1000000'),
              ob('0x100000000'),
              ob('0x10000000000'),
              ob('0x1000000000000'),
              ob('0x100000000000000'),
              ob('0x10000000000000000'),
            ],
            Qp = function (c, b) {
              var a = void 0 === b ? {} : b
              b = a.signed
              b = void 0 === b ? !1 : b
              a = a.le
              var e = void 0 === a ? !1 : a
              c = za(c)
              a = e ? 'reduce' : 'reduceRight'
              a = (c[a] ? c[a] : Array.prototype[a]).call(
                c,
                function (n, q, t) {
                  t = e ? t : Math.abs(t + 1 - c.length)
                  return n + ob(q) * uh[t]
                },
                ob(0),
              )
              b &&
                ((b = uh[c.length] / ob(2) - ob(1)), (a = ob(a)), a > b && (a = a - b - b - ob(2)))
              return Number(a)
            },
            Rp = function (c, b) {
              b = (void 0 === b ? {} : b).le
              b = void 0 === b ? !1 : b
              if (
                ('bigint' !== typeof c && 'number' !== typeof c) ||
                ('number' === typeof c && c !== c)
              )
                c = 0
              c = ob(c)
              for (
                var a = Math.ceil(c.toString(2).length / 8),
                  e = new Uint8Array(new ArrayBuffer(a)),
                  n = 0;
                n < a;
                n++
              ) {
                var q = b ? n : Math.abs(n + 1 - e.length)
                e[q] = Number((c / uh[n]) & ob(255))
                0 > c && ((e[q] = Math.abs(~e[q])), (e[q] -= 0 === n ? 1 : 2))
              }
              return e
            },
            hl = function (c, b) {
              'string' !== typeof c && c && 'function' === typeof c.toString && (c = c.toString())
              if ('string' !== typeof c) return new Uint8Array()
              b || (c = unescape(encodeURIComponent(c)))
              b = new Uint8Array(c.length)
              for (var a = 0; a < c.length; a++) b[a] = c.charCodeAt(a)
              return b
            },
            Sp = function () {
              for (var c = arguments.length, b = Array(c), a = 0; a < c; a++) b[a] = arguments[a]
              b = b.filter(function (q) {
                return q && (q.byteLength || q.length) && 'string' !== typeof q
              })
              if (1 >= b.length) return za(b[0])
              c = b.reduce(function (q, t, v) {
                return q + (t.byteLength || t.length)
              }, 0)
              var e = new Uint8Array(c),
                n = 0
              b.forEach(function (q) {
                q = za(q)
                e.set(q, n)
                n += q.byteLength
              })
              return e
            },
            Va = function (c, b, a) {
              a = void 0 === a ? {} : a
              var e = a.offset,
                n = void 0 === e ? 0 : e
              a = a.mask
              var q = void 0 === a ? [] : a
              c = za(c)
              b = za(b)
              a = b.every ? b.every : Array.prototype.every
              return (
                b.length &&
                c.length - n >= b.length &&
                a.call(b, function (t, v) {
                  return t === (q[v] ? q[v] & c[n + v] : c[n + v])
                })
              )
            },
            Tp = za([73, 68, 51]),
            ie = function e(b, a) {
              void 0 === a && (a = 0)
              b = za(b)
              if (10 > b.length - a || !Va(b, Tp, { offset: a })) return a
              var n = a
              var q = a
              void 0 === q && (q = 0)
              a = za(b)
              var t = (a[q + 6] << 21) | (a[q + 7] << 14) | (a[q + 8] << 7) | a[q + 9]
              a = (a[q + 5] & 16) >> 4 ? t + 20 : t + 10
              return e(b, n + a)
            },
            il = function (b) {
              return 'string' === typeof b ? hl(b) : b
            },
            Up = function (b) {
              return Array.isArray(b)
                ? b.map(function (a) {
                    return il(a)
                  })
                : [il(b)]
            },
            jl = function q(a, e, n) {
              void 0 === n && (n = !1)
              e = Up(e)
              a = za(a)
              var t = []
              if (!e.length) return t
              for (var v = 0; v < a.length; ) {
                var r = ((a[v] << 24) | (a[v + 1] << 16) | (a[v + 2] << 8) | a[v + 3]) >>> 0,
                  p = a.subarray(v + 4, v + 8)
                if (0 === r) break
                r = v + r
                if (r > a.length) {
                  if (n) break
                  r = a.length
                }
                v = a.subarray(v + 8, r)
                Va(p, e[0]) && (1 === e.length ? t.push(v) : t.push.apply(t, q(v, e.slice(1), n)))
                v = r
              }
              return t
            },
            kl = za([26, 69, 223, 163]),
            ll = za([66, 130])
          za([24, 83, 128, 103])
          za([21, 73, 169, 102])
          za([22, 84, 174, 107])
          za([174])
          za([215])
          za([35, 227, 131])
          za([174])
          za([131])
          za([136])
          za([134])
          za([99, 162])
          za([224])
          za([225])
          za([31, 67, 182, 117])
          za([231])
          za([42, 215, 177])
          za([160])
          za([155])
          za([161])
          za([163])
          var vh = [128, 64, 32, 16, 8, 4, 2, 1],
            jf = function (a, e, n, q) {
              void 0 === n && (n = !0)
              void 0 === q && (q = !1)
              var t = 1
              for (var v = 0; v < vh.length && !(a[e] & vh[v]); v++) t++
              v = a.subarray(e, e + t)
              n && ((v = Array.prototype.slice.call(a, e, e + t)), (v[0] ^= vh[t - 1]))
              return { length: t, value: Qp(v, { signed: q }), bytes: v }
            },
            ml = function n(e) {
              return 'string' === typeof e
                ? e.match(/.{1,2}/g).map(function (q) {
                    return n(q)
                  })
                : 'number' === typeof e
                  ? Rp(e)
                  : e
            },
            Vp = function (e) {
              return Array.isArray(e)
                ? e.map(function (n) {
                    return ml(n)
                  })
                : [ml(e)]
            },
            Wp = function v(n, q, t) {
              if (t >= q.length) return q.length
              var r = jf(q, t, !1)
              if (Va(n.bytes, r.bytes)) return t
              var p = jf(q, t + r.length)
              return v(n, q, t + p.length + p.value + r.length)
            },
            nl = function v(q, t) {
              t = Vp(t)
              q = za(q)
              var r = []
              if (!t.length) return r
              for (var p = 0; p < q.length; ) {
                var m = jf(q, p, !1),
                  l = jf(q, p + m.length),
                  f = p + m.length + l.length
                127 === l.value && ((l.value = Wp(m, q, f)), l.value !== q.length && (l.value -= f))
                f = q.subarray(f, f + l.value > q.length ? q.length : f + l.value)
                Va(t[0], m.bytes) && (1 === t.length ? r.push(f) : (r = r.concat(v(f, t.slice(1)))))
                p += m.length + l.length + f.length
              }
              return r
            },
            Xp = za([0, 0, 0, 1]),
            Yp = za([0, 0, 1]),
            Zp = za([0, 0, 3]),
            ol = function (q, t, v, r) {
              void 0 === r && (r = Infinity)
              q = za(q)
              v = [].concat(v)
              for (var p = 0, m, l = 0; p < q.length && (l < r || m); ) {
                var f = void 0
                Va(q.subarray(p), Xp) ? (f = 4) : Va(q.subarray(p), Yp) && (f = 3)
                if (f) {
                  l++
                  if (m) {
                    q = q.subarray(m, p)
                    t = []
                    for (v = 1; v < q.length - 2; )
                      Va(q.subarray(v, v + 3), Zp) && (t.push(v + 2), v++), v++
                    if (0 !== t.length) {
                      r = q.length - t.length
                      p = new Uint8Array(r)
                      for (v = m = 0; v < r; m++, v++) m === t[0] && (m++, t.shift()), (p[v] = q[m])
                      q = p
                    }
                    return q
                  }
                  var g = void 0
                  'h264' === t ? (g = q[p + f] & 31) : 'h265' === t && (g = (q[p + f] >> 1) & 63)
                  ;-1 !== v.indexOf(g) && (m = p + f)
                  p += f + ('h264' === t ? 1 : 2)
                } else p++
              }
              return q.subarray(0, 0)
            },
            Sb = {
              webm: za([119, 101, 98, 109]),
              matroska: za([109, 97, 116, 114, 111, 115, 107, 97]),
              flac: za([102, 76, 97, 67]),
              ogg: za([79, 103, 103, 83]),
              ac3: za([11, 119]),
              riff: za([82, 73, 70, 70]),
              avi: za([65, 86, 73]),
              wav: za([87, 65, 86, 69]),
              '3gp': za([102, 116, 121, 112, 51, 103]),
              mp4: za([102, 116, 121, 112]),
              fmp4: za([115, 116, 121, 112]),
              mov: za([102, 116, 121, 112, 113, 116]),
            },
            zd = {
              aac: function (q) {
                var t = ie(q)
                return Va(q, [255, 16], { offset: t, mask: [255, 22] })
              },
              mp3: function (q) {
                var t = ie(q)
                return Va(q, [255, 2], { offset: t, mask: [255, 6] })
              },
              webm: function (q) {
                q = nl(q, [kl, ll])[0]
                return Va(q, Sb.webm)
              },
              mkv: function (q) {
                q = nl(q, [kl, ll])[0]
                return Va(q, Sb.matroska)
              },
              mp4: function (q) {
                return (
                  !zd['3gp'](q) &&
                  !zd.mov(q) &&
                  (Va(q, Sb.mp4, { offset: 4 }) || Va(q, Sb.fmp4, { offset: 4 }))
                )
              },
              mov: function (q) {
                return Va(q, Sb.mov, { offset: 4 })
              },
              '3gp': function (q) {
                return Va(q, Sb['3gp'], { offset: 4 })
              },
              ac3: function (q) {
                var t = ie(q)
                return Va(q, Sb.ac3, { offset: t })
              },
              ts: function (q) {
                if (189 > q.length && 1 <= q.length) return 71 === q[0]
                for (var t = 0; t + 188 < q.length && 188 > t; ) {
                  if (71 === q[t] && 71 === q[t + 188]) return !0
                  t += 1
                }
                return !1
              },
              flac: function (q) {
                var t = ie(q)
                return Va(q, Sb.flac, { offset: t })
              },
              ogg: function (q) {
                return Va(q, Sb.ogg)
              },
              avi: function (q) {
                return Va(q, Sb.riff) && Va(q, Sb.avi, { offset: 8 })
              },
              wav: function (q) {
                return Va(q, Sb.riff) && Va(q, Sb.wav, { offset: 8 })
              },
              h264: function (q) {
                return ol(q, 'h264', 7, 3).length
              },
              h265: function (q) {
                return ol(q, 'h265', [32, 33], 3).length
              },
            },
            wh = Object.keys(zd)
              .filter(function (q) {
                return 'ts' !== q && 'h264' !== q && 'h265' !== q
              })
              .concat(['ts', 'h264', 'h265'])
          wh.forEach(function (q) {
            var t = zd[q]
            zd[q] = function (v) {
              return t(za(v))
            }
          })
          var $p = zd,
            xh = function (q) {
              q = za(q)
              for (var t = 0; t < wh.length; t++) {
                var v = wh[t]
                if ($p[v](q)) return v
              }
              return ''
            },
            Xc = function () {
              this.init = function () {
                var q = {}
                this.on = function (t, v) {
                  q[t] || (q[t] = [])
                  q[t] = q[t].concat(v)
                }
                this.off = function (t, v) {
                  if (!q[t]) return !1
                  v = q[t].indexOf(v)
                  q[t] = q[t].slice()
                  q[t].splice(v, 1)
                  return -1 < v
                }
                this.trigger = function (t) {
                  var v, r
                  if ((v = q[t]))
                    if (2 === arguments.length) {
                      var p = v.length
                      for (r = 0; r < p; ++r) v[r].call(this, arguments[1])
                    } else {
                      var m = []
                      for (r = 1; r < arguments.length; ++r) m.push(arguments[r])
                      p = v.length
                      for (r = 0; r < p; ++r) v[r].apply(this, m)
                    }
                }
                this.dispose = function () {
                  q = {}
                }
              }
            }
          Xc.prototype.pipe = function (q) {
            this.on('data', function (t) {
              q.push(t)
            })
            this.on('done', function (t) {
              q.flush(t)
            })
            this.on('partialdone', function (t) {
              q.partialFlush(t)
            })
            this.on('endedtimeline', function (t) {
              q.endTimeline(t)
            })
            this.on('reset', function (t) {
              q.reset(t)
            })
            return q
          }
          Xc.prototype.push = function (q) {
            this.trigger('data', q)
          }
          Xc.prototype.flush = function (q) {
            this.trigger('done', q)
          }
          Xc.prototype.partialFlush = function (q) {
            this.trigger('partialdone', q)
          }
          Xc.prototype.endTimeline = function (q) {
            this.trigger('endedtimeline', q)
          }
          Xc.prototype.reset = function (q) {
            this.trigger('reset', q)
          }
          var Kc = function (q, t) {
            var v = 1
            for (q > t && (v = -1); 4294967296 < Math.abs(t - q); ) q += 8589934592 * v
            return q
          }
          ;(function v(t) {
            var r, p
            v.prototype.init.call(this)
            this.type_ = t || 'shared'
            this.push = function (m) {
              if ('shared' === this.type_ || m.type === this.type_)
                void 0 === p && (p = m.dts),
                  (m.dts = Kc(m.dts, p)),
                  (m.pts = Kc(m.pts, p)),
                  (r = m.dts),
                  this.trigger('data', m)
            }
            this.flush = function () {
              p = r
              this.trigger('done')
            }
            this.endTimeline = function () {
              this.flush()
              this.trigger('endedtimeline')
            }
            this.discontinuity = function () {
              r = p = void 0
            }
            this.reset = function () {
              this.discontinuity()
              this.trigger('reset')
            }
          }).prototype = new Xc()
          var pl = function (t) {
              var v = t[1] & 31
              return (v = (v << 8) | t[2])
            },
            kf = function (t) {
              return !!(t[1] & 64)
            },
            lf = function (t) {
              var v = 0
              1 < (t[3] & 48) >>> 4 && (v += t[4] + 1)
              return v
            },
            yh = function (t) {
              switch (t) {
                case 5:
                  return 'slice_layer_without_partitioning_rbsp_idr'
                case 6:
                  return 'sei_rbsp'
                case 7:
                  return 'seq_parameter_set_rbsp'
                case 8:
                  return 'pic_parameter_set_rbsp'
                case 9:
                  return 'access_unit_delimiter_rbsp'
                default:
                  return null
              }
            },
            aq = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350],
            ql = function (t, v) {
              var r = (t[v + 6] << 21) | (t[v + 7] << 14) | (t[v + 8] << 7) | t[v + 9]
              t = t[v + 5]
              r = 0 <= r ? r : 0
              return (t & 16) >> 4 ? r + 20 : r + 10
            },
            bq = function p(v, r) {
              if (10 > v.length - r || 73 !== v[r] || 68 !== v[r + 1] || 51 !== v[r + 2]) return r
              r += ql(v, r)
              return p(v, r)
            },
            rl = function (v) {
              return (v[0] << 21) | (v[1] << 14) | (v[2] << 7) | v[3]
            },
            Ad = {
              isLikelyAacData: function (v) {
                var r = bq(v, 0)
                return (
                  v.length >= r + 2 &&
                  255 === (v[r] & 255) &&
                  240 === (v[r + 1] & 240) &&
                  16 === (v[r + 1] & 22)
                )
              },
              parseId3TagSize: ql,
              parseAdtsSize: function (v, r) {
                return (v[r + 3] & 6144) | (v[r + 4] << 3) | ((v[r + 5] & 224) >> 5)
              },
              parseType: function (v, r) {
                return 73 === v[r] && 68 === v[r + 1] && 51 === v[r + 2]
                  ? 'timed-metadata'
                  : v[r] & 1 && 240 === (v[r + 1] & 240)
                    ? 'audio'
                    : null
              },
              parseSampleRate: function (v) {
                for (var r = 0; r + 5 < v.length; )
                  if (255 !== v[r] || 240 !== (v[r + 1] & 246)) r++
                  else return aq[(v[r + 2] & 60) >>> 2]
                return null
              },
              parseAacTimestamp: function (v) {
                var r = 10
                v[5] & 64 && (r = r + 4 + rl(v.subarray(10, 14)))
                do {
                  var p = rl(v.subarray(r + 4, r + 8))
                  if (1 > p) break
                  var m = String.fromCharCode(v[r], v[r + 1], v[r + 2], v[r + 3])
                  if ('PRIV' === m) {
                    m = v.subarray(r + 10, r + p + 10)
                    for (var l = 0; l < m.byteLength; l++)
                      if (0 === m[l]) {
                        var f = unescape,
                          g,
                          k = m,
                          u = l,
                          w = ''
                        for (g = 0; g < u; g++) w += '%' + ('00' + k[g].toString(16)).slice(-2)
                        if ('com.apple.streaming.transportStreamTimestamp' === f(w))
                          return (
                            (v = m.subarray(l + 1)),
                            (r =
                              ((v[3] & 1) << 30) |
                              (v[4] << 22) |
                              (v[5] << 14) |
                              (v[6] << 6) |
                              (v[7] >>> 2)),
                            (r *= 4),
                            (r += v[7] & 3)
                          )
                        break
                      }
                  }
                  r += 10
                  r += p
                } while (r < v.byteLength)
                return null
              },
            }
          var Ya = {
            parseType: function (v, r) {
              v = pl(v)
              return 0 === v ? 'pat' : v === r ? 'pmt' : r ? 'pes' : null
            },
            parsePat: function (v) {
              var r = kf(v),
                p = 4 + lf(v)
              r && (p += v[p] + 1)
              return ((v[p + 10] & 31) << 8) | v[p + 11]
            },
            parsePmt: function (v) {
              var r = {},
                p = kf(v),
                m = 4 + lf(v)
              p && (m += v[m] + 1)
              if (v[m + 5] & 1) {
                p = 3 + (((v[m + 1] & 15) << 8) | v[m + 2]) - 4
                for (var l = 12 + (((v[m + 10] & 15) << 8) | v[m + 11]); l < p; ) {
                  var f = m + l
                  r[((v[f + 1] & 31) << 8) | v[f + 2]] = v[f]
                  l += (((v[f + 3] & 15) << 8) | v[f + 4]) + 5
                }
                return r
              }
            },
            parsePayloadUnitStartIndicator: kf,
            parsePesType: function (v, r) {
              v = pl(v)
              switch (r[v]) {
                case 27:
                  return 'video'
                case 15:
                  return 'audio'
                case 21:
                  return 'timed-metadata'
                default:
                  return null
              }
            },
            parsePesTime: function (v) {
              if (!kf(v)) return null
              var r = 4 + lf(v)
              if (r >= v.byteLength) return null
              var p = null
              var m = v[r + 7]
              m & 192 &&
                ((p = {}),
                (p.pts =
                  ((v[r + 9] & 14) << 27) |
                  ((v[r + 10] & 255) << 20) |
                  ((v[r + 11] & 254) << 12) |
                  ((v[r + 12] & 255) << 5) |
                  ((v[r + 13] & 254) >>> 3)),
                (p.pts *= 4),
                (p.pts += (v[r + 13] & 6) >>> 1),
                (p.dts = p.pts),
                m & 64 &&
                  ((p.dts =
                    ((v[r + 14] & 14) << 27) |
                    ((v[r + 15] & 255) << 20) |
                    ((v[r + 16] & 254) << 12) |
                    ((v[r + 17] & 255) << 5) |
                    ((v[r + 18] & 254) >>> 3)),
                  (p.dts *= 4),
                  (p.dts += (v[r + 18] & 6) >>> 1)))
              return p
            },
            videoPacketContainsKeyFrame: function (v) {
              var r = 4 + lf(v)
              v = v.subarray(r)
              for (var p = (r = 0), m = !1; p < v.byteLength - 3; p++)
                if (1 === v[p + 2]) {
                  r = p + 5
                  break
                }
              for (; r < v.byteLength; )
                switch (v[r]) {
                  case 0:
                    if (0 !== v[r - 1]) {
                      r += 2
                      break
                    } else if (0 !== v[r - 2]) {
                      r++
                      break
                    }
                    p + 3 !== r - 2 &&
                      ((p = yh(v[p + 3] & 31)),
                      'slice_layer_without_partitioning_rbsp_idr' === p && (m = !0))
                    do r++
                    while (1 !== v[r] && r < v.length)
                    p = r - 2
                    r += 3
                    break
                  case 1:
                    if (0 !== v[r - 1] || 0 !== v[r - 2]) {
                      r += 3
                      break
                    }
                    p = yh(v[p + 3] & 31)
                    'slice_layer_without_partitioning_rbsp_idr' === p && (m = !0)
                    p = r - 2
                    r += 3
                    break
                  default:
                    r += 3
                }
              ;(v = v.subarray(p)) &&
                3 < v.byteLength &&
                ((p = yh(v[3] & 31)), 'slice_layer_without_partitioning_rbsp_idr' === p && (m = !0))
              return m
            },
          }
          var sl = function (v, r, p) {
              for (var m = 0, l = 188, f, g, k, u = !1; l <= v.byteLength; )
                if (71 !== v[m] || (71 !== v[l] && l !== v.byteLength)) m++, l++
                else {
                  f = v.subarray(m, l)
                  g = Ya.parseType(f, r.pid)
                  switch (g) {
                    case 'pes':
                      if (
                        ((g = Ya.parsePesType(f, r.table)),
                        (k = Ya.parsePayloadUnitStartIndicator(f)),
                        'audio' === g && k && (f = Ya.parsePesTime(f)))
                      )
                        (f.type = 'audio'), p.audio.push(f), (u = !0)
                  }
                  if (u) break
                  m += 188
                  l += 188
                }
              l = v.byteLength
              m = l - 188
              for (u = !1; 0 <= m; )
                if (71 !== v[m] || (71 !== v[l] && l !== v.byteLength)) m--, l--
                else {
                  f = v.subarray(m, l)
                  g = Ya.parseType(f, r.pid)
                  switch (g) {
                    case 'pes':
                      if (
                        ((g = Ya.parsePesType(f, r.table)),
                        (k = Ya.parsePayloadUnitStartIndicator(f)),
                        'audio' === g && k && (f = Ya.parsePesTime(f)))
                      )
                        (f.type = 'audio'), p.audio.push(f), (u = !0)
                  }
                  if (u) break
                  m -= 188
                  l -= 188
                }
            },
            cq = function (v, r) {
              if (v.audio && v.audio.length) {
                var p = r
                if ('undefined' === typeof p || isNaN(p)) p = v.audio[0].dts
                v.audio.forEach(function (l) {
                  l.dts = Kc(l.dts, p)
                  l.pts = Kc(l.pts, p)
                  l.dtsTime = l.dts / 9e4
                  l.ptsTime = l.pts / 9e4
                })
              }
              if (v.video && v.video.length) {
                var m = r
                if ('undefined' === typeof m || isNaN(m)) m = v.video[0].dts
                v.video.forEach(function (l) {
                  l.dts = Kc(l.dts, m)
                  l.pts = Kc(l.pts, m)
                  l.dtsTime = l.dts / 9e4
                  l.ptsTime = l.pts / 9e4
                })
                v.firstKeyFrame &&
                  ((v = v.firstKeyFrame),
                  (v.dts = Kc(v.dts, m)),
                  (v.pts = Kc(v.pts, m)),
                  (v.dtsTime = v.dts / 9e4),
                  (v.ptsTime = v.pts / 9e4))
              }
            },
            dq = {
              inspect: function (v, r) {
                if (Ad.isLikelyAacData(v))
                  a: {
                    for (var p = !1, m = 0, l = null, f = null, g, k = 0, u; 3 <= v.length - k; ) {
                      switch (Ad.parseType(v, k)) {
                        case 'timed-metadata':
                          if (10 > v.length - k) {
                            p = !0
                            break
                          }
                          g = Ad.parseId3TagSize(v, k)
                          if (g > v.length) {
                            p = !0
                            break
                          }
                          null === f && ((u = v.subarray(k, k + g)), (f = Ad.parseAacTimestamp(u)))
                          k += g
                          break
                        case 'audio':
                          if (7 > v.length - k) {
                            p = !0
                            break
                          }
                          g = Ad.parseAdtsSize(v, k)
                          if (g > v.length) {
                            p = !0
                            break
                          }
                          null === l && ((u = v.subarray(k, k + g)), (l = Ad.parseSampleRate(u)))
                          m++
                          k += g
                          break
                        default:
                          k++
                      }
                      if (p) {
                        v = null
                        break a
                      }
                    }
                    null === l || null === f
                      ? (v = null)
                      : ((v = 9e4 / l),
                        (v = {
                          audio: [
                            { type: 'audio', dts: f, pts: f },
                            { type: 'audio', dts: f + 1024 * m * v, pts: f + 1024 * m * v },
                          ],
                        }))
                  }
                else {
                  m = { pid: null, table: null }
                  f = {}
                  l = 0
                  for (g = 188; g < v.byteLength; )
                    if (71 === v[l] && 71 === v[g]) {
                      k = v.subarray(l, g)
                      u = Ya.parseType(k, m.pid)
                      switch (u) {
                        case 'pat':
                          m.pid || (m.pid = Ya.parsePat(k))
                          break
                        case 'pmt':
                          m.table || (m.table = Ya.parsePmt(k))
                      }
                      if (m.pid && m.table) break
                      l += 188
                      g += 188
                    } else l++, g++
                  for (p in m.table)
                    if (m.table.hasOwnProperty(p))
                      switch (m.table[p]) {
                        case 27:
                          f.video = []
                          var w
                          g = v
                          k = m
                          u = f
                          var A = 0,
                            H = 188,
                            R = !1,
                            W = []
                          for (w = 0; H < g.byteLength; )
                            if (71 === g[A] && 71 === g[H]) {
                              l = g.subarray(A, H)
                              var M = Ya.parseType(l, k.pid)
                              switch (M) {
                                case 'pes':
                                  var T = Ya.parsePesType(l, k.table)
                                  M = Ya.parsePayloadUnitStartIndicator(l)
                                  if (
                                    'video' === T &&
                                    (M &&
                                      !R &&
                                      (T = Ya.parsePesTime(l)) &&
                                      ((T.type = 'video'), u.video.push(T), (R = !0)),
                                    !u.firstKeyFrame)
                                  ) {
                                    if (M && 0 !== w) {
                                      T = new Uint8Array(w)
                                      for (M = 0; W.length; )
                                        (w = W.shift()), T.set(w, M), (M += w.byteLength)
                                      Ya.videoPacketContainsKeyFrame(T) &&
                                        ((w = Ya.parsePesTime(T))
                                          ? ((u.firstKeyFrame = w),
                                            (u.firstKeyFrame.type = 'video'))
                                          : console.warn(
                                              'Failed to extract PTS/DTS from PES at first keyframe. This could be an unusual TS segment, or else mux.js did not parse your TS segment correctly. If you know your TS segments do contain PTS/DTS on keyframes please file a bug report! You can try ffprobe to double check for yourself.',
                                            ))
                                      w = 0
                                    }
                                    W.push(l)
                                    w += l.byteLength
                                  }
                              }
                              if (R && u.firstKeyFrame) break
                              A += 188
                              H += 188
                            } else A++, H++
                          H = g.byteLength
                          A = H - 188
                          for (R = !1; 0 <= A; )
                            if (71 === g[A] && 71 === g[H]) {
                              l = g.subarray(A, H)
                              M = Ya.parseType(l, k.pid)
                              switch (M) {
                                case 'pes':
                                  if (
                                    ((T = Ya.parsePesType(l, k.table)),
                                    (M = Ya.parsePayloadUnitStartIndicator(l)),
                                    'video' === T && M && (T = Ya.parsePesTime(l)))
                                  )
                                    (T.type = 'video'), u.video.push(T), (R = !0)
                              }
                              if (R) break
                              A -= 188
                              H -= 188
                            } else A--, H--
                          0 === f.video.length && delete f.video
                          break
                        case 15:
                          ;(f.audio = []), sl(v, m, f), 0 === f.audio.length && delete f.audio
                      }
                  v = f
                }
                if (!v || (!v.audio && !v.video)) return null
                cq(v, r)
                return v
              },
              parseAudioPes_: sl,
            },
            Yc = function (v) {
              var r = '' + String.fromCharCode(v[0])
              r += String.fromCharCode(v[1])
              r += String.fromCharCode(v[2])
              return (r += String.fromCharCode(v[3]))
            },
            bb = function m(r, p) {
              var l = [],
                f
              if (!p.length) return null
              for (f = 0; f < r.byteLength; ) {
                var g = ((r[f] << 24) | (r[f + 1] << 16) | (r[f + 2] << 8) | r[f + 3]) >>> 0
                var k = Yc(r.subarray(f + 4, f + 8))
                g = 1 < g ? f + g : r.byteLength
                k === p[0] &&
                  (1 === p.length
                    ? l.push(r.subarray(f + 8, g))
                    : ((f = m(r.subarray(f + 8, g), p.slice(1))), f.length && (l = l.concat(f))))
                f = g
              }
              return l
            },
            tl = function (r) {
              return {
                isLeading: (r[0] & 12) >>> 2,
                dependsOn: r[0] & 3,
                isDependedOn: (r[1] & 192) >>> 6,
                hasRedundancy: (r[1] & 48) >>> 4,
                paddingValue: (r[1] & 14) >>> 1,
                isNonSyncSample: r[1] & 1,
                degradationPriority: (r[2] << 8) | r[3],
              }
            },
            je = function (r) {
              return ('00' + r.toString(16)).slice(-2)
            }
          var ul = function (r) {
            var p = 0 === r[0] ? 12 : 20
            return ((r[p] << 24) | (r[p + 1] << 16) | (r[p + 2] << 8) | r[p + 3]) >>> 0
          }
          var vl = {
              findBox: bb,
              parseType: Yc,
              timescale: function (r) {
                return bb(r, ['moov', 'trak']).reduce(function (p, m) {
                  var l = bb(m, ['tkhd'])[0]
                  if (!l) return null
                  var f = l[0]
                  f = 0 === f ? 12 : 20
                  l = ((l[f] << 24) | (l[f + 1] << 16) | (l[f + 2] << 8) | l[f + 3]) >>> 0
                  m = bb(m, ['mdia', 'mdhd'])[0]
                  if (!m) return null
                  f = m[0]
                  f = 0 === f ? 12 : 20
                  p[l] = ((m[f] << 24) | (m[f + 1] << 16) | (m[f + 2] << 8) | m[f + 3]) >>> 0
                  return p
                }, {})
              },
              startTime: function (r, p) {
                p = bb(p, ['moof', 'traf'])
                p = [].concat.apply(
                  [],
                  p.map(function (m) {
                    return bb(m, ['tfhd']).map(function (l) {
                      l = r[((l[4] << 24) | (l[5] << 16) | (l[6] << 8) | l[7]) >>> 0] || 9e4
                      var f = bb(m, ['tfdt']).map(function (g) {
                        var k = g[0]
                        var u = ((g[4] << 24) | (g[5] << 16) | (g[6] << 8) | g[7]) >>> 0
                        1 === k &&
                          ((u *= Math.pow(2, 32)),
                          (u += ((g[8] << 24) | (g[9] << 16) | (g[10] << 8) | g[11]) >>> 0))
                        return u
                      })[0]
                      f = 'number' !== typeof f || isNaN(f) ? Infinity : f
                      return f / l
                    })
                  }),
                )
                p = Math.min.apply(null, p)
                return isFinite(p) ? p : 0
              },
              compositionStartTime: function (r, p) {
                var m = bb(p, ['moof', 'traf']),
                  l = 0
                p = 0
                if (m && m.length) {
                  var f = bb(m[0], ['tfhd'])[0],
                    g = bb(m[0], ['trun'])[0]
                  m = bb(m[0], ['tfdt'])[0]
                  if (f) {
                    var k = new DataView(f.buffer, f.byteOffset, f.byteLength)
                    var u = new Uint8Array(f.subarray(1, 4))
                    f = k.getUint32(4)
                    var w = u[2] & 1,
                      A = u[2] & 2,
                      H = u[2] & 8,
                      R = u[2] & 16
                    u = u[2] & 32
                    var W = 8
                    w && ((W += 4), k.getUint32(12), (W += 4))
                    A && (k.getUint32(W), (W += 4))
                    H && (k.getUint32(W), (W += 4))
                    R && (k.getUint32(W), (W += 4))
                    u && k.getUint32(W)
                    k = f
                  }
                  m &&
                    ((l = m[0]),
                    new Uint8Array(m.subarray(1, 4)),
                    (f = ((m[4] << 24) | (m[5] << 16) | (m[6] << 8) | m[7]) >>> 0),
                    1 === l &&
                      ((f *= Math.pow(2, 32)),
                      (f += ((m[8] << 24) | (m[9] << 16) | (m[10] << 8) | m[11]) >>> 0)),
                    (l = f))
                  if (g) {
                    m = g[0]
                    var M = new Uint8Array(g.subarray(1, 4))
                    f = []
                    w = new DataView(g.buffer, g.byteOffset, g.byteLength)
                    u = M[2] & 1
                    W = M[2] & 4
                    A = M[1] & 1
                    H = M[1] & 2
                    R = M[1] & 4
                    M = M[1] & 8
                    var T = w.getUint32(4),
                      Q = 8
                    u && (w.getInt32(Q), (Q += 4))
                    W &&
                      T &&
                      ((u = { flags: tl(g.subarray(Q, Q + 4)) }),
                      (Q += 4),
                      A && ((u.duration = w.getUint32(Q)), (Q += 4)),
                      H && ((u.size = w.getUint32(Q)), (Q += 4)),
                      M &&
                        ((u.compositionTimeOffset = 1 === m ? w.getInt32(Q) : w.getUint32(Q)),
                        (Q += 4)),
                      f.push(u),
                      T--)
                    for (; T--; )
                      (u = {}),
                        A && ((u.duration = w.getUint32(Q)), (Q += 4)),
                        H && ((u.size = w.getUint32(Q)), (Q += 4)),
                        R && ((u.flags = tl(g.subarray(Q, Q + 4))), (Q += 4)),
                        M &&
                          ((u.compositionTimeOffset = 1 === m ? w.getInt32(Q) : w.getUint32(Q)),
                          (Q += 4)),
                        f.push(u)
                    f && f.length && (p = f[0].compositionTimeOffset || 0)
                  }
                }
                return (l + p) / (r[k] || 9e4)
              },
              videoTrackIds: function (r) {
                var p = []
                bb(r, ['moov', 'trak']).forEach(function (m) {
                  var l = bb(m, ['mdia', 'hdlr']),
                    f = bb(m, ['tkhd'])
                  l.forEach(function (g, k) {
                    g = Yc(g.subarray(8, 12))
                    k = f[k]
                    'vide' === g &&
                      ((k = new DataView(k.buffer, k.byteOffset, k.byteLength)),
                      (g = k.getUint8(0)),
                      (k = 0 === g ? k.getUint32(12) : k.getUint32(20)),
                      p.push(k))
                  })
                })
                return p
              },
              tracks: function (r) {
                var p = []
                bb(r, ['moov', 'trak']).forEach(function (m) {
                  var l = {},
                    f = bb(m, ['tkhd'])[0]
                  if (f) {
                    f = new DataView(f.buffer, f.byteOffset, f.byteLength)
                    var g = f.getUint8(0)
                    l.id = 0 === g ? f.getUint32(12) : f.getUint32(20)
                  }
                  if ((f = bb(m, ['mdia', 'hdlr'])[0]))
                    (f = Yc(f.subarray(8, 12))),
                      (l.type = 'vide' === f ? 'video' : 'soun' === f ? 'audio' : f)
                  if ((f = bb(m, ['mdia', 'minf', 'stbl', 'stsd'])[0]))
                    if (
                      ((f = f.subarray(8)),
                      (l.codec = Yc(f.subarray(4, 8))),
                      (f = bb(f, [l.codec])[0]))
                    )
                      /^[a-z]vc[1-9]$/i.test(l.codec)
                        ? ((f = f.subarray(78)),
                          (g = Yc(f.subarray(4, 8))),
                          'avcC' === g && 11 < f.length
                            ? ((l.codec += '.'),
                              (l.codec += je(f[9])),
                              (l.codec += je(f[10])),
                              (l.codec += je(f[11])))
                            : (l.codec = 'avc1.4d400d'))
                        : /^mp4[a,v]$/i.test(l.codec)
                          ? ((f = f.subarray(28)),
                            (g = Yc(f.subarray(4, 8))),
                            'esds' === g && 20 < f.length && 0 !== f[19]
                              ? ((l.codec += '.' + je(f[19])),
                                (l.codec += '.' + je((f[20] >>> 2) & 63).replace(/^0/, '')))
                              : (l.codec = 'mp4a.40.2'))
                          : (l.codec = l.codec.toLowerCase())
                  if ((m = bb(m, ['mdia', 'mdhd'])[0])) l.timescale = ul(m)
                  p.push(l)
                })
                return p
              },
              getTimescaleFromMediaHeader: ul,
            },
            Lc = {
              mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,
              webm: /^(vp0?[89]|av0?1|opus|vorbis)/,
              ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,
              video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,
              audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,
              text: /^(stpp.ttml.im1t)/,
              muxerVideo: /^(avc0?1)/,
              muxerAudio: /^(mp4a)/,
              muxerText: /a^/,
            },
            eq = ['video', 'audio', 'text'],
            wl = ['Video', 'Audio', 'Text'],
            xl = function (r) {
              return r
                ? r.replace(/avc1\.(\d+)\.(\d+)/i, function (p, m, l) {
                    p = ('00' + Number(m).toString(16)).slice(-2)
                    l = ('00' + Number(l).toString(16)).slice(-2)
                    return 'avc1.' + p + '00' + l
                  })
                : r
            },
            yc = function (r) {
              void 0 === r && (r = '')
              var p = []
              r.split(',').forEach(function (m) {
                m = m.trim()
                var l
                eq.forEach(function (f) {
                  var g = Lc[f].exec(m.toLowerCase())
                  if (g && !(1 >= g.length)) {
                    l = f
                    g = m.substring(0, g[1].length)
                    var k = m.replace(g, '')
                    p.push({ type: g, details: k, mediaType: f })
                  }
                })
                l || p.push({ type: m, details: '', mediaType: 'unknown' })
              })
              return p
            },
            fq = function (r, p) {
              if (!r.mediaGroups.AUDIO || !p) return null
              r = r.mediaGroups.AUDIO[p]
              if (!r) return null
              for (var m in r)
                if (((p = r[m]), p['default'] && p.playlists))
                  return yc(p.playlists[0].attributes.CODECS)
              return null
            },
            yl = function (r) {
              void 0 === r && (r = '')
              return Lc.audio.test(r.trim().toLowerCase())
            },
            gq = function (r) {
              void 0 === r && (r = '')
              return Lc.text.test(r.trim().toLowerCase())
            },
            zh = function (r) {
              if (r && 'string' === typeof r) {
                var p = r
                    .toLowerCase()
                    .split(',')
                    .map(function (f) {
                      return xl(f.trim())
                    }),
                  m = 'video'
                1 === p.length && yl(p[0])
                  ? (m = 'audio')
                  : 1 === p.length && gq(p[0]) && (m = 'application')
                var l = 'mp4'
                p.every(function (f) {
                  return Lc.mp4.test(f)
                })
                  ? (l = 'mp4')
                  : p.every(function (f) {
                        return Lc.webm.test(f)
                      })
                    ? (l = 'webm')
                    : p.every(function (f) {
                        return Lc.ogg.test(f)
                      }) && (l = 'ogg')
                return m + '/' + l + ';codecs="' + r + '"'
              }
            },
            mf = function (r) {
              void 0 === r && (r = '')
              return (
                (Gc.MediaSource &&
                  Gc.MediaSource.isTypeSupported &&
                  Gc.MediaSource.isTypeSupported(zh(r))) ||
                !1
              )
            },
            Ah = function (r) {
              void 0 === r && (r = '')
              return r
                .toLowerCase()
                .split(',')
                .every(function (p) {
                  p = p.trim()
                  for (var m = 0; m < wl.length; m++) if (Lc['muxer' + wl[m]].test(p)) return !0
                  return !1
                })
            },
            nf = function (r, p, m) {
              return r && m && m.responseURL && p !== m.responseURL ? m.responseURL : p
            },
            mc = function (r) {
              return U.log.debug ? U.log.debug.bind(U, 'VHS:', r + ' >') : function () {}
            },
            hq = U.log,
            zl = function (r) {
              var p = r.onwarn,
                m = r.oninfo,
                l = r.manifestString,
                f = r.customTagParsers
              f = void 0 === f ? [] : f
              r = r.customTagMappers
              r = void 0 === r ? [] : r
              var g = new op()
              if (p) g.on('warn', p)
              if (m) g.on('info', m)
              f.forEach(function (k) {
                return g.addParser(k)
              })
              r.forEach(function (k) {
                return g.addTagMapper(k)
              })
              g.push(l)
              g.end()
              return g.manifest
            },
            of = function (r, p) {
              ;['AUDIO', 'SUBTITLES'].forEach(function (m) {
                for (var l in r.mediaGroups[m])
                  for (var f in r.mediaGroups[m][l]) p(r.mediaGroups[m][l][f], m, l, f)
              })
            },
            Al = function (r) {
              var p = r.playlist,
                m = r.uri
              p.id = r.id
              m && (p.uri = m)
              p.attributes = p.attributes || {}
            },
            iq = function (r) {
              for (var p = r.playlists.length; p--; ) {
                var m = r.playlists[p]
                Al({ playlist: m, id: p + '-' + m.uri })
                m.resolvedUri = lc(r.uri, m.uri)
                r.playlists[m.id] = m
                r.playlists[m.uri] = m
                m.attributes.BANDWIDTH ||
                  hq.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.')
              }
            },
            jq = function (r) {
              of(r, function (p) {
                p.uri && (p.resolvedUri = lc(r.uri, p.uri))
              })
            },
            kq = function (r, p) {
              r = '0-' + p
              var m = {
                mediaGroups: { AUDIO: {}, VIDEO: {}, 'CLOSED-CAPTIONS': {}, SUBTITLES: {} },
                uri: ra.location.href,
                resolvedUri: ra.location.href,
                playlists: [{ uri: p, id: r, resolvedUri: p, attributes: {} }],
              }
              m.playlists[r] = m.playlists[0]
              m.playlists[p] = m.playlists[0]
              return m
            },
            Bl = function (r, p) {
              r.uri = p
              for (p = 0; p < r.playlists.length; p++)
                r.playlists[p].uri || (r.playlists[p].uri = 'placeholder-uri-' + p)
              of(r, function (m, l, f, g) {
                m.playlists &&
                  m.playlists.length &&
                  !m.playlists[0].uri &&
                  ((l = 'placeholder-uri-' + l + '-' + f + '-' + g),
                  (f = '0-' + l),
                  (m.playlists[0].uri = l),
                  (m.playlists[0].id = f),
                  (r.playlists[f] = m.playlists[0]),
                  (r.playlists[l] = m.playlists[0]))
              })
              iq(r)
              jq(r)
            },
            Bh = U.mergeOptions,
            lq = function (r, p, m) {
              var l = p.slice()
              m = m || 0
              p = Math.min(r.length, p.length + m)
              for (var f = m; f < p; f++) l[f - m] = Bh(r[f], l[f - m])
              return l
            },
            Cl = function (r, p) {
              r.resolvedUri || (r.resolvedUri = lc(p, r.uri))
              r.key && !r.key.resolvedUri && (r.key.resolvedUri = lc(p, r.key.uri))
              r.map && !r.map.resolvedUri && (r.map.resolvedUri = lc(p, r.map.uri))
            },
            Dl = function (r, p) {
              return (
                r === p ||
                (r.segments &&
                  p.segments &&
                  r.segments.length === p.segments.length &&
                  r.endList === p.endList &&
                  r.mediaSequence === p.mediaSequence)
              )
            },
            Ch = function (r, p, m) {
              void 0 === m && (m = Dl)
              r = Bh(r, {})
              var l = r.playlists[p.id]
              if (!l || m(l, p)) return null
              var f = Bh(l, p)
              l.segments &&
                (f.segments = lq(l.segments, p.segments, p.mediaSequence - l.mediaSequence))
              f.segments.forEach(function (g) {
                Cl(g, f.resolvedUri)
              })
              for (m = 0; m < r.playlists.length; m++)
                r.playlists[m].id === p.id && (r.playlists[m] = f)
              r.playlists[p.id] = f
              r.playlists[p.uri] = f
              return r
            },
            El = function (r, p) {
              var m = r.segments[r.segments.length - 1]
              return p && m && m.duration ? 1e3 * m.duration : 500 * (r.targetDuration || 10)
            },
            Bd = (function (r) {
              function p(l, f, g) {
                void 0 === g && (g = {})
                var k = r.call(this) || this
                if (!l) throw Error('A non-empty playlist URL or object is required')
                k.logger_ = mc('PlaylistLoader')
                var u = g
                g = u.withCredentials
                u = u.handleManifestRedirects
                k.src = l
                k.vhs_ = f
                k.withCredentials = void 0 === g ? !1 : g
                k.handleManifestRedirects = void 0 === u ? !1 : u
                l = f.options_
                k.customTagParsers = (l && l.customTagParsers) || []
                k.customTagMappers = (l && l.customTagMappers) || []
                k.state = 'HAVE_NOTHING'
                k.on('mediaupdatetimeout', function () {
                  'HAVE_METADATA' === k.state &&
                    ((k.state = 'HAVE_CURRENT_METADATA'),
                    (k.request = k.vhs_.xhr(
                      { uri: lc(k.master.uri, k.media().uri), withCredentials: k.withCredentials },
                      function (w, A) {
                        if (k.request) {
                          if (w)
                            return k.playlistRequestError(k.request, k.media(), 'HAVE_METADATA')
                          k.haveMetadata({
                            playlistString: k.request.responseText,
                            url: k.media().uri,
                            id: k.media().id,
                          })
                        }
                      },
                    )))
                })
                return k
              }
              xc(p, r)
              var m = p.prototype
              m.playlistRequestError = function (l, f, g) {
                var k = f.uri
                f = f.id
                this.request = null
                g && (this.state = g)
                this.error = {
                  playlist: this.master.playlists[f],
                  status: l.status,
                  message: 'HLS playlist request error at URL: ' + k + '.',
                  responseText: l.responseText,
                  code: 500 <= l.status ? 4 : 2,
                }
                this.trigger('error')
              }
              m.haveMetadata = function (l) {
                var f = this,
                  g = l.playlistString,
                  k = l.playlistObject,
                  u = l.url,
                  w = l.id
                this.request = null
                this.state = 'HAVE_METADATA'
                l =
                  k ||
                  zl({
                    onwarn: function (A) {
                      return f.logger_('m3u8-parser warn for ' + w + ': ' + A.message)
                    },
                    oninfo: function (A) {
                      return f.logger_('m3u8-parser info for ' + w + ': ' + A.message)
                    },
                    manifestString: g,
                    customTagParsers: this.customTagParsers,
                    customTagMappers: this.customTagMappers,
                  })
                l.lastRequest = Date.now()
                Al({ playlist: l, uri: u, id: w })
                u = Ch(this.master, l)
                this.targetDuration = l.targetDuration
                u
                  ? ((this.master = u), (this.media_ = this.master.playlists[w]))
                  : this.trigger('playlistunchanged')
                this.media().endList ||
                  (ra.clearTimeout(this.mediaUpdateTimeout),
                  (this.mediaUpdateTimeout = ra.setTimeout(
                    function () {
                      f.trigger('mediaupdatetimeout')
                    },
                    El(this.media(), !!u),
                  )))
                this.trigger('loadedplaylist')
              }
              m.dispose = function () {
                this.trigger('dispose')
                this.stopRequest()
                ra.clearTimeout(this.mediaUpdateTimeout)
                ra.clearTimeout(this.finalRenditionTimeout)
                this.off()
              }
              m.stopRequest = function () {
                if (this.request) {
                  var l = this.request
                  this.request = null
                  l.onreadystatechange = null
                  l.abort()
                }
              }
              m.media = function (l, f) {
                var g = this
                if (!l) return this.media_
                if ('HAVE_NOTHING' === this.state)
                  throw Error('Cannot switch media playlist from ' + this.state)
                if ('string' === typeof l) {
                  if (!this.master.playlists[l]) throw Error('Unknown playlist URI: ' + l)
                  l = this.master.playlists[l]
                }
                ra.clearTimeout(this.finalRenditionTimeout)
                if (f)
                  (f = (l.targetDuration / 2) * 1e3 || 5e3),
                    (this.finalRenditionTimeout = ra.setTimeout(this.media.bind(this, l, !1), f))
                else {
                  var k = this.state
                  f = !this.media_ || l.id !== this.media_.id
                  if (this.master.playlists[l.id].endList || (l.endList && l.segments.length))
                    this.request &&
                      ((this.request.onreadystatechange = null),
                      this.request.abort(),
                      (this.request = null)),
                      (this.state = 'HAVE_METADATA'),
                      (this.media_ = l),
                      f &&
                        (this.trigger('mediachanging'),
                        'HAVE_MASTER' === k
                          ? this.trigger('loadedmetadata')
                          : this.trigger('mediachange'))
                  else if (f) {
                    this.state = 'SWITCHING_MEDIA'
                    if (this.request) {
                      if (l.resolvedUri === this.request.url) return
                      this.request.onreadystatechange = null
                      this.request.abort()
                      this.request = null
                    }
                    this.media_ && this.trigger('mediachanging')
                    this.request = this.vhs_.xhr(
                      { uri: l.resolvedUri, withCredentials: this.withCredentials },
                      function (u, w) {
                        if (g.request) {
                          l.lastRequest = Date.now()
                          l.resolvedUri = nf(g.handleManifestRedirects, l.resolvedUri, w)
                          if (u) return g.playlistRequestError(g.request, l, k)
                          g.haveMetadata({ playlistString: w.responseText, url: l.uri, id: l.id })
                          'HAVE_MASTER' === k
                            ? g.trigger('loadedmetadata')
                            : g.trigger('mediachange')
                        }
                      },
                    )
                  }
                }
              }
              m.pause = function () {
                this.stopRequest()
                ra.clearTimeout(this.mediaUpdateTimeout)
                'HAVE_NOTHING' === this.state && (this.started = !1)
                'SWITCHING_MEDIA' === this.state
                  ? (this.state = this.media_ ? 'HAVE_METADATA' : 'HAVE_MASTER')
                  : 'HAVE_CURRENT_METADATA' === this.state && (this.state = 'HAVE_METADATA')
              }
              m.load = function (l) {
                var f = this
                ra.clearTimeout(this.mediaUpdateTimeout)
                var g = this.media()
                l
                  ? (this.mediaUpdateTimeout = ra.setTimeout(
                      function () {
                        return f.load()
                      },
                      g ? (g.targetDuration / 2) * 1e3 : 5e3,
                    ))
                  : this.started
                    ? g && !g.endList
                      ? this.trigger('mediaupdatetimeout')
                      : this.trigger('loadedplaylist')
                    : this.start()
              }
              m.start = function () {
                var l = this
                this.started = !0
                'object' === typeof this.src
                  ? (this.src.uri || (this.src.uri = ra.location.href),
                    (this.src.resolvedUri = this.src.uri),
                    setTimeout(function () {
                      l.setupInitialPlaylist(l.src)
                    }, 0))
                  : (this.request = this.vhs_.xhr(
                      { uri: this.src, withCredentials: this.withCredentials },
                      function (f, g) {
                        if (l.request) {
                          l.request = null
                          if (f)
                            return (
                              (l.error = {
                                status: g.status,
                                message: 'HLS playlist request error at URL: ' + l.src + '.',
                                responseText: g.responseText,
                                code: 2,
                              }),
                              'HAVE_NOTHING' === l.state && (l.started = !1),
                              l.trigger('error')
                            )
                          l.src = nf(l.handleManifestRedirects, l.src, g)
                          f = zl({
                            manifestString: g.responseText,
                            customTagParsers: l.customTagParsers,
                            customTagMappers: l.customTagMappers,
                          })
                          l.setupInitialPlaylist(f)
                        }
                      },
                    ))
              }
              m.srcUri = function () {
                return 'string' === typeof this.src ? this.src : this.src.uri
              }
              m.setupInitialPlaylist = function (l) {
                this.state = 'HAVE_MASTER'
                if (l.playlists)
                  (this.master = l),
                    Bl(this.master, this.srcUri()),
                    l.playlists.forEach(function (g) {
                      g.segments &&
                        g.segments.forEach(function (k) {
                          Cl(k, g.resolvedUri)
                        })
                    }),
                    this.trigger('loadedplaylist'),
                    this.request || this.media(this.master.playlists[0])
                else {
                  var f = this.srcUri() || ra.location.href
                  this.master = kq(l, f)
                  this.haveMetadata({ playlistObject: l, url: f, id: this.master.playlists[0].id })
                  this.trigger('loadedmetadata')
                }
              }
              return p
            })(U.EventTarget),
            Zc = 1 / 30,
            nc = 3 * Zc,
            Fl = function (r, p) {
              var m = [],
                l
              if (r && r.length)
                for (l = 0; l < r.length; l++)
                  p(r.start(l), r.end(l)) && m.push([r.start(l), r.end(l)])
              return U.createTimeRanges(m)
            },
            ke = function (r, p) {
              return Fl(r, function (m, l) {
                return m - nc <= p && l + nc >= p
              })
            },
            Dh = function (r, p) {
              return Fl(r, function (m) {
                return m - Zc >= p
              })
            },
            mq = function (r, p) {
              var m = null,
                l = null,
                f = 0,
                g = [],
                k = []
              if (!(r && r.length && p && p.length)) return U.createTimeRange()
              for (var u = r.length; u--; )
                g.push({ time: r.start(u), type: 'start' }), g.push({ time: r.end(u), type: 'end' })
              for (u = p.length; u--; )
                g.push({ time: p.start(u), type: 'start' }), g.push({ time: p.end(u), type: 'end' })
              g.sort(function (w, A) {
                return w.time - A.time
              })
              for (u = 0; u < g.length; u++)
                'start' === g[u].type
                  ? (f++, 2 === f && (m = g[u].time))
                  : 'end' === g[u].type && (f--, 1 === f && (l = g[u].time)),
                  null !== m && null !== l && (k.push([m, l]), (l = m = null))
              return U.createTimeRanges(k)
            },
            Gl = function (r) {
              var p = []
              if (!r || !r.length) return ''
              for (var m = 0; m < r.length; m++) p.push(r.start(m) + ' => ' + r.end(m))
              return p.join(', ')
            },
            $c = function (r) {
              for (var p = [], m = 0; m < r.length; m++)
                p.push({ start: r.start(m), end: r.end(m) })
              return p
            },
            nq = function (r, p) {
              if (r === p) return !1
              if ((!r && p) || (!p && r) || r.length !== p.length) return !0
              for (var m = 0; m < r.length; m++)
                if (r.start(m) !== p.start(m) || r.end(m) !== p.end(m)) return !0
              return !1
            },
            Hl = U.createTimeRange,
            oq = function (r, p) {
              var m = 0
              p -= r.mediaSequence
              var l = r.segments[p]
              if (l) {
                if ('undefined' !== typeof l.start) return { result: l.start, precise: !0 }
                if ('undefined' !== typeof l.end) return { result: l.end - l.duration, precise: !0 }
              }
              for (; p--; ) {
                l = r.segments[p]
                if ('undefined' !== typeof l.end) return { result: m + l.end, precise: !0 }
                m += l.duration
                if ('undefined' !== typeof l.start) return { result: m + l.start, precise: !0 }
              }
              return { result: m, precise: !1 }
            },
            Il = function (r, p, m) {
              'undefined' === typeof p && (p = r.mediaSequence + r.segments.length)
              if (p < r.mediaSequence) return 0
              var l = oq(r, p)
              if (l.precise) return l.result
              a: {
                var f = 0
                for (var g = p - r.mediaSequence; g < r.segments.length; g++) {
                  p = r.segments[g]
                  if ('undefined' !== typeof p.start) {
                    r = p.start - f
                    f = !0
                    break a
                  }
                  f += p.duration
                  if ('undefined' !== typeof p.end) {
                    r = p.end - f
                    f = !0
                    break a
                  }
                }
                r = -1
                f = !1
              }
              return f ? r : l.result + m
            },
            Jl = function (r, p, m) {
              if (!r) return 0
              'number' !== typeof m && (m = 0)
              if ('undefined' === typeof p) {
                if (r.totalDuration) return r.totalDuration
                if (!r.endList) return ra.Infinity
              }
              return Il(r, p, m)
            },
            le = function (r, p, m) {
              var l = 0
              p > m && ((m = [m, p]), (p = m[0]), (m = m[1]))
              if (0 > p) {
                for (; p < Math.min(0, m); p++) l += r.targetDuration
                p = 0
              }
              for (; p < m; p++) l += r.segments[p].duration
              return l
            },
            Kl = function (r, p) {
              if (!r.segments.length) return 0
              var m = r.segments.length,
                l = r.segments[m - 1].duration || r.targetDuration
              p = 'number' === typeof p ? p : l + 2 * r.targetDuration
              if (0 === p) return m
              for (l = 0; m-- && !((l += r.segments[m].duration), l >= p); );
              return Math.max(0, m)
            },
            Ll = function (r, p, m, l) {
              if (!r || !r.segments) return null
              if (r.endList) return Jl(r)
              if (null === p) return null
              p = p || 0
              m = m ? Kl(r, l) : r.segments.length
              return Il(r, r.mediaSequence + m, p)
            },
            Ml = function (r) {
              return r.excludeUntil && r.excludeUntil > Date.now()
            },
            Eh = function (r) {
              return r.excludeUntil && Infinity === r.excludeUntil
            },
            pf = function (r) {
              var p = Ml(r)
              return !r.disabled && !p
            },
            Nl = function (r, p) {
              return p.attributes && p.attributes[r]
            },
            Fh = function (r, p) {
              if (1 === r.playlists.length) return !0
              var m = p.attributes.BANDWIDTH || Number.MAX_VALUE
              return (
                0 ===
                r.playlists.filter(function (l) {
                  return pf(l) ? (l.attributes.BANDWIDTH || 0) < m : !1
                }).length
              )
            },
            Gb = {
              duration: Jl,
              seekable: function (r, p, m) {
                var l = p || 0
                r = Ll(r, p, !0, m)
                return null === r ? Hl() : Hl(l, r)
              },
              safeLiveIndex: Kl,
              getMediaInfoForTime: function (r, p, m, l) {
                var f,
                  g = r.segments.length,
                  k = p - l
                if (0 > k) {
                  if (0 < m)
                    for (f = m - 1; 0 <= f; f--) {
                      var u = r.segments[f]
                      k += u.duration + Zc
                      if (0 < k) return { mediaIndex: f, startTime: l - le(r, m, f) }
                    }
                  return { mediaIndex: 0, startTime: p }
                }
                if (0 > m) {
                  for (f = m; 0 > f; f++)
                    if (((k -= r.targetDuration), 0 > k)) return { mediaIndex: 0, startTime: p }
                  m = 0
                }
                for (f = m; f < g; f++)
                  if (((u = r.segments[f]), (k -= u.duration + Zc), 0 > k))
                    return { mediaIndex: f, startTime: l + le(r, m, f) }
                return { mediaIndex: g - 1, startTime: p }
              },
              isEnabled: pf,
              isDisabled: function (r) {
                return r.disabled
              },
              isBlacklisted: Ml,
              isIncompatible: Eh,
              playlistEnd: Ll,
              isAes: function (r) {
                for (var p = 0; p < r.segments.length; p++) if (r.segments[p].key) return !0
                return !1
              },
              hasAttribute: Nl,
              estimateSegmentRequestTime: function (r, p, m, l) {
                void 0 === l && (l = 0)
                return Nl('BANDWIDTH', m) ? (r * m.attributes.BANDWIDTH - 8 * l) / p : NaN
              },
              isLowestEnabledRendition: Fh,
            },
            pq = U.xhr,
            qq = U.mergeOptions,
            Gh = function (r, p, m, l) {
              var f = 'arraybuffer' === r.responseType ? r.response : r.responseText
              !p &&
                f &&
                ((r.responseTime = Date.now()),
                (r.roundTripTime = r.responseTime - r.requestTime),
                (r.bytesReceived = f.byteLength || f.length),
                r.bandwidth ||
                  (r.bandwidth = Math.floor((r.bytesReceived / r.roundTripTime) * 8e3)))
              m.headers && (r.responseHeaders = m.headers)
              p && 'ETIMEDOUT' === p.code && (r.timedout = !0)
              p ||
                r.aborted ||
                200 === m.statusCode ||
                206 === m.statusCode ||
                0 === m.statusCode ||
                (p = Error('XHR Failed with a response of: ' + (r && (f || r.responseText))))
              l(p, r)
            },
            Ol = function () {
              var r = function f(m, l) {
                m = qq({ timeout: 45e3 }, m)
                var g = f.beforeRequest || U.Vhs.xhr.beforeRequest
                g && 'function' === typeof g && (g = g(m)) && (m = g)
                var k = (!0 === U.Vhs.xhr.original ? pq : U.Vhs.xhr)(m, function (w, A) {
                    return Gh(k, w, A, l)
                  }),
                  u = k.abort
                k.abort = function () {
                  k.aborted = !0
                  return u.apply(k, arguments)
                }
                k.uri = m.uri
                k.requestTime = Date.now()
                return k
              }
              r.original = !0
              return r
            },
            Hh = function (r) {
              var p = {}
              r.byterange &&
                ((r = r.byterange),
                (p.Range = 'bytes=' + r.offset + '-' + (r.offset + r.length - 1)))
              return p
            },
            rq = function (r, p) {
              r = r.toString(16)
              return '00'.substring(0, 2 - r.length) + r + (p % 2 ? ' ' : '')
            },
            sq = function (r) {
              return 32 <= r && 126 > r ? String.fromCharCode(r) : '.'
            },
            Pl = function (r) {
              var p = {}
              Object.keys(r).forEach(function (m) {
                var l = r[m]
                ArrayBuffer.isView(l)
                  ? (p[m] = { bytes: l.buffer, byteOffset: l.byteOffset, byteLength: l.byteLength })
                  : (p[m] = l)
              })
              return p
            },
            qf = function (r) {
              var p = r.byterange || { length: Infinity, offset: 0 }
              return [p.length, p.offset, r.resolvedUri].join()
            },
            Ql = function (r) {
              r = Array.prototype.slice.call(r)
              for (var p = '', m, l, f = 0; f < r.length / 16; f++)
                (m = r
                  .slice(16 * f, 16 * f + 16)
                  .map(rq)
                  .join('')),
                  (l = r
                    .slice(16 * f, 16 * f + 16)
                    .map(sq)
                    .join('')),
                  (p += m + ' ' + l + '\n')
              return p
            },
            tq = {
              __proto__: null,
              createTransferableMessage: Pl,
              initSegmentId: qf,
              segmentKeyId: function (r) {
                return r.resolvedUri
              },
              hexDump: Ql,
              tagDump: function (r) {
                return Ql(r.bytes)
              },
              textRanges: function (r) {
                var p = '',
                  m
                for (m = 0; m < r.length; m++) {
                  var l = r
                  var f = m
                  l = l.start(f) + '-' + l.end(f)
                  p += l + ' '
                }
                return p
              },
            },
            uq = function (r, p) {
              try {
                var m = new Date(r)
              } catch (k) {
                return null
              }
              if (!p || !p.segments || 0 === p.segments.length) return null
              r = p.segments[0]
              if (m < r.dateTimeObject) return null
              for (
                var l = 0;
                l < p.segments.length - 1 &&
                !((r = p.segments[l]), m < p.segments[l + 1].dateTimeObject);
                l++
              );
              l = p.segments[p.segments.length - 1]
              var f = l.dateTimeObject
              if (l.videoTimingInfo) {
                var g = l.videoTimingInfo
                g =
                  g.transmuxedPresentationEnd -
                  g.transmuxedPresentationStart -
                  g.transmuxerPrependedSeconds
              } else g = l.duration + 0.25 * l.duration
              g = new Date(f.getTime() + 1e3 * g)
              if (m > g) return null
              m > f && (r = l)
              return {
                segment: r,
                estimatedStart: r.videoTimingInfo
                  ? r.videoTimingInfo.transmuxedPresentationStart
                  : Gb.duration(p, p.mediaSequence + p.segments.indexOf(r)),
                type: r.videoTimingInfo ? 'accurate' : 'estimate',
              }
            },
            vq = function (r, p) {
              if (!p || !p.segments || 0 === p.segments.length) return null
              for (
                var m = 0, l, f = 0;
                f < p.segments.length &&
                !((l = p.segments[f]),
                (m = l.videoTimingInfo
                  ? l.videoTimingInfo.transmuxedPresentationEnd
                  : m + l.duration),
                r <= m);
                f++
              );
              p = p.segments[p.segments.length - 1]
              if (p.videoTimingInfo && p.videoTimingInfo.transmuxedPresentationEnd < r) return null
              if (r > m) {
                if (r > m + 0.25 * p.duration) return null
                l = p
              }
              return {
                segment: l,
                estimatedStart: l.videoTimingInfo
                  ? l.videoTimingInfo.transmuxedPresentationStart
                  : m - l.duration,
                type: l.videoTimingInfo ? 'accurate' : 'estimate',
              }
            },
            wq = function (r, p) {
              try {
                var m = new Date(r)
                var l = new Date(p)
              } catch (f) {}
              r = m.getTime()
              return (l.getTime() - r) / 1e3
            },
            xq = function (r) {
              if (!r.segments || 0 === r.segments.length) return !1
              for (var p = 0; p < r.segments.length; p++)
                if (!r.segments[p].dateTimeObject) return !1
              return !0
            },
            yq = function (r) {
              var p = r.playlist,
                m = r.time
              m = void 0 === m ? void 0 : m
              r = r.callback
              if (!r) throw Error('getProgramTime: callback must be provided')
              if (!p || void 0 === m)
                return r({ message: 'getProgramTime: playlist and time must be provided' })
              var l = vq(m, p)
              if (!l) return r({ message: 'valid programTime was not found' })
              if ('estimate' === l.type)
                return r({
                  message:
                    'Accurate programTime could not be determined. Please seek to e.seekTime and try again',
                  seekTime: l.estimatedStart,
                })
              p = { mediaSeconds: m }
              l = l.segment
              l.dateTimeObject
                ? ((m -=
                    l.videoTimingInfo.transmuxedPresentationStart +
                    l.videoTimingInfo.transmuxerPrependedSeconds),
                  (m = new Date(l.dateTimeObject.getTime() + 1e3 * m)))
                : (m = null)
              m && (p.programDateTime = m.toISOString())
              return r(null, p)
            },
            zq = function m(p) {
              var l = p.programTime,
                f = p.playlist,
                g = p.retryCount,
                k = void 0 === g ? 2 : g,
                u = p.seekTo
              g = p.pauseAfterSeek
              var w = void 0 === g ? !0 : g,
                A = p.tech,
                H = p.callback
              if (!H) throw Error('seekToProgramTime: callback must be provided')
              if ('undefined' === typeof l || !f || !u)
                return H({
                  message: 'seekToProgramTime: programTime, seekTo and playlist must be provided',
                })
              if (!f.endList && !A.hasStarted_)
                return H({ message: 'player must be playing a live stream to start buffering' })
              if (!xq(f))
                return H({
                  message: 'programDateTime tags must be provided in the manifest ' + f.resolvedUri,
                })
              p = uq(l, f)
              if (!p) return H({ message: l + ' was not found in the stream' })
              g = p.segment
              var R = wq(g.dateTimeObject, l)
              if ('estimate' === p.type) {
                if (0 === k) return H({ message: l + ' is not buffered yet. Try again' })
                u(p.estimatedStart + R)
                A.one('seeked', function () {
                  m({
                    programTime: l,
                    playlist: f,
                    retryCount: k - 1,
                    seekTo: u,
                    pauseAfterSeek: w,
                    tech: A,
                    callback: H,
                  })
                })
              } else
                (p = g.start + R),
                  A.one('seeked', function () {
                    return H(null, A.currentTime())
                  }),
                  w && A.pause(),
                  u(p)
            },
            Rl = function (p, m) {
              if (4 === p.readyState) return m()
            },
            Aq = function (p, m, l) {
              var f = [],
                g,
                k = !1,
                u = function (H, R, W, M) {
                  R.abort()
                  k = !0
                  return l(H, R, W, M)
                },
                w = function (H, R) {
                  if (!k) {
                    if (H) return u(H, R, '', f)
                    var W = R.responseText.substring(
                      (f && f.byteLength) || 0,
                      R.responseText.length,
                    )
                    f = Sp(f, hl(W, !0))
                    g = g || ie(f)
                    if (10 > f.length || (g && f.length < g + 2))
                      return Rl(R, function () {
                        return u(H, R, '', f)
                      })
                    W = xh(f)
                    return ('ts' === W && 188 > f.length) || (!W && 376 > f.length)
                      ? Rl(R, function () {
                          return u(H, R, '', f)
                        })
                      : u(null, R, W, f)
                  }
                },
                A = m(
                  {
                    uri: p,
                    beforeSend: function (H) {
                      H.overrideMimeType('text/plain; charset=x-user-defined')
                      H.addEventListener('progress', function (R) {
                        R.total
                        R.loaded
                        return Gh(H, null, { statusCode: H.status }, w)
                      })
                    },
                  },
                  function (H, R) {
                    return Gh(A, H, R, w)
                  },
                )
              return A
            },
            Sl = U.mergeOptions,
            Tl = function (p, m) {
              if (
                !Dl(p, m) ||
                (p.sidx &&
                  m.sidx &&
                  (p.sidx.offset !== m.sidx.offset || p.sidx.length !== m.sidx.length)) ||
                (!p.sidx && m.sidx) ||
                (p.sidx && !m.sidx) ||
                (p.segments && !m.segments) ||
                (!p.segments && m.segments)
              )
                return !1
              if (!p.segments && !m.segments) return !0
              for (var l = 0; l < p.segments.length; l++) {
                var f = p.segments[l],
                  g = m.segments[l]
                if (f.uri !== g.uri) return !1
                if (f.byterange || g.byterange)
                  if (
                    ((f = f.byterange),
                    (g = g.byterange),
                    (f && !g) || (!f && g) || f.offset !== g.offset || f.length !== g.length)
                  )
                    return !1
              }
              return !0
            },
            Ih = function (p) {
              return (
                p.uri +
                '-' +
                p.byterange.offset +
                '-' +
                (p.byterange.offset + p.byterange.length - 1)
              )
            },
            Bq = function (p, m, l) {
              for (
                var f = !0,
                  g = Sl(p, { duration: m.duration, minimumUpdatePeriod: m.minimumUpdatePeriod }),
                  k = 0;
                k < m.playlists.length;
                k++
              ) {
                var u = m.playlists[k]
                if (u.sidx) {
                  var w = Ih(u.sidx)
                  l && l[w] && qh(u, l[w].sidx, u.sidx.resolvedUri)
                }
                if ((u = Ch(g, u, Tl))) (g = u), (f = !1)
              }
              of(m, function (A, H, R, W) {
                if (A.playlists && A.playlists.length) {
                  var M = A.playlists[0].id
                  if ((A = Ch(g, A.playlists[0], Tl)))
                    (g = A), (g.mediaGroups[H][R][W].playlists[0] = g.playlists[M]), (f = !1)
                }
              })
              m.minimumUpdatePeriod !== p.minimumUpdatePeriod && (f = !1)
              return f ? null : g
            },
            Ul = function (p, m) {
              var l = {},
                f
              for (f in p) {
                var g = p[f].sidx
                if (g) {
                  var k = Ih(g)
                  if (!m[k]) break
                  var u = m[k].sidxInfo
                  ;((!u.map && !g.map) ||
                    (u.map &&
                      g.map &&
                      u.map.byterange.offset === g.map.byterange.offset &&
                      u.map.byterange.length === g.map.byterange.length)) &&
                    u.uri === g.uri &&
                    u.byterange.offset === g.byterange.offset &&
                    u.byterange.length === g.byterange.length &&
                    (l[k] = m[k])
                }
              }
              return l
            },
            Cq = function (p, m) {
              var l = Ul(p.playlists, m)
              of(p, function (f, g, k, u) {
                f.playlists && f.playlists.length && (l = Sl(l, Ul(f.playlists, m)))
              })
              return l
            },
            Jh = (function (p) {
              function m(f, g, k, u) {
                void 0 === k && (k = {})
                var w = p.call(this) || this
                w.masterPlaylistLoader_ = u || Xb(w)
                u || (w.isMaster_ = !0)
                u = k
                k = u.withCredentials
                u = u.handleManifestRedirects
                w.vhs_ = g
                w.withCredentials = void 0 === k ? !1 : k
                w.handleManifestRedirects = void 0 === u ? !1 : u
                if (!f) throw Error('A non-empty playlist URL or object is required')
                w.on('minimumUpdatePeriod', function () {
                  w.refreshXml_()
                })
                w.on('mediaupdatetimeout', function () {
                  w.refreshMedia_(w.media().id)
                })
                w.state = 'HAVE_NOTHING'
                w.loadedPlaylists_ = {}
                w.logger_ = mc('DashPlaylistLoader')
                w.isMaster_
                  ? ((w.masterPlaylistLoader_.srcUrl = f),
                    (w.masterPlaylistLoader_.sidxMapping_ = {}))
                  : (w.childPlaylist_ = f)
                return w
              }
              xc(m, p)
              var l = m.prototype
              l.requestErrored_ = function (f, g, k) {
                if (!this.request) return !0
                this.request = null
                if (f)
                  return (
                    (this.error =
                      'object' !== typeof f || f instanceof Error
                        ? {
                            status: g.status,
                            message: 'DASH request error at URL: ' + g.uri,
                            response: g.response,
                            code: 2,
                          }
                        : f),
                    k && (this.state = k),
                    this.trigger('error'),
                    !0
                  )
              }
              l.addSidxSegments_ = function (f, g, k) {
                var u = this,
                  w = f.sidx && Ih(f.sidx)
                if (f.sidx && w && !this.masterPlaylistLoader_.sidxMapping_[w]) {
                  var A = nf(this.handleManifestRedirects, f.sidx.resolvedUri),
                    H = this.masterPlaylistLoader_.sidxMapping_
                  H[w] = { sidxInfo: f.sidx }
                  var R = function (W, M) {
                    if (!u.requestErrored_(W, M, g)) {
                      W = za(M.response).subarray(8)
                      M = new DataView(W.buffer, W.byteOffset, W.byteLength)
                      var T = {
                          version: W[0],
                          flags: new Uint8Array(W.subarray(1, 4)),
                          references: [],
                          referenceId: M.getUint32(4),
                          timescale: M.getUint32(8),
                        },
                        Q = 12
                      0 === T.version
                        ? ((T.earliestPresentationTime = M.getUint32(Q)),
                          (T.firstOffset = M.getUint32(Q + 4)),
                          (Q += 8))
                        : ((T.earliestPresentationTime = M.getUint32(Q) * gl + M.getUint32(Q + 4)),
                          (T.firstOffset = M.getUint32(Q + 8) * gl + M.getUint32(Q + 12)),
                          (Q += 16))
                      Q += 2
                      var na = M.getUint16(Q)
                      for (Q += 2; 0 < na; Q += 12, na--)
                        T.references.push({
                          referenceType: (W[Q] & 128) >>> 7,
                          referencedSize: M.getUint32(Q) & 2147483647,
                          subsegmentDuration: M.getUint32(Q + 4),
                          startsWithSap: !!(W[Q + 8] & 128),
                          sapType: (W[Q + 8] & 112) >>> 4,
                          sapDeltaTime: M.getUint32(Q + 8) & 268435455,
                        })
                      H[w].sidx = T
                      qh(f, T, f.sidx.resolvedUri)
                      return k(!0)
                    }
                  }
                  this.request = Aq(A, this.vhs_.xhr, function (W, M, T, Q) {
                    if (W) return R(W, M)
                    if (!T || 'mp4' !== T)
                      return R(
                        {
                          status: M.status,
                          message:
                            'Unsupported ' +
                            (T || 'unknown') +
                            ' container type for sidx segment at URL: ' +
                            A,
                          response: '',
                          playlist: f,
                          internal: !0,
                          blacklistDuration: Infinity,
                          code: 2,
                        },
                        M,
                      )
                    var na = f.sidx.byterange
                    T = na.offset
                    na = na.length
                    if (Q.length >= na + T)
                      return R(W, { response: Q.subarray(T, T + na), status: M.status, uri: M.uri })
                    u.request = u.vhs_.xhr(
                      {
                        uri: A,
                        responseType: 'arraybuffer',
                        headers: Hh({ byterange: f.sidx.byterange }),
                      },
                      R,
                    )
                  })
                } else
                  this.mediaRequest_ = ra.setTimeout(function () {
                    return k(!1)
                  }, 0)
              }
              l.dispose = function () {
                this.trigger('dispose')
                this.stopRequest()
                this.loadedPlaylists_ = {}
                ra.clearTimeout(this.minimumUpdatePeriodTimeout_)
                ra.clearTimeout(this.mediaRequest_)
                ra.clearTimeout(this.mediaUpdateTimeout)
                this.minimumUpdatePeriodTimeout_ =
                  this.mediaRequest_ =
                  this.mediaUpdateTimeout =
                    null
                this.masterPlaylistLoader_.createMupOnMedia_ &&
                  (this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_),
                  (this.masterPlaylistLoader_.createMupOnMedia_ = null))
                this.off()
              }
              l.hasPendingRequest = function () {
                return this.request || this.mediaRequest_
              }
              l.stopRequest = function () {
                if (this.request) {
                  var f = this.request
                  this.request = null
                  f.onreadystatechange = null
                  f.abort()
                }
              }
              l.media = function (f) {
                var g = this
                if (!f) return this.media_
                if ('HAVE_NOTHING' === this.state)
                  throw Error('Cannot switch media playlist from ' + this.state)
                var k = this.state
                if ('string' === typeof f) {
                  if (!this.masterPlaylistLoader_.master.playlists[f])
                    throw Error('Unknown playlist URI: ' + f)
                  f = this.masterPlaylistLoader_.master.playlists[f]
                }
                var u = !this.media_ || f.id !== this.media_.id
                u && this.loadedPlaylists_[f.id] && this.loadedPlaylists_[f.id].endList
                  ? ((this.state = 'HAVE_METADATA'),
                    (this.media_ = f),
                    u && (this.trigger('mediachanging'), this.trigger('mediachange')))
                  : u &&
                    (this.media_ && this.trigger('mediachanging'),
                    this.addSidxSegments_(f, k, function (w) {
                      g.haveMetadata({ startingState: k, playlist: f })
                    }))
              }
              l.haveMetadata = function (f) {
                var g = f.startingState
                f = f.playlist
                this.state = 'HAVE_METADATA'
                this.loadedPlaylists_[f.id] = f
                this.mediaRequest_ = null
                this.refreshMedia_(f.id)
                'HAVE_MASTER' === g ? this.trigger('loadedmetadata') : this.trigger('mediachange')
              }
              l.pause = function () {
                this.masterPlaylistLoader_.createMupOnMedia_ &&
                  (this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_),
                  (this.masterPlaylistLoader_.createMupOnMedia_ = null))
                this.stopRequest()
                ra.clearTimeout(this.mediaUpdateTimeout)
                ra.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_)
                this.mediaUpdateTimeout = this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ =
                  null
                'HAVE_NOTHING' === this.state && (this.started = !1)
              }
              l.load = function (f) {
                var g = this
                ra.clearTimeout(this.mediaUpdateTimeout)
                this.mediaUpdateTimeout = null
                var k = this.media()
                f
                  ? (this.mediaUpdateTimeout = ra.setTimeout(
                      function () {
                        return g.load()
                      },
                      k ? (k.targetDuration / 2) * 1e3 : 5e3,
                    ))
                  : this.started
                    ? k && !k.endList
                      ? this.trigger('mediaupdatetimeout')
                      : this.trigger('loadedplaylist')
                    : this.start()
              }
              l.start = function () {
                var f = this
                this.started = !0
                this.isMaster_
                  ? this.requestMaster_(function (g, k) {
                      f.haveMaster_()
                      f.hasPendingRequest() ||
                        f.media_ ||
                        f.media(f.masterPlaylistLoader_.master.playlists[0])
                    })
                  : (this.mediaRequest_ = ra.setTimeout(function () {
                      return f.haveMaster_()
                    }, 0))
              }
              l.requestMaster_ = function (f) {
                var g = this
                this.request = this.vhs_.xhr(
                  { uri: this.masterPlaylistLoader_.srcUrl, withCredentials: this.withCredentials },
                  function (k, u) {
                    if (g.requestErrored_(k, u)) 'HAVE_NOTHING' === g.state && (g.started = !1)
                    else {
                      var w = u.responseText !== g.masterPlaylistLoader_.masterXml_
                      g.masterPlaylistLoader_.masterXml_ = u.responseText
                      g.masterLoaded_ =
                        u.responseHeaders && u.responseHeaders.date
                          ? Date.parse(u.responseHeaders.date)
                          : Date.now()
                      g.masterPlaylistLoader_.srcUrl = nf(
                        g.handleManifestRedirects,
                        g.masterPlaylistLoader_.srcUrl,
                        u,
                      )
                      if (w)
                        g.handleMaster_(),
                          g.syncClientServerClock_(function () {
                            return f(u, w)
                          })
                      else return f(u, w)
                    }
                  },
                )
              }
              l.syncClientServerClock_ = function (f) {
                var g = this,
                  k = Pp(fl(this.masterPlaylistLoader_.masterXml_))
                if (null === k)
                  return (
                    (this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now()),
                    f()
                  )
                if ('DIRECT' === k.method)
                  return (this.masterPlaylistLoader_.clientOffset_ = k.value - Date.now()), f()
                this.request = this.vhs_.xhr(
                  {
                    uri: lc(this.masterPlaylistLoader_.srcUrl, k.value),
                    method: k.method,
                    withCredentials: this.withCredentials,
                  },
                  function (u, w) {
                    if (g.request) {
                      if (u)
                        return (
                          (g.masterPlaylistLoader_.clientOffset_ = g.masterLoaded_ - Date.now()),
                          f()
                        )
                      u =
                        'HEAD' === k.method
                          ? w.responseHeaders && w.responseHeaders.date
                            ? Date.parse(w.responseHeaders.date)
                            : g.masterLoaded_
                          : Date.parse(w.responseText)
                      g.masterPlaylistLoader_.clientOffset_ = u - Date.now()
                      f()
                    }
                  },
                )
              }
              l.haveMaster_ = function () {
                this.state = 'HAVE_MASTER'
                this.isMaster_
                  ? this.trigger('loadedplaylist')
                  : this.media_ || this.media(this.childPlaylist_)
              }
              l.handleMaster_ = function () {
                this.mediaRequest_ = null
                var f = this.masterPlaylistLoader_.masterXml_
                var g = this.masterPlaylistLoader_.srcUrl
                var k = {
                  manifestUri: g,
                  clientOffset: this.masterPlaylistLoader_.clientOffset_,
                  sidxMapping: this.masterPlaylistLoader_.sidxMapping_,
                }
                void 0 === k && (k = {})
                f = fl(f)
                var u = k
                void 0 === u && (u = {})
                var w = u
                u = w.manifestUri
                u = void 0 === u ? '' : u
                var A = w.NOW
                A = void 0 === A ? Date.now() : A
                w = w.clientOffset
                var H = void 0 === w ? 0 : w
                w = eb(f, 'Period')
                if (!w.length) throw Error('INVALID_NUMBER_OF_PERIOD')
                var R = eb(f, 'Location'),
                  W = Ab(f)
                f = hf([u], eb(f, 'BaseURL'))
                W.sourceDuration = W.mediaPresentationDuration || 0
                W.NOW = A
                W.clientOffset = H
                R.length && (W.locations = R.map(sh))
                u = W.locations
                f = gf(w.map(Op(W, f))).map(Jp)
                k = Fp(f, u, k.sidxMapping)
                Bl(k, g)
                g = k
                ;(k = this.masterPlaylistLoader_.master) &&
                  (g = Bq(k, g, this.masterPlaylistLoader_.sidxMapping_))
                this.masterPlaylistLoader_.master = g ? g : k
                ;(f =
                  this.masterPlaylistLoader_.master.locations &&
                  this.masterPlaylistLoader_.master.locations[0]) &&
                  f !== this.masterPlaylistLoader_.srcUrl &&
                  (this.masterPlaylistLoader_.srcUrl = f)
                ;(!k || (g && g.minimumUpdatePeriod !== k.minimumUpdatePeriod)) &&
                  this.updateMinimumUpdatePeriodTimeout_()
                return !!g
              }
              l.updateMinimumUpdatePeriodTimeout_ = function () {
                var f = this.masterPlaylistLoader_
                f.createMupOnMedia_ &&
                  (f.off('loadedmetadata', f.createMupOnMedia_), (f.createMupOnMedia_ = null))
                f.minimumUpdatePeriodTimeout_ &&
                  (ra.clearTimeout(f.minimumUpdatePeriodTimeout_),
                  (f.minimumUpdatePeriodTimeout_ = null))
                var g = f.master && f.master.minimumUpdatePeriod
                0 === g &&
                  (f.media()
                    ? (g = 1e3 * f.media().targetDuration)
                    : ((f.createMupOnMedia_ = f.updateMinimumUpdatePeriodTimeout_),
                      f.one('loadedmetadata', f.createMupOnMedia_)))
                'number' !== typeof g || 0 >= g
                  ? 0 > g &&
                    this.logger_(
                      'found invalid minimumUpdatePeriod of ' + g + ', not setting a timeout',
                    )
                  : this.createMUPTimeout_(g)
              }
              l.createMUPTimeout_ = function (f) {
                var g = this.masterPlaylistLoader_
                g.minimumUpdatePeriodTimeout_ = ra.setTimeout(function () {
                  g.minimumUpdatePeriodTimeout_ = null
                  g.trigger('minimumUpdatePeriod')
                  g.createMUPTimeout_(f)
                }, f)
              }
              l.refreshXml_ = function () {
                var f = this
                this.requestMaster_(function (g, k) {
                  k &&
                    (f.media_ && (f.media_ = f.masterPlaylistLoader_.master.playlists[f.media_.id]),
                    (f.masterPlaylistLoader_.sidxMapping_ = Cq(
                      f.masterPlaylistLoader_.master,
                      f.masterPlaylistLoader_.sidxMapping_,
                    )),
                    f.addSidxSegments_(f.media(), f.state, function (u) {
                      f.refreshMedia_(f.media().id)
                    }))
                })
              }
              l.refreshMedia_ = function (f) {
                var g = this
                if (!f) throw Error('refreshMedia_ must take a media id')
                this.media_ && this.isMaster_ && this.handleMaster_()
                var k = this.masterPlaylistLoader_.master.playlists,
                  u = !this.media_ || this.media_ !== k[f]
                u ? (this.media_ = k[f]) : this.trigger('playlistunchanged')
                this.mediaUpdateTimeout ||
                  (function A() {
                    g.media().endList ||
                      (g.mediaUpdateTimeout = ra.setTimeout(
                        function () {
                          g.trigger('mediaupdatetimeout')
                          A()
                        },
                        El(g.media(), !!u),
                      ))
                  })()
                this.trigger('loadedplaylist')
              }
              return m
            })(U.EventTarget),
            lb = {
              GOAL_BUFFER_LENGTH: 30,
              MAX_GOAL_BUFFER_LENGTH: 60,
              BACK_BUFFER_LENGTH: 30,
              GOAL_BUFFER_LENGTH_RATE: 1,
              INITIAL_BANDWIDTH: 4194304,
              BANDWIDTH_VARIANCE: 1.2,
              BUFFER_LOW_WATER_LINE: 0,
              MAX_BUFFER_LOW_WATER_LINE: 30,
              EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,
              BUFFER_LOW_WATER_LINE_RATE: 1,
              BUFFER_HIGH_WATER_LINE: 30,
            },
            Vl = function (p) {
              for (var m = new Uint8Array(new ArrayBuffer(p.length)), l = 0; l < p.length; l++)
                m[l] = p.charCodeAt(l)
              return m.buffer
            },
            Wl = function (p) {
              p.on = p.addEventListener
              p.off = p.removeEventListener
              return p
            },
            Dq = function (p) {
              try {
                return URL.createObjectURL(new Blob([p], { type: 'application/javascript' }))
              } catch (l) {
                var m = new BlobBuilder()
                m.append(p)
                return URL.createObjectURL(m.getBlob())
              }
            },
            Xl = function (p) {
              return function () {
                var m = Dq(p),
                  l = Wl(new Worker(m))
                l.objURL = m
                var f = l.terminate
                l.on = l.addEventListener
                l.off = l.removeEventListener
                l.terminate = function () {
                  URL.revokeObjectURL(m)
                  return f.call(this)
                }
                return l
              }
            },
            Yl = function (p) {
              return (
                'var browserWorkerPolyFill = ' +
                Wl.toString() +
                ';\nbrowserWorkerPolyFill(self);\n' +
                p
              )
            },
            Zl = function (p) {
              return p
                .toString()
                .replace(/^function.+?{/, '')
                .slice(0, -1)
            },
            ir = Yl(
              Zl(function () {
                var p = function () {
                  this.init = function () {
                    var I = {}
                    this.on = function (O, C) {
                      I[O] || (I[O] = [])
                      I[O] = I[O].concat(C)
                    }
                    this.off = function (O, C) {
                      if (!I[O]) return !1
                      C = I[O].indexOf(C)
                      I[O] = I[O].slice()
                      I[O].splice(C, 1)
                      return -1 < C
                    }
                    this.trigger = function (O) {
                      var C, B
                      if ((C = I[O]))
                        if (2 === arguments.length) {
                          var E = C.length
                          for (B = 0; B < E; ++B) C[B].call(this, arguments[1])
                        } else {
                          var x = []
                          for (B = 1; B < arguments.length; ++B) x.push(arguments[B])
                          E = C.length
                          for (B = 0; B < E; ++B) C[B].apply(this, x)
                        }
                    }
                    this.dispose = function () {
                      I = {}
                    }
                  }
                }
                p.prototype.pipe = function (I) {
                  this.on('data', function (O) {
                    I.push(O)
                  })
                  this.on('done', function (O) {
                    I.flush(O)
                  })
                  this.on('partialdone', function (O) {
                    I.partialFlush(O)
                  })
                  this.on('endedtimeline', function (O) {
                    I.endTimeline(O)
                  })
                  this.on('reset', function (O) {
                    I.reset(O)
                  })
                  return I
                }
                p.prototype.push = function (I) {
                  this.trigger('data', I)
                }
                p.prototype.flush = function (I) {
                  this.trigger('done', I)
                }
                p.prototype.partialFlush = function (I) {
                  this.trigger('partialdone', I)
                }
                p.prototype.endTimeline = function (I) {
                  this.trigger('endedtimeline', I)
                }
                p.prototype.reset = function (I) {
                  this.trigger('reset', I)
                }
                var m = Math.pow(2, 32) - 1,
                  l,
                  f,
                  g,
                  k,
                  u,
                  w,
                  A,
                  H,
                  R,
                  W,
                  M,
                  T,
                  Q,
                  na,
                  oa,
                  ya
                ;(function () {
                  var I
                  g = {
                    avc1: [],
                    avcC: [],
                    btrt: [],
                    dinf: [],
                    dref: [],
                    esds: [],
                    ftyp: [],
                    hdlr: [],
                    mdat: [],
                    mdhd: [],
                    mdia: [],
                    mfhd: [],
                    minf: [],
                    moof: [],
                    moov: [],
                    mp4a: [],
                    mvex: [],
                    mvhd: [],
                    pasp: [],
                    sdtp: [],
                    smhd: [],
                    stbl: [],
                    stco: [],
                    stsc: [],
                    stsd: [],
                    stsz: [],
                    stts: [],
                    styp: [],
                    tfdt: [],
                    tfhd: [],
                    traf: [],
                    trak: [],
                    trun: [],
                    trex: [],
                    tkhd: [],
                    vmhd: [],
                  }
                  if ('undefined' !== typeof Uint8Array) {
                    for (I in g)
                      g.hasOwnProperty(I) &&
                        (g[I] = [
                          I.charCodeAt(0),
                          I.charCodeAt(1),
                          I.charCodeAt(2),
                          I.charCodeAt(3),
                        ])
                    k = new Uint8Array([105, 115, 111, 109])
                    w = new Uint8Array([97, 118, 99, 49])
                    u = new Uint8Array([0, 0, 0, 1])
                    A = new Uint8Array([
                      0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                      0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0,
                    ])
                    H = new Uint8Array([
                      0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                      0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0,
                    ])
                    R = { video: A, audio: H }
                    T = new Uint8Array([
                      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1,
                    ])
                    M = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])
                    na = Q = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])
                    oa = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
                    ya = Q
                    W = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                  }
                })()
                var da = function (I) {
                  var O = [],
                    C = 0,
                    B
                  for (B = 1; B < arguments.length; B++) O.push(arguments[B])
                  for (B = O.length; B--; ) C += O[B].byteLength
                  var E = new Uint8Array(C + 8)
                  new DataView(E.buffer, E.byteOffset, E.byteLength).setUint32(0, E.byteLength)
                  E.set(I, 4)
                  B = 0
                  for (C = 8; B < O.length; B++) E.set(O[B], C), (C += O[B].byteLength)
                  return E
                }
                var ka = function () {
                  return da(g.dinf, da(g.dref, T))
                }
                var sa = function (I) {
                  return da(
                    g.esds,
                    new Uint8Array([
                      0,
                      0,
                      0,
                      0,
                      3,
                      25,
                      0,
                      0,
                      0,
                      4,
                      17,
                      64,
                      21,
                      0,
                      6,
                      0,
                      0,
                      0,
                      218,
                      192,
                      0,
                      0,
                      218,
                      192,
                      5,
                      2,
                      (I.audioobjecttype << 3) | (I.samplingfrequencyindex >>> 1),
                      (I.samplingfrequencyindex << 7) | (I.channelcount << 3),
                      6,
                      1,
                      2,
                    ]),
                  )
                }
                var Ha = function () {
                  return da(g.ftyp, k, u, k, w)
                }
                var Sa = function (I) {
                  return da(g.hdlr, R[I])
                }
                var pb = function (I) {
                  var O = new Uint8Array([
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    3,
                    0,
                    1,
                    95,
                    144,
                    (I.duration >>> 24) & 255,
                    (I.duration >>> 16) & 255,
                    (I.duration >>> 8) & 255,
                    I.duration & 255,
                    85,
                    196,
                    0,
                    0,
                  ])
                  I.samplerate &&
                    ((O[12] = (I.samplerate >>> 24) & 255),
                    (O[13] = (I.samplerate >>> 16) & 255),
                    (O[14] = (I.samplerate >>> 8) & 255),
                    (O[15] = I.samplerate & 255))
                  return da(g.mdhd, O)
                }
                var Za = function (I) {
                  return da(g.mdia, pb(I), Sa(I.type), Tb(I))
                }
                var mb = function (I) {
                  return da(
                    g.mfhd,
                    new Uint8Array([
                      0,
                      0,
                      0,
                      0,
                      (I & 4278190080) >> 24,
                      (I & 16711680) >> 16,
                      (I & 65280) >> 8,
                      I & 255,
                    ]),
                  )
                }
                var Tb = function (I) {
                  return da(g.minf, 'video' === I.type ? da(g.vmhd, W) : da(g.smhd, M), ka(), Eq(I))
                }
                var oc = function (I) {
                  for (var O = I.length, C = []; O--; ) C[O] = Fq(I[O])
                  return da.apply(null, [g.moov, Kh(4294967295)].concat(C).concat(Cd(I)))
                }
                var Cd = function (I) {
                  for (var O = I.length, C = []; O--; ) C[O] = Gq(I[O])
                  return da.apply(null, [g.mvex].concat(C))
                }
                var Kh = function (I) {
                  I = new Uint8Array([
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2,
                    0,
                    1,
                    95,
                    144,
                    (I & 4278190080) >> 24,
                    (I & 16711680) >> 16,
                    (I & 65280) >> 8,
                    I & 255,
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    64,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    255,
                    255,
                    255,
                    255,
                  ])
                  return da(g.mvhd, I)
                }
                var Hq = function (I) {
                  I = I.samples || []
                  var O = new Uint8Array(4 + I.length),
                    C
                  for (C = 0; C < I.length; C++) {
                    var B = I[C].flags
                    O[C + 4] = (B.dependsOn << 4) | (B.isDependedOn << 2) | B.hasRedundancy
                  }
                  return da(g.sdtp, O)
                }
                var Eq = function (I) {
                  return da(
                    g.stbl,
                    l(I),
                    da(g.stts, ya),
                    da(g.stsc, na),
                    da(g.stsz, oa),
                    da(g.stco, Q),
                  )
                }
                ;(function () {
                  l = function (C) {
                    return da(
                      g.stsd,
                      new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]),
                      'video' === C.type ? I(C) : O(C),
                    )
                  }
                  var I = function (C) {
                    var B = C.sps || [],
                      E = C.pps || [],
                      x = [],
                      J = [],
                      K
                    for (K = 0; K < B.length; K++)
                      x.push((B[K].byteLength & 65280) >>> 8),
                        x.push(B[K].byteLength & 255),
                        (x = x.concat(Array.prototype.slice.call(B[K])))
                    for (K = 0; K < E.length; K++)
                      J.push((E[K].byteLength & 65280) >>> 8),
                        J.push(E[K].byteLength & 255),
                        (J = J.concat(Array.prototype.slice.call(E[K])))
                    B = [
                      g.avc1,
                      new Uint8Array([
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        (C.width & 65280) >> 8,
                        C.width & 255,
                        (C.height & 65280) >> 8,
                        C.height & 255,
                        0,
                        72,
                        0,
                        0,
                        0,
                        72,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        19,
                        118,
                        105,
                        100,
                        101,
                        111,
                        106,
                        115,
                        45,
                        99,
                        111,
                        110,
                        116,
                        114,
                        105,
                        98,
                        45,
                        104,
                        108,
                        115,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        24,
                        17,
                        17,
                      ]),
                      da(
                        g.avcC,
                        new Uint8Array(
                          [1, C.profileIdc, C.profileCompatibility, C.levelIdc, 255].concat(
                            [B.length],
                            x,
                            [E.length],
                            J,
                          ),
                        ),
                      ),
                      da(
                        g.btrt,
                        new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]),
                      ),
                    ]
                    C.sarRatio &&
                      ((E = C.sarRatio[0]),
                      (C = C.sarRatio[1]),
                      B.push(
                        da(
                          g.pasp,
                          new Uint8Array([
                            (E & 4278190080) >> 24,
                            (E & 16711680) >> 16,
                            (E & 65280) >> 8,
                            E & 255,
                            (C & 4278190080) >> 24,
                            (C & 16711680) >> 16,
                            (C & 65280) >> 8,
                            C & 255,
                          ]),
                        ),
                      ))
                    return da.apply(null, B)
                  }
                  var O = function (C) {
                    return da(
                      g.mp4a,
                      new Uint8Array([
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        (C.channelcount & 65280) >> 8,
                        C.channelcount & 255,
                        (C.samplesize & 65280) >> 8,
                        C.samplesize & 255,
                        0,
                        0,
                        0,
                        0,
                        (C.samplerate & 65280) >> 8,
                        C.samplerate & 255,
                        0,
                        0,
                      ]),
                      sa(C),
                    )
                  }
                })()
                var Iq = function (I) {
                  I = new Uint8Array([
                    0,
                    0,
                    0,
                    7,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    (I.id & 4278190080) >> 24,
                    (I.id & 16711680) >> 16,
                    (I.id & 65280) >> 8,
                    I.id & 255,
                    0,
                    0,
                    0,
                    0,
                    (I.duration & 4278190080) >> 24,
                    (I.duration & 16711680) >> 16,
                    (I.duration & 65280) >> 8,
                    I.duration & 255,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    64,
                    0,
                    0,
                    0,
                    (I.width & 65280) >> 8,
                    I.width & 255,
                    0,
                    0,
                    (I.height & 65280) >> 8,
                    I.height & 255,
                    0,
                    0,
                  ])
                  return da(g.tkhd, I)
                }
                var Jq = function (I) {
                  var O = da(
                    g.tfhd,
                    new Uint8Array([
                      0,
                      0,
                      0,
                      58,
                      (I.id & 4278190080) >> 24,
                      (I.id & 16711680) >> 16,
                      (I.id & 65280) >> 8,
                      I.id & 255,
                      0,
                      0,
                      0,
                      1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ]),
                  )
                  var C = Math.floor(I.baseMediaDecodeTime / (m + 1))
                  var B = Math.floor(I.baseMediaDecodeTime % (m + 1))
                  C = da(
                    g.tfdt,
                    new Uint8Array([
                      1,
                      0,
                      0,
                      0,
                      (C >>> 24) & 255,
                      (C >>> 16) & 255,
                      (C >>> 8) & 255,
                      C & 255,
                      (B >>> 24) & 255,
                      (B >>> 16) & 255,
                      (B >>> 8) & 255,
                      B & 255,
                    ]),
                  )
                  if ('audio' === I.type) return (I = f(I, 92)), da(g.traf, O, C, I)
                  B = Hq(I)
                  I = f(I, B.length + 92)
                  return da(g.traf, O, C, I, B)
                }
                var Fq = function (I) {
                  I.duration = I.duration || 4294967295
                  return da(g.trak, Iq(I), Za(I))
                }
                var Gq = function (I) {
                  var O = new Uint8Array([
                    0,
                    0,
                    0,
                    0,
                    (I.id & 4278190080) >> 24,
                    (I.id & 16711680) >> 16,
                    (I.id & 65280) >> 8,
                    I.id & 255,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    1,
                  ])
                  'video' !== I.type && (O[O.length - 1] = 0)
                  return da(g.trex, O)
                }
                ;(function () {
                  var I = function (B, E) {
                    var x = 0,
                      J = 0,
                      K = 0,
                      D = 0
                    B.length &&
                      (void 0 !== B[0].duration && (x = 1),
                      void 0 !== B[0].size && (J = 2),
                      void 0 !== B[0].flags && (K = 4),
                      void 0 !== B[0].compositionTimeOffset && (D = 8))
                    return [
                      0,
                      0,
                      x | J | K | D,
                      1,
                      (B.length & 4278190080) >>> 24,
                      (B.length & 16711680) >>> 16,
                      (B.length & 65280) >>> 8,
                      B.length & 255,
                      (E & 4278190080) >>> 24,
                      (E & 16711680) >>> 16,
                      (E & 65280) >>> 8,
                      E & 255,
                    ]
                  }
                  var O = function (B, E) {
                    var x
                    B = B.samples || []
                    E += 20 + 16 * B.length
                    var J = I(B, E)
                    E = new Uint8Array(J.length + 16 * B.length)
                    E.set(J)
                    J = J.length
                    for (x = 0; x < B.length; x++) {
                      var K = B[x]
                      E[J++] = (K.duration & 4278190080) >>> 24
                      E[J++] = (K.duration & 16711680) >>> 16
                      E[J++] = (K.duration & 65280) >>> 8
                      E[J++] = K.duration & 255
                      E[J++] = (K.size & 4278190080) >>> 24
                      E[J++] = (K.size & 16711680) >>> 16
                      E[J++] = (K.size & 65280) >>> 8
                      E[J++] = K.size & 255
                      E[J++] = (K.flags.isLeading << 2) | K.flags.dependsOn
                      E[J++] =
                        (K.flags.isDependedOn << 6) |
                        (K.flags.hasRedundancy << 4) |
                        (K.flags.paddingValue << 1) |
                        K.flags.isNonSyncSample
                      E[J++] = K.flags.degradationPriority & 61440
                      E[J++] = K.flags.degradationPriority & 15
                      E[J++] = (K.compositionTimeOffset & 4278190080) >>> 24
                      E[J++] = (K.compositionTimeOffset & 16711680) >>> 16
                      E[J++] = (K.compositionTimeOffset & 65280) >>> 8
                      E[J++] = K.compositionTimeOffset & 255
                    }
                    return da(g.trun, E)
                  }
                  var C = function (B, E) {
                    var x
                    B = B.samples || []
                    E += 20 + 8 * B.length
                    var J = I(B, E)
                    E = new Uint8Array(J.length + 8 * B.length)
                    E.set(J)
                    J = J.length
                    for (x = 0; x < B.length; x++) {
                      var K = B[x]
                      E[J++] = (K.duration & 4278190080) >>> 24
                      E[J++] = (K.duration & 16711680) >>> 16
                      E[J++] = (K.duration & 65280) >>> 8
                      E[J++] = K.duration & 255
                      E[J++] = (K.size & 4278190080) >>> 24
                      E[J++] = (K.size & 16711680) >>> 16
                      E[J++] = (K.size & 65280) >>> 8
                      E[J++] = K.size & 255
                    }
                    return da(g.trun, E)
                  }
                  f = function (B, E) {
                    return 'audio' === B.type ? C(B, E) : O(B, E)
                  }
                })()
                var gc = {
                    ftyp: Ha,
                    mdat: function (I) {
                      return da(g.mdat, I)
                    },
                    moof: function (I, O) {
                      for (var C = [], B = O.length; B--; ) C[B] = Jq(O[B])
                      return da.apply(null, [g.moof, mb(I)].concat(C))
                    },
                    moov: oc,
                    initSegment: function (I) {
                      var O = Ha()
                      I = oc(I)
                      var C = new Uint8Array(O.byteLength + I.byteLength)
                      C.set(O)
                      C.set(I, O.byteLength)
                      return C
                    },
                  },
                  $l = function (I, O) {
                    var C = {
                      size: 0,
                      flags: {
                        isLeading: 0,
                        dependsOn: 1,
                        isDependedOn: 0,
                        hasRedundancy: 0,
                        degradationPriority: 0,
                        isNonSyncSample: 1,
                      },
                    }
                    C.dataOffset = O
                    C.compositionTimeOffset = I.pts - I.dts
                    C.duration = I.duration
                    C.size = 4 * I.length
                    C.size += I.byteLength
                    I.keyFrame && ((C.flags.dependsOn = 2), (C.flags.isNonSyncSample = 0))
                    return C
                  },
                  pc = {
                    groupNalsIntoFrames: function (I) {
                      var O,
                        C = [],
                        B = []
                      B.byteLength = 0
                      B.nalCount = 0
                      B.duration = 0
                      for (O = C.byteLength = 0; O < I.length; O++) {
                        var E = I[O]
                        'access_unit_delimiter_rbsp' === E.nalUnitType
                          ? (C.length &&
                              ((C.duration = E.dts - C.dts),
                              (B.byteLength += C.byteLength),
                              (B.nalCount += C.length),
                              (B.duration += C.duration),
                              B.push(C)),
                            (C = [E]),
                            (C.byteLength = E.data.byteLength),
                            (C.pts = E.pts),
                            (C.dts = E.dts))
                          : ('slice_layer_without_partitioning_rbsp_idr' === E.nalUnitType &&
                              (C.keyFrame = !0),
                            (C.duration = E.dts - C.dts),
                            (C.byteLength += E.data.byteLength),
                            C.push(E))
                      }
                      B.length &&
                        (!C.duration || 0 >= C.duration) &&
                        (C.duration = B[B.length - 1].duration)
                      B.byteLength += C.byteLength
                      B.nalCount += C.length
                      B.duration += C.duration
                      B.push(C)
                      return B
                    },
                    groupFramesIntoGops: function (I) {
                      var O,
                        C = [],
                        B = []
                      C.byteLength = 0
                      C.nalCount = 0
                      C.duration = 0
                      C.pts = I[0].pts
                      C.dts = I[0].dts
                      B.byteLength = 0
                      B.nalCount = 0
                      B.duration = 0
                      B.pts = I[0].pts
                      B.dts = I[0].dts
                      for (O = 0; O < I.length; O++) {
                        var E = I[O]
                        E.keyFrame
                          ? (C.length &&
                              (B.push(C),
                              (B.byteLength += C.byteLength),
                              (B.nalCount += C.nalCount),
                              (B.duration += C.duration)),
                            (C = [E]),
                            (C.nalCount = E.length),
                            (C.byteLength = E.byteLength),
                            (C.pts = E.pts),
                            (C.dts = E.dts),
                            (C.duration = E.duration))
                          : ((C.duration += E.duration),
                            (C.nalCount += E.length),
                            (C.byteLength += E.byteLength),
                            C.push(E))
                      }
                      B.length && 0 >= C.duration && (C.duration = B[B.length - 1].duration)
                      B.byteLength += C.byteLength
                      B.nalCount += C.nalCount
                      B.duration += C.duration
                      B.push(C)
                      return B
                    },
                    extendFirstKeyFrame: function (I) {
                      if (!I[0][0].keyFrame && 1 < I.length) {
                        var O = I.shift()
                        I.byteLength -= O.byteLength
                        I.nalCount -= O.nalCount
                        I[0][0].dts = O.dts
                        I[0][0].pts = O.pts
                        I[0][0].duration += O.duration
                      }
                      return I
                    },
                    generateSampleTable: function (I, O) {
                      var C,
                        B = O || 0,
                        E = []
                      for (O = 0; O < I.length; O++) {
                        var x = I[O]
                        for (C = 0; C < x.length; C++) {
                          var J = x[C]
                          J = $l(J, B)
                          B += J.size
                          E.push(J)
                        }
                      }
                      return E
                    },
                    concatenateNalData: function (I) {
                      var O,
                        C,
                        B,
                        E = 0,
                        x = new Uint8Array(I.byteLength + 4 * I.nalCount),
                        J = new DataView(x.buffer)
                      for (O = 0; O < I.length; O++) {
                        var K = I[O]
                        for (C = 0; C < K.length; C++) {
                          var D = K[C]
                          for (B = 0; B < D.length; B++) {
                            var N = D[B]
                            J.setUint32(E, N.data.byteLength)
                            E += 4
                            x.set(N.data, E)
                            E += N.data.byteLength
                          }
                        }
                      }
                      return x
                    },
                    generateSampleTableForFrame: function (I, O) {
                      var C = []
                      I = $l(I, O || 0)
                      C.push(I)
                      return C
                    },
                    concatenateNalDataForFrame: function (I) {
                      var O,
                        C = 0,
                        B = new Uint8Array(I.byteLength + 4 * I.length),
                        E = new DataView(B.buffer)
                      for (O = 0; O < I.length; O++) {
                        var x = I[O]
                        E.setUint32(C, x.data.byteLength)
                        C += 4
                        B.set(x.data, C)
                        C += x.data.byteLength
                      }
                      return B
                    },
                  },
                  Mc = [33, 16, 5, 32, 164, 27],
                  Lh = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252],
                  Ma = function (I) {
                    for (var O = []; I--; ) O.push(0)
                    return O
                  },
                  Kq = function (I) {
                    return Object.keys(I).reduce(function (O, C) {
                      O[C] = new Uint8Array(
                        I[C].reduce(function (B, E) {
                          return B.concat(E)
                        }, []),
                      )
                      return O
                    }, {})
                  },
                  Mh
                var am = function (I) {
                  return 9e4 * I
                }
                var bm = function (I, O) {
                  return I * O
                }
                var Nh = function (I) {
                  return I / 9e4
                }
                var cm = function (I, O) {
                  return I / O
                }
                var Ca = {
                    ONE_SECOND_IN_TS: 9e4,
                    secondsToVideoTs: am,
                    secondsToAudioTs: bm,
                    videoTsToSeconds: Nh,
                    audioTsToSeconds: cm,
                    audioTsToVideoTs: function (I, O) {
                      return am(cm(I, O))
                    },
                    videoTsToAudioTs: function (I, O) {
                      return bm(Nh(I), O)
                    },
                    metadataTsToSeconds: function (I, O, C) {
                      return Nh(C ? I : I - O)
                    },
                  },
                  Nc = {
                    prefixWithSilence: function (I, O, C, B) {
                      var E,
                        x = (E = 0)
                      if (O.length) {
                        var J = Ca.audioTsToVideoTs(I.baseMediaDecodeTime, I.samplerate)
                        var K = Math.ceil(Ca.ONE_SECOND_IN_TS / (I.samplerate / 1024))
                        C && B && ((E = J - Math.max(C, B)), (E = Math.floor(E / K)), (x = E * K))
                        if (!(1 > E || x > Ca.ONE_SECOND_IN_TS / 2)) {
                          Mh ||
                            ((C = {
                              96e3: [Mc, [227, 64], Ma(154), [56]],
                              88200: [Mc, [231], Ma(170), [56]],
                              64e3: [Mc, [248, 192], Ma(240), [56]],
                              48e3: [Mc, [255, 192], Ma(268), [55, 148, 128], Ma(54), [112]],
                              44100: [Mc, [255, 192], Ma(268), [55, 163, 128], Ma(84), [112]],
                              32e3: [Mc, [255, 192], Ma(268), [55, 234], Ma(226), [112]],
                              24e3: [
                                Mc,
                                [255, 192],
                                Ma(268),
                                [55, 255, 128],
                                Ma(268),
                                [111, 112],
                                Ma(126),
                                [224],
                              ],
                              16e3: [
                                Mc,
                                [255, 192],
                                Ma(268),
                                [55, 255, 128],
                                Ma(268),
                                [111, 255],
                                Ma(269),
                                [223, 108],
                                Ma(195),
                                [1, 192],
                              ],
                              12e3: [
                                Lh,
                                Ma(268),
                                [3, 127, 248],
                                Ma(268),
                                [6, 255, 240],
                                Ma(268),
                                [13, 255, 224],
                                Ma(268),
                                [27, 253, 128],
                                Ma(259),
                                [56],
                              ],
                              11025: [
                                Lh,
                                Ma(268),
                                [3, 127, 248],
                                Ma(268),
                                [6, 255, 240],
                                Ma(268),
                                [13, 255, 224],
                                Ma(268),
                                [27, 255, 192],
                                Ma(268),
                                [55, 175, 128],
                                Ma(108),
                                [112],
                              ],
                              8e3: [Lh, Ma(268), [3, 121, 16], Ma(47), [7]],
                            }),
                            (Mh = Kq(C)))
                          C = Mh[I.samplerate]
                          C || (C = O[0].data)
                          for (B = 0; B < E; B++)
                            (J = O[0]), O.splice(0, 0, { data: C, dts: J.dts - K, pts: J.pts - K })
                          I.baseMediaDecodeTime -= Math.floor(Ca.videoTsToAudioTs(x, I.samplerate))
                          return x
                        }
                      }
                    },
                    trimAdtsFramesByEarliestDts: function (I, O, C) {
                      if (O.minSegmentDts >= C) return I
                      O.minSegmentDts = Infinity
                      return I.filter(function (B) {
                        return B.dts >= C
                          ? ((O.minSegmentDts = Math.min(O.minSegmentDts, B.dts)),
                            (O.minSegmentPts = O.minSegmentDts),
                            !0)
                          : !1
                      })
                    },
                    generateSampleTable: function (I) {
                      var O,
                        C = []
                      for (O = 0; O < I.length; O++) {
                        var B = I[O]
                        C.push({ size: B.data.byteLength, duration: 1024 })
                      }
                      return C
                    },
                    concatenateFrameData: function (I) {
                      var O,
                        C = 0
                      var B = Uint8Array
                      var E = 0
                      for (O = 0; O < I.length; O++) {
                        var x = I[O]
                        E += x.data.byteLength
                      }
                      x = new B(E)
                      for (B = 0; B < I.length; B++)
                        (O = I[B]), x.set(O.data, C), (C += O.data.byteLength)
                      return x
                    },
                  },
                  Lq = Ca.ONE_SECOND_IN_TS,
                  $a = {
                    clearDtsInfo: function (I) {
                      delete I.minSegmentDts
                      delete I.maxSegmentDts
                      delete I.minSegmentPts
                      delete I.maxSegmentPts
                    },
                    calculateTrackBaseMediaDecodeTime: function (I, O) {
                      var C = I.minSegmentDts
                      O || (C -= I.timelineStartInfo.dts)
                      O = I.timelineStartInfo.baseMediaDecodeTime
                      O = Math.max(0, O + C)
                      'audio' === I.type && ((I = I.samplerate / Lq), (O = Math.floor(O * I)))
                      return O
                    },
                    collectDtsInfo: function (I, O) {
                      'number' === typeof O.pts &&
                        (void 0 === I.timelineStartInfo.pts && (I.timelineStartInfo.pts = O.pts),
                        (I.minSegmentPts =
                          void 0 === I.minSegmentPts ? O.pts : Math.min(I.minSegmentPts, O.pts)),
                        (I.maxSegmentPts =
                          void 0 === I.maxSegmentPts ? O.pts : Math.max(I.maxSegmentPts, O.pts)))
                      'number' === typeof O.dts &&
                        (void 0 === I.timelineStartInfo.dts && (I.timelineStartInfo.dts = O.dts),
                        (I.minSegmentDts =
                          void 0 === I.minSegmentDts ? O.dts : Math.min(I.minSegmentDts, O.dts)),
                        (I.maxSegmentDts =
                          void 0 === I.maxSegmentDts ? O.dts : Math.max(I.maxSegmentDts, O.dts)))
                    },
                  },
                  me = {
                    parseSei: function (I) {
                      for (
                        var O = 0, C = { payloadType: -1, payloadSize: 0 }, B = 0, E = 0;
                        O < I.byteLength && 128 !== I[O];

                      ) {
                        for (; 255 === I[O]; ) (B += 255), O++
                        for (B += I[O++]; 255 === I[O]; ) (E += 255), O++
                        E += I[O++]
                        if (!C.payload && 4 === B)
                          if (
                            'GA94' === String.fromCharCode(I[O + 3], I[O + 4], I[O + 5], I[O + 6])
                          ) {
                            C.payloadType = B
                            C.payloadSize = E
                            C.payload = I.subarray(O, O + E)
                            break
                          } else C.payload = void 0
                        O += E
                        E = B = 0
                      }
                      return C
                    },
                    parseUserData: function (I) {
                      return 181 !== I.payload[0] ||
                        49 !== ((I.payload[1] << 8) | I.payload[2]) ||
                        'GA94' !==
                          String.fromCharCode(
                            I.payload[3],
                            I.payload[4],
                            I.payload[5],
                            I.payload[6],
                          ) ||
                        3 !== I.payload[7]
                        ? null
                        : I.payload.subarray(8, I.payload.length - 1)
                    },
                    parseCaptionPackets: function (I, O) {
                      var C = [],
                        B
                      if (!(O[0] & 64)) return C
                      var E = O[0] & 31
                      for (B = 0; B < E; B++) {
                        var x = 3 * B
                        var J = { type: O[x + 2] & 3, pts: I }
                        O[x + 2] & 4 && ((J.ccData = (O[x + 3] << 8) | O[x + 4]), C.push(J))
                      }
                      return C
                    },
                    discardEmulationPreventionBytes: function (I) {
                      for (var O = I.byteLength, C = [], B = 1, E; B < O - 2; )
                        0 === I[B] && 0 === I[B + 1] && 3 === I[B + 2]
                          ? (C.push(B + 2), (B += 2))
                          : B++
                      if (0 === C.length) return I
                      O -= C.length
                      E = new Uint8Array(O)
                      var x = 0
                      for (B = 0; B < O; x++, B++) x === C[0] && (x++, C.shift()), (E[B] = I[x])
                      return E
                    },
                    USER_DATA_REGISTERED_ITU_T_T35: 4,
                  },
                  Hb = function C(O) {
                    O = O || {}
                    C.prototype.init.call(this)
                    this.parse708captions_ =
                      'boolean' === typeof O.parse708captions ? O.parse708captions : !0
                    this.captionPackets_ = []
                    this.ccStreams_ = [new Ta(0, 0), new Ta(0, 1), new Ta(1, 0), new Ta(1, 1)]
                    this.parse708captions_ && (this.cc708Stream_ = new Qa())
                    this.reset()
                    this.ccStreams_.forEach(function (B) {
                      B.on('data', this.trigger.bind(this, 'data'))
                      B.on('partialdone', this.trigger.bind(this, 'partialdone'))
                      B.on('done', this.trigger.bind(this, 'done'))
                    }, this)
                    this.parse708captions_ &&
                      (this.cc708Stream_.on('data', this.trigger.bind(this, 'data')),
                      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone')),
                      this.cc708Stream_.on('done', this.trigger.bind(this, 'done')))
                  }
                Hb.prototype = new p()
                Hb.prototype.push = function (O) {
                  if ('sei_rbsp' === O.nalUnitType) {
                    var C = me.parseSei(O.escapedRBSP)
                    C.payload &&
                      C.payloadType === me.USER_DATA_REGISTERED_ITU_T_T35 &&
                      (C = me.parseUserData(C)) &&
                      (O.dts < this.latestDts_
                        ? (this.ignoreNextEqualDts_ = !0)
                        : O.dts === this.latestDts_ && this.ignoreNextEqualDts_
                          ? (this.numSameDts_--,
                            this.numSameDts_ || (this.ignoreNextEqualDts_ = !1))
                          : ((C = me.parseCaptionPackets(O.pts, C)),
                            (this.captionPackets_ = this.captionPackets_.concat(C)),
                            this.latestDts_ !== O.dts && (this.numSameDts_ = 0),
                            this.numSameDts_++,
                            (this.latestDts_ = O.dts)))
                  }
                }
                Hb.prototype.flushCCStreams = function (O) {
                  this.ccStreams_.forEach(function (C) {
                    return 'flush' === O ? C.flush() : C.partialFlush()
                  }, this)
                }
                Hb.prototype.flushStream = function (O) {
                  this.captionPackets_.length &&
                    (this.captionPackets_.forEach(function (C, B) {
                      C.presortIndex = B
                    }),
                    this.captionPackets_.sort(function (C, B) {
                      return C.pts === B.pts ? C.presortIndex - B.presortIndex : C.pts - B.pts
                    }),
                    this.captionPackets_.forEach(function (C) {
                      2 > C.type ? this.dispatchCea608Packet(C) : this.dispatchCea708Packet(C)
                    }, this),
                    (this.captionPackets_.length = 0))
                  this.flushCCStreams(O)
                }
                Hb.prototype.flush = function () {
                  return this.flushStream('flush')
                }
                Hb.prototype.partialFlush = function () {
                  return this.flushStream('partialFlush')
                }
                Hb.prototype.reset = function () {
                  this.latestDts_ = null
                  this.ignoreNextEqualDts_ = !1
                  this.numSameDts_ = 0
                  this.activeCea608Channel_ = [null, null]
                  this.ccStreams_.forEach(function (O) {
                    O.reset()
                  })
                }
                Hb.prototype.dispatchCea608Packet = function (O) {
                  this.setsTextOrXDSActive(O)
                    ? (this.activeCea608Channel_[O.type] = null)
                    : this.setsChannel1Active(O)
                      ? (this.activeCea608Channel_[O.type] = 0)
                      : this.setsChannel2Active(O) && (this.activeCea608Channel_[O.type] = 1)
                  null !== this.activeCea608Channel_[O.type] &&
                    this.ccStreams_[(O.type << 1) + this.activeCea608Channel_[O.type]].push(O)
                }
                Hb.prototype.setsChannel1Active = function (O) {
                  return 4096 === (O.ccData & 30720)
                }
                Hb.prototype.setsChannel2Active = function (O) {
                  return 6144 === (O.ccData & 30720)
                }
                Hb.prototype.setsTextOrXDSActive = function (O) {
                  return (
                    256 === (O.ccData & 28928) ||
                    4138 === (O.ccData & 30974) ||
                    6186 === (O.ccData & 30974)
                  )
                }
                Hb.prototype.dispatchCea708Packet = function (O) {
                  this.parse708captions_ && this.cc708Stream_.push(O)
                }
                var Mq = {
                    127: 9834,
                    4128: 32,
                    4129: 160,
                    4133: 8230,
                    4138: 352,
                    4140: 338,
                    4144: 9608,
                    4145: 8216,
                    4146: 8217,
                    4147: 8220,
                    4148: 8221,
                    4149: 8226,
                    4153: 8482,
                    4154: 353,
                    4156: 339,
                    4157: 8480,
                    4159: 376,
                    4214: 8539,
                    4215: 8540,
                    4216: 8541,
                    4217: 8542,
                    4218: 9168,
                    4219: 9124,
                    4220: 9123,
                    4221: 9135,
                    4222: 9126,
                    4223: 9121,
                    4256: 12600,
                  },
                  zc = function (O) {
                    this.windowNum = O
                    this.reset()
                  }
                zc.prototype.reset = function () {
                  this.clearText()
                  this.pendingNewLine = !1
                  this.winAttr = {}
                  this.penAttr = {}
                  this.penLoc = {}
                  this.penColor = {}
                  this.anchorPoint =
                    this.anchorHorizontal =
                    this.anchorVertical =
                    this.relativePositioning =
                    this.priority =
                    this.columnLock =
                    this.rowLock =
                    this.visible =
                      0
                  this.rowCount = 1
                  this.virtualRowCount = this.rowCount + 1
                  this.columnCount = 41
                  this.penStyle = this.windowStyle = 0
                }
                zc.prototype.getText = function () {
                  return this.rows.join('\n')
                }
                zc.prototype.clearText = function () {
                  this.rows = ['']
                  this.rowIdx = 0
                }
                zc.prototype.newLine = function (O) {
                  this.rows.length >= this.virtualRowCount &&
                    'function' === typeof this.beforeRowOverflow &&
                    this.beforeRowOverflow(O)
                  0 < this.rows.length && (this.rows.push(''), this.rowIdx++)
                  for (; this.rows.length > this.virtualRowCount; ) this.rows.shift(), this.rowIdx--
                }
                zc.prototype.isEmpty = function () {
                  return 0 === this.rows.length
                    ? !0
                    : 1 === this.rows.length
                      ? '' === this.rows[0]
                      : !1
                }
                zc.prototype.addText = function (O) {
                  this.rows[this.rowIdx] += O
                }
                zc.prototype.backspace = function () {
                  if (!this.isEmpty()) {
                    var O = this.rows[this.rowIdx]
                    this.rows[this.rowIdx] = O.substr(0, O.length - 1)
                  }
                }
                var Oh = function (O) {
                  this.serviceNum = O
                  this.text = ''
                  this.currentWindow = new zc(-1)
                  this.windows = []
                }
                Oh.prototype.init = function (O, C) {
                  this.startPts = O
                  for (O = 0; 8 > O; O++)
                    (this.windows[O] = new zc(O)),
                      'function' === typeof C && (this.windows[O].beforeRowOverflow = C)
                }
                Oh.prototype.setCurrentWindow = function (O) {
                  this.currentWindow = this.windows[O]
                }
                var Qa = function C() {
                  C.prototype.init.call(this)
                  var B = this
                  this.current708Packet = null
                  this.services = {}
                  this.push = function (E) {
                    3 === E.type
                      ? B.new708Packet()
                      : null === B.current708Packet && B.new708Packet()
                    B.add708Bytes(E)
                  }
                }
                Qa.prototype = new p()
                Qa.prototype.new708Packet = function () {
                  null !== this.current708Packet && this.push708Packet()
                  this.current708Packet = { data: [], ptsVals: [] }
                }
                Qa.prototype.add708Bytes = function (C) {
                  var B = C.ccData,
                    E = B >>> 8
                  B &= 255
                  this.current708Packet.ptsVals.push(C.pts)
                  this.current708Packet.data.push(E)
                  this.current708Packet.data.push(B)
                }
                Qa.prototype.push708Packet = function () {
                  var C = this.current708Packet,
                    B = C.data,
                    E = 0,
                    x = B[E++]
                  C.seq = x >> 6
                  for (C.sizeCode = x & 63; E < B.length; E++) {
                    x = B[E++]
                    C = x >> 5
                    var J = x & 31
                    7 === C && 0 < J && (C = x = B[E++])
                    this.pushServiceBlock(C, E, J)
                    0 < J && (E += J - 1)
                  }
                }
                Qa.prototype.pushServiceBlock = function (C, B, E) {
                  var x = B,
                    J = this.current708Packet.data,
                    K = this.services[C]
                  for (K || (K = this.initService(C, x)); x < B + E && x < J.length; x++)
                    (C = J[x]),
                      (32 <= C && 127 >= C) || (160 <= C && 255 >= C)
                        ? (x = this.handleText(x, K))
                        : 16 === C
                          ? (x = this.extendedCommands(x, K))
                          : 128 <= C && 135 >= C
                            ? (x = this.setCurrentWindow(x, K))
                            : 152 <= C && 159 >= C
                              ? (x = this.defineWindow(x, K))
                              : 136 === C
                                ? (x = this.clearWindows(x, K))
                                : 140 === C
                                  ? (x = this.deleteWindows(x, K))
                                  : 137 === C
                                    ? (x = this.displayWindows(x, K))
                                    : 138 === C
                                      ? (x = this.hideWindows(x, K))
                                      : 139 === C
                                        ? (x = this.toggleWindows(x, K))
                                        : 151 === C
                                          ? (x = this.setWindowAttributes(x, K))
                                          : 144 === C
                                            ? (x = this.setPenAttributes(x, K))
                                            : 145 === C
                                              ? (x = this.setPenColor(x, K))
                                              : 146 === C
                                                ? (x = this.setPenLocation(x, K))
                                                : 143 === C
                                                  ? (K = this.reset(x, K))
                                                  : 8 === C
                                                    ? K.currentWindow.backspace()
                                                    : 12 === C
                                                      ? K.currentWindow.clearText()
                                                      : 13 === C
                                                        ? (K.currentWindow.pendingNewLine = !0)
                                                        : 14 === C
                                                          ? K.currentWindow.clearText()
                                                          : 141 === C && x++
                }
                Qa.prototype.extendedCommands = function (C, B) {
                  var E = this.current708Packet.data[++C]
                  if ((32 <= E && 127 >= E) || (160 <= E && 255 >= E)) C = this.handleText(C, B, !0)
                  return C
                }
                Qa.prototype.getPts = function (C) {
                  return this.current708Packet.ptsVals[Math.floor(C / 2)]
                }
                Qa.prototype.initService = function (C, B) {
                  var E = this
                  this.services[C] = new Oh(C)
                  this.services[C].init(this.getPts(B), function (x) {
                    E.flushDisplayed(x, E.services[C])
                  })
                  return this.services[C]
                }
                Qa.prototype.handleText = function (C, B, E) {
                  E = (E ? 4096 : 0) | this.current708Packet.data[C]
                  var x = Mq[E] || E
                  E = E & 4096 && E === x ? '' : String.fromCharCode(x)
                  B = B.currentWindow
                  B.pendingNewLine && !B.isEmpty() && B.newLine(this.getPts(C))
                  B.pendingNewLine = !1
                  B.addText(E)
                  return C
                }
                Qa.prototype.setCurrentWindow = function (C, B) {
                  B.setCurrentWindow(this.current708Packet.data[C] & 7)
                  return C
                }
                Qa.prototype.defineWindow = function (C, B) {
                  var E = this.current708Packet.data,
                    x = E[C]
                  B.setCurrentWindow(x & 7)
                  B = B.currentWindow
                  x = E[++C]
                  B.visible = (x & 32) >> 5
                  B.rowLock = (x & 16) >> 4
                  B.columnLock = (x & 8) >> 3
                  B.priority = x & 7
                  x = E[++C]
                  B.relativePositioning = (x & 128) >> 7
                  B.anchorVertical = x & 127
                  x = E[++C]
                  B.anchorHorizontal = x
                  x = E[++C]
                  B.anchorPoint = (x & 240) >> 4
                  B.rowCount = x & 15
                  x = E[++C]
                  B.columnCount = x & 63
                  x = E[++C]
                  B.windowStyle = (x & 56) >> 3
                  B.penStyle = x & 7
                  B.virtualRowCount = B.rowCount + 1
                  return C
                }
                Qa.prototype.setWindowAttributes = function (C, B) {
                  var E = this.current708Packet.data,
                    x = B.currentWindow.winAttr
                  B = E[++C]
                  x.fillOpacity = (B & 192) >> 6
                  x.fillRed = (B & 48) >> 4
                  x.fillGreen = (B & 12) >> 2
                  x.fillBlue = B & 3
                  B = E[++C]
                  x.borderType = (B & 192) >> 6
                  x.borderRed = (B & 48) >> 4
                  x.borderGreen = (B & 12) >> 2
                  x.borderBlue = B & 3
                  B = E[++C]
                  x.borderType += (B & 128) >> 5
                  x.wordWrap = (B & 64) >> 6
                  x.printDirection = (B & 48) >> 4
                  x.scrollDirection = (B & 12) >> 2
                  x.justify = B & 3
                  B = E[++C]
                  x.effectSpeed = (B & 240) >> 4
                  x.effectDirection = (B & 12) >> 2
                  x.displayEffect = B & 3
                  return C
                }
                Qa.prototype.flushDisplayed = function (C, B) {
                  for (var E = [], x = 0; 8 > x; x++)
                    B.windows[x].visible &&
                      !B.windows[x].isEmpty() &&
                      E.push(B.windows[x].getText())
                  B.endPts = C
                  B.text = E.join('\n\n')
                  this.pushCaption(B)
                  B.startPts = C
                }
                Qa.prototype.pushCaption = function (C) {
                  '' !== C.text &&
                    (this.trigger('data', {
                      startPts: C.startPts,
                      endPts: C.endPts,
                      text: C.text,
                      stream: 'cc708_' + C.serviceNum,
                    }),
                    (C.text = ''),
                    (C.startPts = C.endPts))
                }
                Qa.prototype.displayWindows = function (C, B) {
                  var E = this.current708Packet.data[++C],
                    x = this.getPts(C)
                  this.flushDisplayed(x, B)
                  for (x = 0; 8 > x; x++) E & (1 << x) && (B.windows[x].visible = 1)
                  return C
                }
                Qa.prototype.hideWindows = function (C, B) {
                  var E = this.current708Packet.data[++C],
                    x = this.getPts(C)
                  this.flushDisplayed(x, B)
                  for (x = 0; 8 > x; x++) E & (1 << x) && (B.windows[x].visible = 0)
                  return C
                }
                Qa.prototype.toggleWindows = function (C, B) {
                  var E = this.current708Packet.data[++C],
                    x = this.getPts(C)
                  this.flushDisplayed(x, B)
                  for (x = 0; 8 > x; x++) E & (1 << x) && (B.windows[x].visible ^= 1)
                  return C
                }
                Qa.prototype.clearWindows = function (C, B) {
                  var E = this.current708Packet.data[++C],
                    x = this.getPts(C)
                  this.flushDisplayed(x, B)
                  for (x = 0; 8 > x; x++) E & (1 << x) && B.windows[x].clearText()
                  return C
                }
                Qa.prototype.deleteWindows = function (C, B) {
                  var E = this.current708Packet.data[++C],
                    x = this.getPts(C)
                  this.flushDisplayed(x, B)
                  for (x = 0; 8 > x; x++) E & (1 << x) && B.windows[x].reset()
                  return C
                }
                Qa.prototype.setPenAttributes = function (C, B) {
                  var E = this.current708Packet.data,
                    x = B.currentWindow.penAttr
                  B = E[++C]
                  x.textTag = (B & 240) >> 4
                  x.offset = (B & 12) >> 2
                  x.penSize = B & 3
                  B = E[++C]
                  x.italics = (B & 128) >> 7
                  x.underline = (B & 64) >> 6
                  x.edgeType = (B & 56) >> 3
                  x.fontStyle = B & 7
                  return C
                }
                Qa.prototype.setPenColor = function (C, B) {
                  var E = this.current708Packet.data,
                    x = B.currentWindow.penColor
                  B = E[++C]
                  x.fgOpacity = (B & 192) >> 6
                  x.fgRed = (B & 48) >> 4
                  x.fgGreen = (B & 12) >> 2
                  x.fgBlue = B & 3
                  B = E[++C]
                  x.bgOpacity = (B & 192) >> 6
                  x.bgRed = (B & 48) >> 4
                  x.bgGreen = (B & 12) >> 2
                  x.bgBlue = B & 3
                  B = E[++C]
                  x.edgeRed = (B & 48) >> 4
                  x.edgeGreen = (B & 12) >> 2
                  x.edgeBlue = B & 3
                  return C
                }
                Qa.prototype.setPenLocation = function (C, B) {
                  var E = this.current708Packet.data,
                    x = B.currentWindow.penLoc
                  B.currentWindow.pendingNewLine = !0
                  B = E[++C]
                  x.row = B & 15
                  B = E[++C]
                  x.column = B & 63
                  return C
                }
                Qa.prototype.reset = function (C, B) {
                  var E = this.getPts(C)
                  this.flushDisplayed(E, B)
                  return this.initService(B.serviceNum, C)
                }
                var Nq = {
                    42: 225,
                    92: 233,
                    94: 237,
                    95: 243,
                    96: 250,
                    123: 231,
                    124: 247,
                    125: 209,
                    126: 241,
                    127: 9608,
                    304: 174,
                    305: 176,
                    306: 189,
                    307: 191,
                    308: 8482,
                    309: 162,
                    310: 163,
                    311: 9834,
                    312: 224,
                    313: 160,
                    314: 232,
                    315: 226,
                    316: 234,
                    317: 238,
                    318: 244,
                    319: 251,
                    544: 193,
                    545: 201,
                    546: 211,
                    547: 218,
                    548: 220,
                    549: 252,
                    550: 8216,
                    551: 161,
                    552: 42,
                    553: 39,
                    554: 8212,
                    555: 169,
                    556: 8480,
                    557: 8226,
                    558: 8220,
                    559: 8221,
                    560: 192,
                    561: 194,
                    562: 199,
                    563: 200,
                    564: 202,
                    565: 203,
                    566: 235,
                    567: 206,
                    568: 207,
                    569: 239,
                    570: 212,
                    571: 217,
                    572: 249,
                    573: 219,
                    574: 171,
                    575: 187,
                    800: 195,
                    801: 227,
                    802: 205,
                    803: 204,
                    804: 236,
                    805: 210,
                    806: 242,
                    807: 213,
                    808: 245,
                    809: 123,
                    810: 125,
                    811: 92,
                    812: 94,
                    813: 95,
                    814: 124,
                    815: 126,
                    816: 196,
                    817: 228,
                    818: 214,
                    819: 246,
                    820: 223,
                    821: 165,
                    822: 164,
                    823: 9474,
                    824: 197,
                    825: 229,
                    826: 216,
                    827: 248,
                    828: 9484,
                    829: 9488,
                    830: 9492,
                    831: 9496,
                  },
                  rf = function (C) {
                    if (null === C) return ''
                    C = Nq[C] || C
                    return String.fromCharCode(C)
                  },
                  Oq = [
                    4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896,
                    5120, 5152,
                  ],
                  ad = function () {
                    for (var C = [], B = 15; B--; ) C.push('')
                    return C
                  },
                  Ta = function x(B, E) {
                    x.prototype.init.call(this)
                    this.field_ = B || 0
                    this.dataChannel_ = E || 0
                    this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1)
                    this.setConstants()
                    this.reset()
                    this.push = function (J) {
                      var K = J.ccData & 32639
                      if (K === this.lastControlCode_) this.lastControlCode_ = null
                      else {
                        4096 === (K & 61440)
                          ? (this.lastControlCode_ = K)
                          : K !== this.PADDING_ && (this.lastControlCode_ = null)
                        var D = K >>> 8
                        var N = K & 255
                        K !== this.PADDING_ &&
                          (K === this.RESUME_CAPTION_LOADING_
                            ? (this.mode_ = 'popOn')
                            : K === this.END_OF_CAPTION_
                              ? ((this.mode_ = 'popOn'),
                                this.clearFormatting(J.pts),
                                this.flushDisplayed(J.pts),
                                (N = this.displayed_),
                                (this.displayed_ = this.nonDisplayed_),
                                (this.nonDisplayed_ = N),
                                (this.startPts_ = J.pts))
                              : K === this.ROLL_UP_2_ROWS_
                                ? ((this.rollUpRows_ = 2), this.setRollUp(J.pts))
                                : K === this.ROLL_UP_3_ROWS_
                                  ? ((this.rollUpRows_ = 3), this.setRollUp(J.pts))
                                  : K === this.ROLL_UP_4_ROWS_
                                    ? ((this.rollUpRows_ = 4), this.setRollUp(J.pts))
                                    : K === this.CARRIAGE_RETURN_
                                      ? (this.clearFormatting(J.pts),
                                        this.flushDisplayed(J.pts),
                                        this.shiftRowsUp_(),
                                        (this.startPts_ = J.pts))
                                      : K === this.BACKSPACE_
                                        ? 'popOn' === this.mode_
                                          ? (this.nonDisplayed_[this.row_] = this.nonDisplayed_[
                                              this.row_
                                            ].slice(0, -1))
                                          : (this.displayed_[this.row_] = this.displayed_[
                                              this.row_
                                            ].slice(0, -1))
                                        : K === this.ERASE_DISPLAYED_MEMORY_
                                          ? (this.flushDisplayed(J.pts), (this.displayed_ = ad()))
                                          : K === this.ERASE_NON_DISPLAYED_MEMORY_
                                            ? (this.nonDisplayed_ = ad())
                                            : K === this.RESUME_DIRECT_CAPTIONING_
                                              ? ('paintOn' !== this.mode_ &&
                                                  (this.flushDisplayed(J.pts),
                                                  (this.displayed_ = ad())),
                                                (this.mode_ = 'paintOn'),
                                                (this.startPts_ = J.pts))
                                              : this.isSpecialCharacter(D, N)
                                                ? ((K = rf(((D & 3) << 8) | N)),
                                                  this[this.mode_](J.pts, K),
                                                  this.column_++)
                                                : this.isExtCharacter(D, N)
                                                  ? ('popOn' === this.mode_
                                                      ? (this.nonDisplayed_[this.row_] =
                                                          this.nonDisplayed_[this.row_].slice(
                                                            0,
                                                            -1,
                                                          ))
                                                      : (this.displayed_[this.row_] =
                                                          this.displayed_[this.row_].slice(0, -1)),
                                                    (K = rf(((D & 3) << 8) | N)),
                                                    this[this.mode_](J.pts, K),
                                                    this.column_++)
                                                  : this.isMidRowCode(D, N)
                                                    ? (this.clearFormatting(J.pts),
                                                      this[this.mode_](J.pts, ' '),
                                                      this.column_++,
                                                      14 === (N & 14) &&
                                                        this.addFormatting(J.pts, ['i']),
                                                      1 === (N & 1) &&
                                                        this.addFormatting(J.pts, ['u']))
                                                    : this.isOffsetControlCode(D, N)
                                                      ? (this.column_ += N & 3)
                                                      : this.isPAC(D, N)
                                                        ? ((D = Oq.indexOf(K & 7968)),
                                                          'rollUp' === this.mode_ &&
                                                            (0 > D - this.rollUpRows_ + 1 &&
                                                              (D = this.rollUpRows_ - 1),
                                                            this.setRollUp(J.pts, D)),
                                                          D !== this.row_ &&
                                                            (this.clearFormatting(J.pts),
                                                            (this.row_ = D)),
                                                          N & 1 &&
                                                            -1 === this.formatting_.indexOf('u') &&
                                                            this.addFormatting(J.pts, ['u']),
                                                          16 === (K & 16) &&
                                                            (this.column_ = 4 * ((K & 14) >> 1)),
                                                          this.isColorPAC(N) &&
                                                            14 === (N & 14) &&
                                                            this.addFormatting(J.pts, ['i']))
                                                        : this.isNormalChar(D) &&
                                                          (0 === N && (N = null),
                                                          (K = rf(D)),
                                                          (K += rf(N)),
                                                          this[this.mode_](J.pts, K),
                                                          (this.column_ += K.length)))
                      }
                    }
                  }
                Ta.prototype = new p()
                Ta.prototype.flushDisplayed = function (B) {
                  var E = this.displayed_
                    .map(function (x) {
                      try {
                        return x.trim()
                      } catch (J) {
                        return console.error('Skipping malformed caption.'), ''
                      }
                    })
                    .join('\n')
                    .replace(/^\n+|\n+$/g, '')
                  E.length &&
                    this.trigger('data', {
                      startPts: this.startPts_,
                      endPts: B,
                      text: E,
                      stream: this.name_,
                    })
                }
                Ta.prototype.reset = function () {
                  this.mode_ = 'popOn'
                  this.startPts_ = this.topRow_ = 0
                  this.displayed_ = ad()
                  this.nonDisplayed_ = ad()
                  this.lastControlCode_ = null
                  this.column_ = 0
                  this.row_ = 14
                  this.rollUpRows_ = 2
                  this.formatting_ = []
                }
                Ta.prototype.setConstants = function () {
                  0 === this.dataChannel_
                    ? ((this.BASE_ = 16),
                      (this.EXT_ = 17),
                      (this.CONTROL_ = (20 | this.field_) << 8),
                      (this.OFFSET_ = 23))
                    : 1 === this.dataChannel_ &&
                      ((this.BASE_ = 24),
                      (this.EXT_ = 25),
                      (this.CONTROL_ = (28 | this.field_) << 8),
                      (this.OFFSET_ = 31))
                  this.PADDING_ = 0
                  this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32
                  this.END_OF_CAPTION_ = this.CONTROL_ | 47
                  this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37
                  this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38
                  this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39
                  this.CARRIAGE_RETURN_ = this.CONTROL_ | 45
                  this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41
                  this.BACKSPACE_ = this.CONTROL_ | 33
                  this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44
                  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
                }
                Ta.prototype.isSpecialCharacter = function (B, E) {
                  return B === this.EXT_ && 48 <= E && 63 >= E
                }
                Ta.prototype.isExtCharacter = function (B, E) {
                  return (B === this.EXT_ + 1 || B === this.EXT_ + 2) && 32 <= E && 63 >= E
                }
                Ta.prototype.isMidRowCode = function (B, E) {
                  return B === this.EXT_ && 32 <= E && 47 >= E
                }
                Ta.prototype.isOffsetControlCode = function (B, E) {
                  return B === this.OFFSET_ && 33 <= E && 35 >= E
                }
                Ta.prototype.isPAC = function (B, E) {
                  return B >= this.BASE_ && B < this.BASE_ + 8 && 64 <= E && 127 >= E
                }
                Ta.prototype.isColorPAC = function (B) {
                  return (64 <= B && 79 >= B) || (96 <= B && 127 >= B)
                }
                Ta.prototype.isNormalChar = function (B) {
                  return 32 <= B && 127 >= B
                }
                Ta.prototype.setRollUp = function (B, E) {
                  'rollUp' !== this.mode_ &&
                    ((this.row_ = 14),
                    (this.mode_ = 'rollUp'),
                    this.flushDisplayed(B),
                    (this.nonDisplayed_ = ad()),
                    (this.displayed_ = ad()))
                  if (void 0 !== E && E !== this.row_)
                    for (B = 0; B < this.rollUpRows_; B++)
                      (this.displayed_[E - B] = this.displayed_[this.row_ - B]),
                        (this.displayed_[this.row_ - B] = '')
                  void 0 === E && (E = this.row_)
                  this.topRow_ = E - this.rollUpRows_ + 1
                }
                Ta.prototype.addFormatting = function (B, E) {
                  this.formatting_ = this.formatting_.concat(E)
                  E = E.reduce(function (x, J) {
                    return x + '<' + J + '>'
                  }, '')
                  this[this.mode_](B, E)
                }
                Ta.prototype.clearFormatting = function (B) {
                  if (this.formatting_.length) {
                    var E = this.formatting_.reverse().reduce(function (x, J) {
                      return x + '</' + J + '>'
                    }, '')
                    this.formatting_ = []
                    this[this.mode_](B, E)
                  }
                }
                Ta.prototype.popOn = function (B, E) {
                  this.nonDisplayed_[this.row_] += E
                }
                Ta.prototype.rollUp = function (B, E) {
                  this.displayed_[this.row_] += E
                }
                Ta.prototype.shiftRowsUp_ = function () {
                  var B
                  for (B = 0; B < this.topRow_; B++) this.displayed_[B] = ''
                  for (B = this.row_ + 1; 15 > B; B++) this.displayed_[B] = ''
                  for (B = this.topRow_; B < this.row_; B++)
                    this.displayed_[B] = this.displayed_[B + 1]
                  this.displayed_[this.row_] = ''
                }
                Ta.prototype.paintOn = function (B, E) {
                  this.displayed_[this.row_] += E
                }
                var Pq = Ta,
                  Qq = Qa,
                  Yb = { H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21 },
                  dm = function (B, E) {
                    var x = 1
                    for (B > E && (x = -1); 4294967296 < Math.abs(E - B); ) B += 8589934592 * x
                    return B
                  },
                  em = function x(E) {
                    var J, K
                    x.prototype.init.call(this)
                    this.type_ = E || 'shared'
                    this.push = function (D) {
                      if ('shared' === this.type_ || D.type === this.type_)
                        void 0 === K && (K = D.dts),
                          (D.dts = dm(D.dts, K)),
                          (D.pts = dm(D.pts, K)),
                          (J = D.dts),
                          this.trigger('data', D)
                    }
                    this.flush = function () {
                      K = J
                      this.trigger('done')
                    }
                    this.endTimeline = function () {
                      this.flush()
                      this.trigger('endedtimeline')
                    }
                    this.discontinuity = function () {
                      J = K = void 0
                    }
                    this.reset = function () {
                      this.discontinuity()
                      this.trigger('reset')
                    }
                  }
                em.prototype = new p()
                var ne = function (E, x, J) {
                    for (var K = ''; x < J; x++) K += '%' + ('00' + E[x].toString(16)).slice(-2)
                    return K
                  },
                  sf = function (E) {
                    return (E[0] << 21) | (E[1] << 14) | (E[2] << 7) | E[3]
                  },
                  fm = {
                    TXXX: function (E) {
                      var x
                      if (3 === E.data[0]) {
                        for (x = 1; x < E.data.length; x++)
                          if (0 === E.data[x]) {
                            E.description = decodeURIComponent(ne(E.data, 1, x))
                            E.value = decodeURIComponent(ne(E.data, x + 1, E.data.length)).replace(
                              /\0*$/,
                              '',
                            )
                            break
                          }
                        E.data = E.value
                      }
                    },
                    WXXX: function (E) {
                      var x
                      if (3 === E.data[0])
                        for (x = 1; x < E.data.length; x++)
                          if (0 === E.data[x]) {
                            E.description = decodeURIComponent(ne(E.data, 1, x))
                            E.url = decodeURIComponent(ne(E.data, x + 1, E.data.length))
                            break
                          }
                    },
                    PRIV: function (E) {
                      var x
                      for (x = 0; x < E.data.length; x++)
                        if (0 === E.data[x]) {
                          E.owner = unescape(ne(E.data, 0, x))
                          break
                        }
                      E.privateData = E.data.subarray(x + 1)
                      E.data = E.privateData
                    },
                  }
                var Ph = function (E) {
                  var x = !(!E || !E.debug)
                  E = E && E.descriptor
                  var J = 0,
                    K = [],
                    D = 0,
                    N
                  Ph.prototype.init.call(this)
                  this.dispatchType = Yb.METADATA_STREAM_TYPE.toString(16)
                  if (E)
                    for (N = 0; N < E.length; N++)
                      this.dispatchType += ('00' + E[N].toString(16)).slice(-2)
                  this.push = function (G) {
                    var P
                    if ('timed-metadata' === G.type)
                      if (
                        (G.dataAlignmentIndicator && ((D = 0), (K.length = 0)),
                        0 === K.length &&
                          (10 > G.data.length ||
                            73 !== G.data[0] ||
                            68 !== G.data[1] ||
                            51 !== G.data[2]))
                      )
                        x && console.log('Skipping unrecognized metadata packet')
                      else if (
                        (K.push(G),
                        (D += G.data.byteLength),
                        1 === K.length && ((J = sf(G.data.subarray(6, 10))), (J += 10)),
                        !(D < J))
                      ) {
                        G = { data: new Uint8Array(J), frames: [], pts: K[0].pts, dts: K[0].dts }
                        for (P = 0; P < J; )
                          G.data.set(K[0].data.subarray(0, J - P), P),
                            (P += K[0].data.byteLength),
                            (D -= K[0].data.byteLength),
                            K.shift()
                        P = 10
                        G.data[5] & 64 &&
                          ((P = P + 4 + sf(G.data.subarray(10, 14))),
                          (J -= sf(G.data.subarray(16, 20))))
                        do {
                          var L = sf(G.data.subarray(P + 4, P + 8))
                          if (1 > L)
                            return console.log(
                              'Malformed ID3 frame encountered. Skipping metadata parsing.',
                            )
                          var Y = String.fromCharCode(
                            G.data[P],
                            G.data[P + 1],
                            G.data[P + 2],
                            G.data[P + 3],
                          )
                          Y = { id: Y, data: G.data.subarray(P + 10, P + L + 10) }
                          Y.key = Y.id
                          if (
                            fm[Y.id] &&
                            (fm[Y.id](Y),
                            'com.apple.streaming.transportStreamTimestamp' === Y.owner)
                          ) {
                            var ha = Y.data,
                              la =
                                ((ha[3] & 1) << 30) |
                                (ha[4] << 22) |
                                (ha[5] << 14) |
                                (ha[6] << 6) |
                                (ha[7] >>> 2)
                            la *= 4
                            la += ha[7] & 3
                            Y.timeStamp = la
                            void 0 === G.pts &&
                              void 0 === G.dts &&
                              ((G.pts = Y.timeStamp), (G.dts = Y.timeStamp))
                            this.trigger('timestamp', Y)
                          }
                          G.frames.push(Y)
                          P += 10
                          P += L
                        } while (P < J)
                        this.trigger('data', G)
                      }
                  }
                }
                Ph.prototype = new p()
                var Qh = function () {
                  var E = new Uint8Array(188),
                    x = 0
                  Qh.prototype.init.call(this)
                  this.push = function (J) {
                    var K = 0,
                      D = 188
                    if (x) {
                      var N = new Uint8Array(J.byteLength + x)
                      N.set(E.subarray(0, x))
                      N.set(J, x)
                      x = 0
                    } else N = J
                    for (; D < N.byteLength; )
                      71 === N[K] && 71 === N[D]
                        ? (this.trigger('data', N.subarray(K, D)), (K += 188), (D += 188))
                        : (K++, D++)
                    K < N.byteLength && (E.set(N.subarray(K), 0), (x = N.byteLength - K))
                  }
                  this.flush = function () {
                    188 === x && 71 === E[0] && (this.trigger('data', E), (x = 0))
                    this.trigger('done')
                  }
                  this.endTimeline = function () {
                    this.flush()
                    this.trigger('endedtimeline')
                  }
                  this.reset = function () {
                    x = 0
                    this.trigger('reset')
                  }
                }
                Qh.prototype = new p()
                var tf = function () {
                  tf.prototype.init.call(this)
                  var E = this
                  this.packetsWaitingForPmt = []
                  this.programMapTable = void 0
                  var x = function (D, N) {
                    var G = 0
                    N.payloadUnitStartIndicator && (G += D[G] + 1)
                    'pat' === N.type ? J(D.subarray(G), N) : K(D.subarray(G), N)
                  }
                  var J = function (D, N) {
                    N.section_number = D[7]
                    N.last_section_number = D[8]
                    E.pmtPid = ((D[10] & 31) << 8) | D[11]
                    N.pmtPid = E.pmtPid
                  }
                  var K = function (D, N) {
                    var G
                    if (D[5] & 1) {
                      E.programMapTable = { video: null, audio: null, 'timed-metadata': {} }
                      var P = 3 + (((D[1] & 15) << 8) | D[2]) - 4
                      for (G = 12 + (((D[10] & 15) << 8) | D[11]); G < P; ) {
                        var L = D[G],
                          Y = ((D[G + 1] & 31) << 8) | D[G + 2]
                        L === Yb.H264_STREAM_TYPE && null === E.programMapTable.video
                          ? (E.programMapTable.video = Y)
                          : L === Yb.ADTS_STREAM_TYPE && null === E.programMapTable.audio
                            ? (E.programMapTable.audio = Y)
                            : L === Yb.METADATA_STREAM_TYPE &&
                              (E.programMapTable['timed-metadata'][Y] = L)
                        G += (((D[G + 3] & 15) << 8) | D[G + 4]) + 5
                      }
                      N.programMapTable = E.programMapTable
                    }
                  }
                  this.push = function (D) {
                    var N = {},
                      G = 4
                    N.payloadUnitStartIndicator = !!(D[1] & 64)
                    N.pid = D[1] & 31
                    N.pid <<= 8
                    N.pid |= D[2]
                    1 < (D[3] & 48) >>> 4 && (G += D[G] + 1)
                    if (0 === N.pid) (N.type = 'pat'), x(D.subarray(G), N), this.trigger('data', N)
                    else if (N.pid === this.pmtPid)
                      for (
                        N.type = 'pmt', x(D.subarray(G), N), this.trigger('data', N);
                        this.packetsWaitingForPmt.length;

                      )
                        this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
                    else
                      void 0 === this.programMapTable
                        ? this.packetsWaitingForPmt.push([D, G, N])
                        : this.processPes_(D, G, N)
                  }
                  this.processPes_ = function (D, N, G) {
                    G.streamType =
                      G.pid === this.programMapTable.video
                        ? Yb.H264_STREAM_TYPE
                        : G.pid === this.programMapTable.audio
                          ? Yb.ADTS_STREAM_TYPE
                          : this.programMapTable['timed-metadata'][G.pid]
                    G.type = 'pes'
                    G.data = D.subarray(N)
                    this.trigger('data', G)
                  }
                }
                tf.prototype = new p()
                tf.STREAM_TYPES = { h264: 27, adts: 15 }
                var Rh = function () {
                  var E = this,
                    x = { data: [], size: 0 },
                    J = { data: [], size: 0 },
                    K = { data: [], size: 0 },
                    D,
                    N = function (G, P, L) {
                      var Y = new Uint8Array(G.size),
                        ha = { type: P },
                        la,
                        ba = 0
                      if (G.data.length && !(9 > G.size)) {
                        ha.trackId = G.data[0].pid
                        for (la = 0; la < G.data.length; la++) {
                          var ma = G.data[la]
                          Y.set(ma.data, ba)
                          ba += ma.data.byteLength
                        }
                        la = (Y[0] << 16) | (Y[1] << 8) | Y[2]
                        ha.data = new Uint8Array()
                        1 === la &&
                          ((ha.packetLength = 6 + ((Y[4] << 8) | Y[5])),
                          (ha.dataAlignmentIndicator = 0 !== (Y[6] & 4)),
                          (la = Y[7]),
                          la & 192 &&
                            ((ha.pts =
                              ((Y[9] & 14) << 27) |
                              ((Y[10] & 255) << 20) |
                              ((Y[11] & 254) << 12) |
                              ((Y[12] & 255) << 5) |
                              ((Y[13] & 254) >>> 3)),
                            (ha.pts *= 4),
                            (ha.pts += (Y[13] & 6) >>> 1),
                            (ha.dts = ha.pts),
                            la & 64 &&
                              ((ha.dts =
                                ((Y[14] & 14) << 27) |
                                ((Y[15] & 255) << 20) |
                                ((Y[16] & 254) << 12) |
                                ((Y[17] & 255) << 5) |
                                ((Y[18] & 254) >>> 3)),
                              (ha.dts *= 4),
                              (ha.dts += (Y[18] & 6) >>> 1))),
                          (ha.data = Y.subarray(9 + Y[8])))
                        P = 'video' === P || ha.packetLength <= G.size
                        if (L || P) (G.size = 0), (G.data.length = 0)
                        P && E.trigger('data', ha)
                      }
                    }
                  Rh.prototype.init.call(this)
                  this.push = function (G) {
                    ;({
                      pat: function () {},
                      pes: function () {
                        switch (G.streamType) {
                          case Yb.H264_STREAM_TYPE:
                            var P = x
                            var L = 'video'
                            break
                          case Yb.ADTS_STREAM_TYPE:
                            P = J
                            L = 'audio'
                            break
                          case Yb.METADATA_STREAM_TYPE:
                            P = K
                            L = 'timed-metadata'
                            break
                          default:
                            return
                        }
                        G.payloadUnitStartIndicator && N(P, L, !0)
                        P.data.push(G)
                        P.size += G.data.byteLength
                      },
                      pmt: function () {
                        var P = { type: 'metadata', tracks: [] }
                        D = G.programMapTable
                        null !== D.video &&
                          P.tracks.push({
                            timelineStartInfo: { baseMediaDecodeTime: 0 },
                            id: +D.video,
                            codec: 'avc',
                            type: 'video',
                          })
                        null !== D.audio &&
                          P.tracks.push({
                            timelineStartInfo: { baseMediaDecodeTime: 0 },
                            id: +D.audio,
                            codec: 'adts',
                            type: 'audio',
                          })
                        E.trigger('data', P)
                      },
                    })[G.type]()
                  }
                  this.reset = function () {
                    x.size = 0
                    x.data.length = 0
                    J.size = 0
                    J.data.length = 0
                    this.trigger('reset')
                  }
                  this.flushStreams_ = function () {
                    N(x, 'video')
                    N(J, 'audio')
                    N(K, 'timed-metadata')
                  }
                  this.flush = function () {
                    this.flushStreams_()
                    this.trigger('done')
                  }
                }
                Rh.prototype = new p()
                var fb = {
                    PAT_PID: 0,
                    MP2T_PACKET_LENGTH: 188,
                    TransportPacketStream: Qh,
                    TransportParseStream: tf,
                    ElementaryStream: Rh,
                    TimestampRolloverStream: em,
                    CaptionStream: Hb,
                    Cea608Stream: Pq,
                    Cea708Stream: Qq,
                    MetadataStream: Ph,
                  },
                  uf
                for (uf in Yb) Yb.hasOwnProperty(uf) && (fb[uf] = Yb[uf])
                var Rq = Ca.ONE_SECOND_IN_TS,
                  gm = [
                    96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350,
                  ]
                var Dd = function (E) {
                  var x,
                    J = 0
                  Dd.prototype.init.call(this)
                  this.push = function (K) {
                    var D = 0
                    E || (J = 0)
                    if ('audio' === K.type) {
                      if (x) {
                        var N = x
                        x = new Uint8Array(N.byteLength + K.data.byteLength)
                        x.set(N)
                        x.set(K.data, N.byteLength)
                      } else x = K.data
                      for (; D + 5 < x.length; )
                        if (255 !== x[D] || 240 !== (x[D + 1] & 246)) D++
                        else {
                          N = 2 * (~x[D + 1] & 1)
                          var G = ((x[D + 3] & 3) << 11) | (x[D + 4] << 3) | ((x[D + 5] & 224) >> 5)
                          var P = 1024 * ((x[D + 6] & 3) + 1)
                          var L = (P * Rq) / gm[(x[D + 2] & 60) >>> 2]
                          G = D + G
                          if (x.byteLength < G) break
                          this.trigger('data', {
                            pts: K.pts + J * L,
                            dts: K.dts + J * L,
                            sampleCount: P,
                            audioobjecttype: ((x[D + 2] >>> 6) & 3) + 1,
                            channelcount: ((x[D + 2] & 1) << 2) | ((x[D + 3] & 192) >>> 6),
                            samplerate: gm[(x[D + 2] & 60) >>> 2],
                            samplingfrequencyindex: (x[D + 2] & 60) >>> 2,
                            samplesize: 16,
                            data: x.subarray(D + 7 + N, G),
                          })
                          J++
                          if (x.byteLength === G) {
                            x = void 0
                            break
                          }
                          x = x.subarray(G)
                        }
                    }
                  }
                  this.flush = function () {
                    J = 0
                    this.trigger('done')
                  }
                  this.reset = function () {
                    x = void 0
                    this.trigger('reset')
                  }
                  this.endTimeline = function () {
                    x = void 0
                    this.trigger('endedtimeline')
                  }
                }
                Dd.prototype = new p()
                var Sq = function (E) {
                  var x = E.byteLength,
                    J = 0,
                    K = 0
                  this.length = function () {
                    return 8 * x
                  }
                  this.bitsAvailable = function () {
                    return 8 * x + K
                  }
                  this.loadWord = function () {
                    var D = E.byteLength - x,
                      N = new Uint8Array(4),
                      G = Math.min(4, x)
                    if (0 === G) throw Error('no bytes available')
                    N.set(E.subarray(D, D + G))
                    J = new DataView(N.buffer).getUint32(0)
                    K = 8 * G
                    x -= G
                  }
                  this.skipBits = function (D) {
                    if (!(K > D)) {
                      D -= K
                      var N = Math.floor(D / 8)
                      D -= 8 * N
                      x -= N
                      this.loadWord()
                    }
                    J <<= D
                    K -= D
                  }
                  this.readBits = function (D) {
                    var N = Math.min(K, D),
                      G = J >>> (32 - N)
                    K -= N
                    0 < K ? (J <<= N) : 0 < x && this.loadWord()
                    N = D - N
                    return 0 < N ? (G << N) | this.readBits(N) : G
                  }
                  this.skipLeadingZeros = function () {
                    var D
                    for (D = 0; D < K; ++D)
                      if (0 !== (J & (2147483648 >>> D))) return (J <<= D), (K -= D), D
                    this.loadWord()
                    return D + this.skipLeadingZeros()
                  }
                  this.skipUnsignedExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                  }
                  this.skipExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                  }
                  this.readUnsignedExpGolomb = function () {
                    var D = this.skipLeadingZeros()
                    return this.readBits(D + 1) - 1
                  }
                  this.readExpGolomb = function () {
                    var D = this.readUnsignedExpGolomb()
                    return 1 & D ? (1 + D) >>> 1 : -1 * (D >>> 1)
                  }
                  this.readBoolean = function () {
                    return 1 === this.readBits(1)
                  }
                  this.readUnsignedByte = function () {
                    return this.readBits(8)
                  }
                  this.loadWord()
                }
                var Sh = function () {
                  var E = 0,
                    x,
                    J
                  Sh.prototype.init.call(this)
                  this.push = function (K) {
                    if (J) {
                      var D = new Uint8Array(J.byteLength + K.data.byteLength)
                      D.set(J)
                      D.set(K.data, J.byteLength)
                      J = D
                    } else J = K.data
                    for (K = J.byteLength; E < K - 3; E++)
                      if (1 === J[E + 2]) {
                        x = E + 5
                        break
                      }
                    for (; x < K; )
                      switch (J[x]) {
                        case 0:
                          if (0 !== J[x - 1]) {
                            x += 2
                            break
                          } else if (0 !== J[x - 2]) {
                            x++
                            break
                          }
                          E + 3 !== x - 2 && this.trigger('data', J.subarray(E + 3, x - 2))
                          do x++
                          while (1 !== J[x] && x < K)
                          E = x - 2
                          x += 3
                          break
                        case 1:
                          if (0 !== J[x - 1] || 0 !== J[x - 2]) {
                            x += 3
                            break
                          }
                          this.trigger('data', J.subarray(E + 3, x - 2))
                          E = x - 2
                          x += 3
                          break
                        default:
                          x += 3
                      }
                    J = J.subarray(E)
                    x -= E
                    E = 0
                  }
                  this.reset = function () {
                    J = null
                    E = 0
                    this.trigger('reset')
                  }
                  this.flush = function () {
                    J && 3 < J.byteLength && this.trigger('data', J.subarray(E + 3))
                    J = null
                    E = 0
                    this.trigger('done')
                  }
                  this.endTimeline = function () {
                    this.flush()
                    this.trigger('endedtimeline')
                  }
                }
                Sh.prototype = new p()
                var Tq = {
                  100: !0,
                  110: !0,
                  122: !0,
                  244: !0,
                  44: !0,
                  83: !0,
                  86: !0,
                  118: !0,
                  128: !0,
                  138: !0,
                  139: !0,
                  134: !0,
                }
                var vf = function () {
                  var E = new Sh(),
                    x,
                    J,
                    K
                  vf.prototype.init.call(this)
                  var D = this
                  this.push = function (L) {
                    'video' === L.type && ((x = L.trackId), (J = L.pts), (K = L.dts), E.push(L))
                  }
                  E.on('data', function (L) {
                    var Y = { trackId: x, pts: J, dts: K, data: L }
                    switch (L[0] & 31) {
                      case 5:
                        Y.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr'
                        break
                      case 6:
                        Y.nalUnitType = 'sei_rbsp'
                        Y.escapedRBSP = G(L.subarray(1))
                        break
                      case 7:
                        Y.nalUnitType = 'seq_parameter_set_rbsp'
                        Y.escapedRBSP = G(L.subarray(1))
                        Y.config = P(Y.escapedRBSP)
                        break
                      case 8:
                        Y.nalUnitType = 'pic_parameter_set_rbsp'
                        break
                      case 9:
                        Y.nalUnitType = 'access_unit_delimiter_rbsp'
                    }
                    D.trigger('data', Y)
                  })
                  E.on('done', function () {
                    D.trigger('done')
                  })
                  E.on('partialdone', function () {
                    D.trigger('partialdone')
                  })
                  E.on('reset', function () {
                    D.trigger('reset')
                  })
                  E.on('endedtimeline', function () {
                    D.trigger('endedtimeline')
                  })
                  this.flush = function () {
                    E.flush()
                  }
                  this.partialFlush = function () {
                    E.partialFlush()
                  }
                  this.reset = function () {
                    E.reset()
                  }
                  this.endTimeline = function () {
                    E.endTimeline()
                  }
                  var N = function (L, Y) {
                    var ha = 8,
                      la = 8,
                      ba
                    for (ba = 0; ba < L; ba++)
                      0 !== la && ((la = Y.readExpGolomb()), (la = (ha + la + 256) % 256)),
                        (ha = 0 === la ? ha : la)
                  }
                  var G = function (L) {
                    for (var Y = L.byteLength, ha = [], la = 1, ba; la < Y - 2; )
                      0 === L[la] && 0 === L[la + 1] && 3 === L[la + 2]
                        ? (ha.push(la + 2), (la += 2))
                        : la++
                    if (0 === ha.length) return L
                    Y -= ha.length
                    ba = new Uint8Array(Y)
                    var ma = 0
                    for (la = 0; la < Y; ma++, la++)
                      ma === ha[0] && (ma++, ha.shift()), (ba[la] = L[ma])
                    return ba
                  }
                  var P = function (L) {
                    var Y = 0,
                      ha = 0,
                      la = 0,
                      ba = 0,
                      ma = 1
                    L = new Sq(L)
                    var wa = L.readUnsignedByte()
                    var ta = L.readUnsignedByte()
                    var Da = L.readUnsignedByte()
                    L.skipUnsignedExpGolomb()
                    if (Tq[wa]) {
                      var Ia = L.readUnsignedExpGolomb()
                      3 === Ia && L.skipBits(1)
                      L.skipUnsignedExpGolomb()
                      L.skipUnsignedExpGolomb()
                      L.skipBits(1)
                      if (L.readBoolean()) {
                        var gb = 3 !== Ia ? 8 : 12
                        for (Ia = 0; Ia < gb; Ia++)
                          L.readBoolean() && (6 > Ia ? N(16, L) : N(64, L))
                      }
                    }
                    L.skipUnsignedExpGolomb()
                    Ia = L.readUnsignedExpGolomb()
                    if (0 === Ia) L.readUnsignedExpGolomb()
                    else if (1 === Ia)
                      for (
                        L.skipBits(1),
                          L.skipExpGolomb(),
                          L.skipExpGolomb(),
                          gb = L.readUnsignedExpGolomb(),
                          Ia = 0;
                        Ia < gb;
                        Ia++
                      )
                        L.skipExpGolomb()
                    L.skipUnsignedExpGolomb()
                    L.skipBits(1)
                    Ia = L.readUnsignedExpGolomb()
                    gb = L.readUnsignedExpGolomb()
                    var Zb = L.readBits(1)
                    0 === Zb && L.skipBits(1)
                    L.skipBits(1)
                    L.readBoolean() &&
                      ((Y = L.readUnsignedExpGolomb()),
                      (ha = L.readUnsignedExpGolomb()),
                      (la = L.readUnsignedExpGolomb()),
                      (ba = L.readUnsignedExpGolomb()))
                    if (L.readBoolean() && L.readBoolean()) {
                      var hc = L.readUnsignedByte()
                      switch (hc) {
                        case 1:
                          var Ka = [1, 1]
                          break
                        case 2:
                          Ka = [12, 11]
                          break
                        case 3:
                          Ka = [10, 11]
                          break
                        case 4:
                          Ka = [16, 11]
                          break
                        case 5:
                          Ka = [40, 33]
                          break
                        case 6:
                          Ka = [24, 11]
                          break
                        case 7:
                          Ka = [20, 11]
                          break
                        case 8:
                          Ka = [32, 11]
                          break
                        case 9:
                          Ka = [80, 33]
                          break
                        case 10:
                          Ka = [18, 11]
                          break
                        case 11:
                          Ka = [15, 11]
                          break
                        case 12:
                          Ka = [64, 33]
                          break
                        case 13:
                          Ka = [160, 99]
                          break
                        case 14:
                          Ka = [4, 3]
                          break
                        case 15:
                          Ka = [3, 2]
                          break
                        case 16:
                          Ka = [2, 1]
                          break
                        case 255:
                          Ka = [
                            (L.readUnsignedByte() << 8) | L.readUnsignedByte(),
                            (L.readUnsignedByte() << 8) | L.readUnsignedByte(),
                          ]
                      }
                      Ka && (ma = Ka[0] / Ka[1])
                    }
                    return {
                      profileIdc: wa,
                      levelIdc: Da,
                      profileCompatibility: ta,
                      width: Math.ceil((16 * (Ia + 1) - 2 * Y - 2 * ha) * ma),
                      height: (2 - Zb) * (gb + 1) * 16 - 2 * la - 2 * ba,
                      sarRatio: Ka,
                    }
                  }
                }
                vf.prototype = new p()
                var Uq = [
                    96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350,
                  ],
                  hm = function (E, x) {
                    var J = (E[x + 6] << 21) | (E[x + 7] << 14) | (E[x + 8] << 7) | E[x + 9]
                    E = E[x + 5]
                    J = 0 <= J ? J : 0
                    return (E & 16) >> 4 ? J + 20 : J + 10
                  },
                  Vq = function K(x, J) {
                    if (10 > x.length - J || 73 !== x[J] || 68 !== x[J + 1] || 51 !== x[J + 2])
                      return J
                    J += hm(x, J)
                    return K(x, J)
                  },
                  im = function (x) {
                    return (x[0] << 21) | (x[1] << 14) | (x[2] << 7) | x[3]
                  },
                  wf = {
                    isLikelyAacData: function (x) {
                      var J = Vq(x, 0)
                      return (
                        x.length >= J + 2 &&
                        255 === (x[J] & 255) &&
                        240 === (x[J + 1] & 240) &&
                        16 === (x[J + 1] & 22)
                      )
                    },
                    parseId3TagSize: hm,
                    parseAdtsSize: function (x, J) {
                      return (x[J + 3] & 6144) | (x[J + 4] << 3) | ((x[J + 5] & 224) >> 5)
                    },
                    parseType: function (x, J) {
                      return 73 === x[J] && 68 === x[J + 1] && 51 === x[J + 2]
                        ? 'timed-metadata'
                        : x[J] & 1 && 240 === (x[J + 1] & 240)
                          ? 'audio'
                          : null
                    },
                    parseSampleRate: function (x) {
                      for (var J = 0; J + 5 < x.length; )
                        if (255 !== x[J] || 240 !== (x[J + 1] & 246)) J++
                        else return Uq[(x[J + 2] & 60) >>> 2]
                      return null
                    },
                    parseAacTimestamp: function (x) {
                      var J = 10
                      x[5] & 64 && (J = J + 4 + im(x.subarray(10, 14)))
                      do {
                        var K = im(x.subarray(J + 4, J + 8))
                        if (1 > K) break
                        var D = String.fromCharCode(x[J], x[J + 1], x[J + 2], x[J + 3])
                        if ('PRIV' === D) {
                          D = x.subarray(J + 10, J + K + 10)
                          for (var N = 0; N < D.byteLength; N++)
                            if (0 === D[N]) {
                              var G = unescape,
                                P,
                                L = D,
                                Y = N,
                                ha = ''
                              for (P = 0; P < Y; P++)
                                ha += '%' + ('00' + L[P].toString(16)).slice(-2)
                              if ('com.apple.streaming.transportStreamTimestamp' === G(ha))
                                return (
                                  (x = D.subarray(N + 1)),
                                  (J =
                                    ((x[3] & 1) << 30) |
                                    (x[4] << 22) |
                                    (x[5] << 14) |
                                    (x[6] << 6) |
                                    (x[7] >>> 2)),
                                  (J *= 4),
                                  (J += x[7] & 3)
                                )
                              break
                            }
                        }
                        J += 10
                        J += K
                      } while (J < x.byteLength)
                      return null
                    },
                  }
                var xf = function () {
                  var x = new Uint8Array(),
                    J = 0
                  xf.prototype.init.call(this)
                  this.setTimestamp = function (K) {
                    J = K
                  }
                  this.push = function (K) {
                    var D = 0
                    if (x.length) {
                      var N = x.length
                      x = new Uint8Array(K.byteLength + N)
                      x.set(x.subarray(0, N))
                      x.set(K, N)
                    } else x = K
                    for (; 3 <= x.length - D; )
                      if (73 === x[D] && 68 === x[D + 1] && 51 === x[D + 2]) {
                        if (10 > x.length - D) break
                        K = wf.parseId3TagSize(x, D)
                        if (D + K > x.length) break
                        N = { type: 'timed-metadata', data: x.subarray(D, D + K) }
                        this.trigger('data', N)
                        D += K
                      } else if (255 === (x[D] & 255) && 240 === (x[D + 1] & 240)) {
                        if (7 > x.length - D) break
                        K = wf.parseAdtsSize(x, D)
                        if (D + K > x.length) break
                        N = { type: 'audio', data: x.subarray(D, D + K), pts: J, dts: J }
                        this.trigger('data', N)
                        D += K
                      } else D++
                    x = 0 < x.length - D ? x.subarray(D) : new Uint8Array()
                  }
                  this.reset = function () {
                    x = new Uint8Array()
                    this.trigger('reset')
                  }
                  this.endTimeline = function () {
                    x = new Uint8Array()
                    this.trigger('endedtimeline')
                  }
                }
                xf.prototype = new p()
                var Th = [
                    'audioobjecttype',
                    'channelcount',
                    'samplerate',
                    'samplingfrequencyindex',
                    'samplesize',
                  ],
                  Uh = 'width height profileIdc levelIdc profileCompatibility sarRatio'.split(' '),
                  Wq = wf.isLikelyAacData,
                  Xq = Ca.ONE_SECOND_IN_TS,
                  jm = function (x, J) {
                    var K
                    if (x.length !== J.length) return !1
                    for (K = 0; K < x.length; K++) if (x[K] !== J[K]) return !1
                    return !0
                  },
                  km = function (x, J, K, D, N, G) {
                    return {
                      start: { dts: x, pts: x + (K - J) },
                      end: { dts: x + (D - J), pts: x + (N - K) },
                      prependedContentDuration: G,
                      baseMediaDecodeTime: x,
                    }
                  }
                var yf = function (x, J) {
                  var K = [],
                    D = 0,
                    N = 0,
                    G = 0,
                    P = Infinity
                  J = J || {}
                  yf.prototype.init.call(this)
                  this.push = function (L) {
                    $a.collectDtsInfo(x, L)
                    x &&
                      Th.forEach(function (Y) {
                        x[Y] = L[Y]
                      })
                    K.push(L)
                  }
                  this.setEarliestDts = function (L) {
                    N = L
                  }
                  this.setVideoBaseMediaDecodeTime = function (L) {
                    P = L
                  }
                  this.setAudioAppendStart = function (L) {
                    G = L
                  }
                  this.flush = function () {
                    if (0 !== K.length) {
                      var L = Nc.trimAdtsFramesByEarliestDts(K, x, N)
                      x.baseMediaDecodeTime = $a.calculateTrackBaseMediaDecodeTime(
                        x,
                        J.keepOriginalTimestamps,
                      )
                      var Y = Nc.prefixWithSilence(x, L, G, P)
                      x.samples = Nc.generateSampleTable(L)
                      var ha = gc.mdat(Nc.concatenateFrameData(L))
                      K = []
                      var la = gc.moof(D, [x])
                      var ba = new Uint8Array(la.byteLength + ha.byteLength)
                      D++
                      ba.set(la)
                      ba.set(ha, la.byteLength)
                      $a.clearDtsInfo(x)
                      la = Math.ceil((1024 * Xq) / x.samplerate)
                      L.length &&
                        ((la *= L.length),
                        this.trigger(
                          'segmentTimingInfo',
                          km(
                            Ca.audioTsToVideoTs(x.baseMediaDecodeTime, x.samplerate),
                            L[0].dts,
                            L[0].pts,
                            L[0].dts + la,
                            L[0].pts + la,
                            Y || 0,
                          ),
                        ),
                        this.trigger('timingInfo', { start: L[0].pts, end: L[0].pts + la }))
                      this.trigger('data', { track: x, boxes: ba })
                    }
                    this.trigger('done', 'AudioSegmentStream')
                  }
                  this.reset = function () {
                    $a.clearDtsInfo(x)
                    K = []
                    this.trigger('reset')
                  }
                }
                yf.prototype = new p()
                var Vh = function (x, J) {
                  var K = 0,
                    D = [],
                    N = [],
                    G,
                    P
                  J = J || {}
                  Vh.prototype.init.call(this)
                  delete x.minPTS
                  this.gopCache_ = []
                  this.push = function (L) {
                    $a.collectDtsInfo(x, L)
                    'seq_parameter_set_rbsp' !== L.nalUnitType ||
                      G ||
                      ((G = L.config),
                      (x.sps = [L.data]),
                      Uh.forEach(function (Y) {
                        x[Y] = G[Y]
                      }, this))
                    'pic_parameter_set_rbsp' !== L.nalUnitType ||
                      P ||
                      ((P = L.data), (x.pps = [L.data]))
                    D.push(L)
                  }
                  this.flush = function () {
                    var L
                    var Y = 0
                    for (
                      var ha, la;
                      D.length && 'access_unit_delimiter_rbsp' !== D[0].nalUnitType;

                    )
                      D.shift()
                    if (0 !== D.length) {
                      var ba = pc.groupNalsIntoFrames(D)
                      ba = pc.groupFramesIntoGops(ba)
                      ba[0][0].keyFrame ||
                        ((L = this.getGopForFusion_(D[0], x))
                          ? ((Y = L.duration),
                            ba.unshift(L),
                            (ba.byteLength += L.byteLength),
                            (ba.nalCount += L.nalCount),
                            (ba.pts = L.pts),
                            (ba.dts = L.dts),
                            (ba.duration += L.duration))
                          : (ba = pc.extendFirstKeyFrame(ba)))
                      if (N.length) {
                        L = J.alignGopsAtEnd ? this.alignGopsAtEnd_(ba) : this.alignGopsAtStart_(ba)
                        if (!L) {
                          this.gopCache_.unshift({ gop: ba.pop(), pps: x.pps, sps: x.sps })
                          this.gopCache_.length = Math.min(6, this.gopCache_.length)
                          D = []
                          this.resetStream_()
                          this.trigger('done', 'VideoSegmentStream')
                          return
                        }
                        $a.clearDtsInfo(x)
                        ba = L
                      }
                      $a.collectDtsInfo(x, ba)
                      x.samples = pc.generateSampleTable(ba)
                      L = gc.mdat(pc.concatenateNalData(ba))
                      x.baseMediaDecodeTime = $a.calculateTrackBaseMediaDecodeTime(
                        x,
                        J.keepOriginalTimestamps,
                      )
                      this.trigger(
                        'processedGopsInfo',
                        ba.map(function (ma) {
                          return { pts: ma.pts, dts: ma.dts, byteLength: ma.byteLength }
                        }),
                      )
                      ha = ba[0]
                      la = ba[ba.length - 1]
                      this.trigger(
                        'segmentTimingInfo',
                        km(
                          x.baseMediaDecodeTime,
                          ha.dts,
                          ha.pts,
                          la.dts + la.duration,
                          la.pts + la.duration,
                          Y,
                        ),
                      )
                      this.trigger('timingInfo', {
                        start: ba[0].pts,
                        end: ba[ba.length - 1].pts + ba[ba.length - 1].duration,
                      })
                      this.gopCache_.unshift({ gop: ba.pop(), pps: x.pps, sps: x.sps })
                      this.gopCache_.length = Math.min(6, this.gopCache_.length)
                      D = []
                      this.trigger('baseMediaDecodeTime', x.baseMediaDecodeTime)
                      this.trigger('timelineStartInfo', x.timelineStartInfo)
                      Y = gc.moof(K, [x])
                      ba = new Uint8Array(Y.byteLength + L.byteLength)
                      K++
                      ba.set(Y)
                      ba.set(L, Y.byteLength)
                      this.trigger('data', { track: x, boxes: ba })
                    }
                    this.resetStream_()
                    this.trigger('done', 'VideoSegmentStream')
                  }
                  this.reset = function () {
                    this.resetStream_()
                    D = []
                    this.gopCache_.length = 0
                    N.length = 0
                    this.trigger('reset')
                  }
                  this.resetStream_ = function () {
                    $a.clearDtsInfo(x)
                    P = G = void 0
                  }
                  this.getGopForFusion_ = function (L) {
                    var Y = Infinity,
                      ha
                    for (ha = 0; ha < this.gopCache_.length; ha++) {
                      var la = this.gopCache_[ha]
                      var ba = la.gop
                      if (
                        x.pps &&
                        jm(x.pps[0], la.pps[0]) &&
                        x.sps &&
                        jm(x.sps[0], la.sps[0]) &&
                        !(ba.dts < x.timelineStartInfo.dts) &&
                        ((ba = L.dts - ba.dts - ba.duration),
                        -1e4 <= ba && 45e3 >= ba && (!ma || Y > ba))
                      ) {
                        var ma = la
                        Y = ba
                      }
                    }
                    return ma ? ma.gop : null
                  }
                  this.alignGopsAtStart_ = function (L) {
                    var Y, ha
                    var la = L.byteLength
                    var ba = L.nalCount
                    var ma = L.duration
                    for (Y = ha = 0; Y < N.length && ha < L.length; ) {
                      var wa = N[Y]
                      var ta = L[ha]
                      if (wa.pts === ta.pts) break
                      ta.pts > wa.pts
                        ? Y++
                        : (ha++, (la -= ta.byteLength), (ba -= ta.nalCount), (ma -= ta.duration))
                    }
                    if (0 === ha) return L
                    if (ha === L.length) return null
                    L = L.slice(ha)
                    L.byteLength = la
                    L.duration = ma
                    L.nalCount = ba
                    L.pts = L[0].pts
                    L.dts = L[0].dts
                    return L
                  }
                  this.alignGopsAtEnd_ = function (L) {
                    var Y
                    var ha = N.length - 1
                    var la = L.length - 1
                    var ba = null
                    for (Y = !1; 0 <= ha && 0 <= la; ) {
                      var ma = N[ha]
                      var wa = L[la]
                      if (ma.pts === wa.pts) {
                        Y = !0
                        break
                      }
                      ma.pts > wa.pts ? ha-- : (ha === N.length - 1 && (ba = la), la--)
                    }
                    if (!Y && null === ba) return null
                    ha = Y ? la : ba
                    if (0 === ha) return L
                    L = L.slice(ha)
                    ha = L.reduce(
                      function (ta, Da) {
                        ta.byteLength += Da.byteLength
                        ta.duration += Da.duration
                        ta.nalCount += Da.nalCount
                        return ta
                      },
                      { byteLength: 0, duration: 0, nalCount: 0 },
                    )
                    L.byteLength = ha.byteLength
                    L.duration = ha.duration
                    L.nalCount = ha.nalCount
                    L.pts = L[0].pts
                    L.dts = L[0].dts
                    return L
                  }
                  this.alignGopsWith = function (L) {
                    N = L
                  }
                }
                Vh.prototype = new p()
                var Ed = function (x, J) {
                  this.numberOfTracks = 0
                  this.metadataStream = J
                  x = x || {}
                  this.remuxTracks = 'undefined' !== typeof x.remux ? !!x.remux : !0
                  this.keepOriginalTimestamps =
                    'boolean' === typeof x.keepOriginalTimestamps ? x.keepOriginalTimestamps : !1
                  this.pendingTracks = []
                  this.videoTrack = null
                  this.pendingBoxes = []
                  this.pendingCaptions = []
                  this.pendingMetadata = []
                  this.emittedTracks = this.pendingBytes = 0
                  Ed.prototype.init.call(this)
                  this.push = function (K) {
                    if (K.text) return this.pendingCaptions.push(K)
                    if (K.frames) return this.pendingMetadata.push(K)
                    this.pendingTracks.push(K.track)
                    this.pendingBytes += K.boxes.byteLength
                    'video' === K.track.type &&
                      ((this.videoTrack = K.track), this.pendingBoxes.push(K.boxes))
                    'audio' === K.track.type &&
                      ((this.audioTrack = K.track), this.pendingBoxes.unshift(K.boxes))
                  }
                }
                Ed.prototype = new p()
                Ed.prototype.flush = function (x) {
                  var J = 0,
                    K = { captions: [], captionStreams: {}, metadata: [], info: {} },
                    D = 0
                  if (this.pendingTracks.length < this.numberOfTracks) {
                    if (
                      ('VideoSegmentStream' !== x && 'AudioSegmentStream' !== x) ||
                      this.remuxTracks
                    )
                      return
                    if (0 === this.pendingTracks.length) {
                      this.emittedTracks++
                      this.emittedTracks >= this.numberOfTracks &&
                        (this.trigger('done'), (this.emittedTracks = 0))
                      return
                    }
                  }
                  this.videoTrack
                    ? ((D = this.videoTrack.timelineStartInfo.pts),
                      Uh.forEach(function (N) {
                        K.info[N] = this.videoTrack[N]
                      }, this))
                    : this.audioTrack &&
                      ((D = this.audioTrack.timelineStartInfo.pts),
                      Th.forEach(function (N) {
                        K.info[N] = this.audioTrack[N]
                      }, this))
                  if (this.videoTrack || this.audioTrack) {
                    K.type =
                      1 === this.pendingTracks.length ? this.pendingTracks[0].type : 'combined'
                    this.emittedTracks += this.pendingTracks.length
                    x = gc.initSegment(this.pendingTracks)
                    K.initSegment = new Uint8Array(x.byteLength)
                    K.initSegment.set(x)
                    K.data = new Uint8Array(this.pendingBytes)
                    for (x = 0; x < this.pendingBoxes.length; x++)
                      K.data.set(this.pendingBoxes[x], J), (J += this.pendingBoxes[x].byteLength)
                    for (x = 0; x < this.pendingCaptions.length; x++)
                      (J = this.pendingCaptions[x]),
                        (J.startTime = Ca.metadataTsToSeconds(
                          J.startPts,
                          D,
                          this.keepOriginalTimestamps,
                        )),
                        (J.endTime = Ca.metadataTsToSeconds(
                          J.endPts,
                          D,
                          this.keepOriginalTimestamps,
                        )),
                        (K.captionStreams[J.stream] = !0),
                        K.captions.push(J)
                    for (x = 0; x < this.pendingMetadata.length; x++)
                      (J = this.pendingMetadata[x]),
                        (J.cueTime = Ca.metadataTsToSeconds(J.pts, D, this.keepOriginalTimestamps)),
                        K.metadata.push(J)
                    K.metadata.dispatchType = this.metadataStream.dispatchType
                    this.pendingTracks.length = 0
                    this.videoTrack = null
                    this.pendingBoxes.length = 0
                    this.pendingBytes = this.pendingCaptions.length = 0
                    this.pendingMetadata.length = 0
                    this.trigger('data', K)
                    for (x = 0; x < K.captions.length; x++)
                      (J = K.captions[x]), this.trigger('caption', J)
                    for (x = 0; x < K.metadata.length; x++)
                      (J = K.metadata[x]), this.trigger('id3Frame', J)
                  }
                  this.emittedTracks >= this.numberOfTracks &&
                    (this.trigger('done'), (this.emittedTracks = 0))
                }
                Ed.prototype.setRemux = function (x) {
                  this.remuxTracks = x
                }
                var Wh = function (x) {
                  var J = this,
                    K = !0,
                    D,
                    N
                  Wh.prototype.init.call(this)
                  x = x || {}
                  this.baseMediaDecodeTime = x.baseMediaDecodeTime || 0
                  this.transmuxPipeline_ = {}
                  this.setupAacPipeline = function () {
                    var G = {}
                    this.transmuxPipeline_ = G
                    G.type = 'aac'
                    G.metadataStream = new fb.MetadataStream()
                    G.aacStream = new xf()
                    G.audioTimestampRolloverStream = new fb.TimestampRolloverStream('audio')
                    G.timedMetadataTimestampRolloverStream = new fb.TimestampRolloverStream(
                      'timed-metadata',
                    )
                    G.adtsStream = new Dd()
                    G.coalesceStream = new Ed(x, G.metadataStream)
                    G.headOfPipeline = G.aacStream
                    G.aacStream.pipe(G.audioTimestampRolloverStream).pipe(G.adtsStream)
                    G.aacStream
                      .pipe(G.timedMetadataTimestampRolloverStream)
                      .pipe(G.metadataStream)
                      .pipe(G.coalesceStream)
                    G.metadataStream.on('timestamp', function (P) {
                      G.aacStream.setTimestamp(P.timeStamp)
                    })
                    G.aacStream.on('data', function (P) {
                      ;('timed-metadata' !== P.type && 'audio' !== P.type) ||
                        G.audioSegmentStream ||
                        ((N = N || {
                          timelineStartInfo: { baseMediaDecodeTime: J.baseMediaDecodeTime },
                          codec: 'adts',
                          type: 'audio',
                        }),
                        G.coalesceStream.numberOfTracks++,
                        (G.audioSegmentStream = new yf(N, x)),
                        G.audioSegmentStream.on('timingInfo', J.trigger.bind(J, 'audioTimingInfo')),
                        G.adtsStream.pipe(G.audioSegmentStream).pipe(G.coalesceStream),
                        J.trigger('trackinfo', { hasAudio: !!N, hasVideo: !!D }))
                    })
                    G.coalesceStream.on('data', this.trigger.bind(this, 'data'))
                    G.coalesceStream.on('done', this.trigger.bind(this, 'done'))
                  }
                  this.setupTsPipeline = function () {
                    var G = {}
                    this.transmuxPipeline_ = G
                    G.type = 'ts'
                    G.metadataStream = new fb.MetadataStream()
                    G.packetStream = new fb.TransportPacketStream()
                    G.parseStream = new fb.TransportParseStream()
                    G.elementaryStream = new fb.ElementaryStream()
                    G.timestampRolloverStream = new fb.TimestampRolloverStream()
                    G.adtsStream = new Dd()
                    G.h264Stream = new vf()
                    G.captionStream = new fb.CaptionStream(x)
                    G.coalesceStream = new Ed(x, G.metadataStream)
                    G.headOfPipeline = G.packetStream
                    G.packetStream
                      .pipe(G.parseStream)
                      .pipe(G.elementaryStream)
                      .pipe(G.timestampRolloverStream)
                    G.timestampRolloverStream.pipe(G.h264Stream)
                    G.timestampRolloverStream.pipe(G.adtsStream)
                    G.timestampRolloverStream.pipe(G.metadataStream).pipe(G.coalesceStream)
                    G.h264Stream.pipe(G.captionStream).pipe(G.coalesceStream)
                    G.elementaryStream.on('data', function (P) {
                      var L
                      if ('metadata' === P.type) {
                        for (L = P.tracks.length; L--; )
                          D || 'video' !== P.tracks[L].type
                            ? N ||
                              'audio' !== P.tracks[L].type ||
                              ((N = P.tracks[L]),
                              (N.timelineStartInfo.baseMediaDecodeTime = J.baseMediaDecodeTime))
                            : ((D = P.tracks[L]),
                              (D.timelineStartInfo.baseMediaDecodeTime = J.baseMediaDecodeTime))
                        D &&
                          !G.videoSegmentStream &&
                          (G.coalesceStream.numberOfTracks++,
                          (G.videoSegmentStream = new Vh(D, x)),
                          G.videoSegmentStream.on('timelineStartInfo', function (Y) {
                            N &&
                              !x.keepOriginalTimestamps &&
                              ((N.timelineStartInfo = Y),
                              G.audioSegmentStream.setEarliestDts(Y.dts - J.baseMediaDecodeTime))
                          }),
                          G.videoSegmentStream.on(
                            'processedGopsInfo',
                            J.trigger.bind(J, 'gopInfo'),
                          ),
                          G.videoSegmentStream.on(
                            'segmentTimingInfo',
                            J.trigger.bind(J, 'videoSegmentTimingInfo'),
                          ),
                          G.videoSegmentStream.on('baseMediaDecodeTime', function (Y) {
                            N && G.audioSegmentStream.setVideoBaseMediaDecodeTime(Y)
                          }),
                          G.videoSegmentStream.on(
                            'timingInfo',
                            J.trigger.bind(J, 'videoTimingInfo'),
                          ),
                          G.h264Stream.pipe(G.videoSegmentStream).pipe(G.coalesceStream))
                        N &&
                          !G.audioSegmentStream &&
                          (G.coalesceStream.numberOfTracks++,
                          (G.audioSegmentStream = new yf(N, x)),
                          G.audioSegmentStream.on(
                            'timingInfo',
                            J.trigger.bind(J, 'audioTimingInfo'),
                          ),
                          G.audioSegmentStream.on(
                            'segmentTimingInfo',
                            J.trigger.bind(J, 'audioSegmentTimingInfo'),
                          ),
                          G.adtsStream.pipe(G.audioSegmentStream).pipe(G.coalesceStream))
                        J.trigger('trackinfo', { hasAudio: !!N, hasVideo: !!D })
                      }
                    })
                    G.coalesceStream.on('data', this.trigger.bind(this, 'data'))
                    G.coalesceStream.on('id3Frame', function (P) {
                      P.dispatchType = G.metadataStream.dispatchType
                      J.trigger('id3Frame', P)
                    })
                    G.coalesceStream.on('caption', this.trigger.bind(this, 'caption'))
                    G.coalesceStream.on('done', this.trigger.bind(this, 'done'))
                  }
                  this.setBaseMediaDecodeTime = function (G) {
                    var P = this.transmuxPipeline_
                    x.keepOriginalTimestamps || (this.baseMediaDecodeTime = G)
                    N &&
                      ((N.timelineStartInfo.dts = void 0),
                      (N.timelineStartInfo.pts = void 0),
                      $a.clearDtsInfo(N),
                      P.audioTimestampRolloverStream &&
                        P.audioTimestampRolloverStream.discontinuity())
                    D &&
                      (P.videoSegmentStream && (P.videoSegmentStream.gopCache_ = []),
                      (D.timelineStartInfo.dts = void 0),
                      (D.timelineStartInfo.pts = void 0),
                      $a.clearDtsInfo(D),
                      P.captionStream.reset())
                    P.timestampRolloverStream && P.timestampRolloverStream.discontinuity()
                  }
                  this.setAudioAppendStart = function (G) {
                    N && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(G)
                  }
                  this.setRemux = function (G) {
                    var P = this.transmuxPipeline_
                    x.remux = G
                    P && P.coalesceStream && P.coalesceStream.setRemux(G)
                  }
                  this.alignGopsWith = function (G) {
                    D &&
                      this.transmuxPipeline_.videoSegmentStream &&
                      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(G)
                  }
                  this.push = function (G) {
                    if (K) {
                      var P = Wq(G)
                      P && 'aac' !== this.transmuxPipeline_.type
                        ? this.setupAacPipeline()
                        : P || 'ts' === this.transmuxPipeline_.type || this.setupTsPipeline()
                      K = !1
                    }
                    this.transmuxPipeline_.headOfPipeline.push(G)
                  }
                  this.flush = function () {
                    K = !0
                    this.transmuxPipeline_.headOfPipeline.flush()
                  }
                  this.endTimeline = function () {
                    this.transmuxPipeline_.headOfPipeline.endTimeline()
                  }
                  this.reset = function () {
                    this.transmuxPipeline_.headOfPipeline &&
                      this.transmuxPipeline_.headOfPipeline.reset()
                  }
                  this.resetCaptions = function () {
                    this.transmuxPipeline_.captionStream &&
                      this.transmuxPipeline_.captionStream.reset()
                  }
                }
                Wh.prototype = new p()
                var Yq = Ca.ONE_SECOND_IN_TS,
                  Xh = function D(J, K) {
                    var N = [],
                      G = 0,
                      P = 0,
                      L = 0,
                      Y = Infinity,
                      ha = null,
                      la = null
                    K = K || {}
                    D.prototype.init.call(this)
                    this.push = function (ba) {
                      $a.collectDtsInfo(J, ba)
                      J &&
                        Th.forEach(function (ma) {
                          J[ma] = ba[ma]
                        })
                      N.push(ba)
                    }
                    this.setEarliestDts = function (ba) {
                      P = ba
                    }
                    this.setVideoBaseMediaDecodeTime = function (ba) {
                      Y = ba
                    }
                    this.setAudioAppendStart = function (ba) {
                      L = ba
                    }
                    this.processFrames_ = function () {
                      if (0 !== N.length) {
                        var ba = Nc.trimAdtsFramesByEarliestDts(N, J, P)
                        if (0 !== ba.length) {
                          J.baseMediaDecodeTime = $a.calculateTrackBaseMediaDecodeTime(
                            J,
                            K.keepOriginalTimestamps,
                          )
                          Nc.prefixWithSilence(J, ba, L, Y)
                          J.samples = Nc.generateSampleTable(ba)
                          var ma = gc.mdat(Nc.concatenateFrameData(ba))
                          N = []
                          var wa = gc.moof(G, [J])
                          G++
                          J.initSegment = gc.initSegment([J])
                          var ta = new Uint8Array(wa.byteLength + ma.byteLength)
                          ta.set(wa)
                          ta.set(ma, wa.byteLength)
                          $a.clearDtsInfo(J)
                          null === ha && (la = ha = ba[0].pts)
                          la += ((1024 * Yq) / J.samplerate) * ba.length
                          this.trigger('timingInfo', { start: ha })
                          this.trigger('data', { track: J, boxes: ta })
                        }
                      }
                    }
                    this.flush = function () {
                      this.processFrames_()
                      this.trigger('timingInfo', { start: ha, end: la })
                      this.resetTiming_()
                      this.trigger('done', 'AudioSegmentStream')
                    }
                    this.partialFlush = function () {
                      this.processFrames_()
                      this.trigger('partialdone', 'AudioSegmentStream')
                    }
                    this.endTimeline = function () {
                      this.flush()
                      this.trigger('endedtimeline', 'AudioSegmentStream')
                    }
                    this.resetTiming_ = function () {
                      $a.clearDtsInfo(J)
                      la = ha = null
                    }
                    this.reset = function () {
                      this.resetTiming_()
                      N = []
                      this.trigger('reset')
                    }
                  }
                Xh.prototype = new p()
                var lm = function N(K, D) {
                  var G = 0,
                    P = [],
                    L = [],
                    Y,
                    ha,
                    la = null,
                    ba = null,
                    ma,
                    wa = !0
                  D = D || {}
                  N.prototype.init.call(this)
                  this.push = function (ta) {
                    $a.collectDtsInfo(K, ta)
                    'undefined' === typeof K.timelineStartInfo.dts &&
                      (K.timelineStartInfo.dts = ta.dts)
                    'seq_parameter_set_rbsp' !== ta.nalUnitType ||
                      Y ||
                      ((Y = ta.config),
                      (K.sps = [ta.data]),
                      Uh.forEach(function (Da) {
                        K[Da] = Y[Da]
                      }, this))
                    'pic_parameter_set_rbsp' !== ta.nalUnitType ||
                      ha ||
                      ((ha = ta.data), (K.pps = [ta.data]))
                    P.push(ta)
                  }
                  this.processNals_ = function (ta) {
                    for (
                      P = L.concat(P);
                      P.length && 'access_unit_delimiter_rbsp' !== P[0].nalUnitType;

                    )
                      P.shift()
                    if (0 !== P.length) {
                      var Da = pc.groupNalsIntoFrames(P)
                      if (Da.length) {
                        L = Da[Da.length - 1]
                        ta &&
                          (Da.pop(),
                          (Da.duration -= L.duration),
                          (Da.nalCount -= L.length),
                          (Da.byteLength -= L.byteLength))
                        if (Da.length) {
                          this.trigger('timelineStartInfo', K.timelineStartInfo)
                          if (wa) {
                            ma = pc.groupFramesIntoGops(Da)
                            if (!ma[0][0].keyFrame) {
                              ma = pc.extendFirstKeyFrame(ma)
                              if (!ma[0][0].keyFrame) {
                                P = [].concat.apply([], Da).concat(L)
                                L = []
                                return
                              }
                              Da = [].concat.apply([], ma)
                              Da.duration = ma.duration
                            }
                            wa = !1
                          }
                          null === la && (ba = la = Da[0].pts)
                          ba += Da.duration
                          this.trigger('timingInfo', { start: la, end: ba })
                          for (ta = 0; ta < Da.length; ta++) {
                            var Ia = Da[ta]
                            K.samples = pc.generateSampleTableForFrame(Ia)
                            var gb = gc.mdat(pc.concatenateNalDataForFrame(Ia))
                            $a.clearDtsInfo(K)
                            $a.collectDtsInfo(K, Ia)
                            K.baseMediaDecodeTime = $a.calculateTrackBaseMediaDecodeTime(
                              K,
                              D.keepOriginalTimestamps,
                            )
                            var Zb = gc.moof(G, [K])
                            G++
                            K.initSegment = gc.initSegment([K])
                            var hc = new Uint8Array(Zb.byteLength + gb.byteLength)
                            hc.set(Zb)
                            hc.set(gb, Zb.byteLength)
                            this.trigger('data', {
                              track: K,
                              boxes: hc,
                              sequence: G,
                              videoFrameDts: Ia.dts,
                              videoFramePts: Ia.pts,
                            })
                          }
                        }
                        P = []
                      }
                    }
                  }
                  this.resetTimingAndConfig_ = function () {
                    ha = Y = void 0
                    ba = la = null
                  }
                  this.partialFlush = function () {
                    this.processNals_(!0)
                    this.trigger('partialdone', 'VideoSegmentStream')
                  }
                  this.flush = function () {
                    this.processNals_(!1)
                    this.resetTimingAndConfig_()
                    this.trigger('done', 'VideoSegmentStream')
                  }
                  this.endTimeline = function () {
                    this.flush()
                    this.trigger('endedtimeline', 'VideoSegmentStream')
                  }
                  this.reset = function () {
                    this.resetTimingAndConfig_()
                    L = []
                    P = []
                    wa = !0
                    this.trigger('reset')
                  }
                }
                lm.prototype = new p()
                var Zq = wf.isLikelyAacData,
                  mm = function (K) {
                    K.prototype = new p()
                    K.prototype.init.call(K)
                    return K
                  },
                  $q = function (K) {
                    var D = {
                      type: 'ts',
                      tracks: { audio: null, video: null },
                      packet: new fb.TransportPacketStream(),
                      parse: new fb.TransportParseStream(),
                      elementary: new fb.ElementaryStream(),
                      timestampRollover: new fb.TimestampRolloverStream(),
                      adts: new Dd(),
                      h264: new vf(),
                      captionStream: new fb.CaptionStream(K),
                      metadataStream: new fb.MetadataStream(),
                    }
                    D.headOfPipeline = D.packet
                    D.packet.pipe(D.parse).pipe(D.elementary).pipe(D.timestampRollover)
                    D.timestampRollover.pipe(D.h264)
                    D.h264.pipe(D.captionStream)
                    D.timestampRollover.pipe(D.metadataStream)
                    D.timestampRollover.pipe(D.adts)
                    D.elementary.on('data', function (N) {
                      if ('metadata' === N.type) {
                        for (var G = 0; G < N.tracks.length; G++)
                          D.tracks[N.tracks[G].type] ||
                            ((D.tracks[N.tracks[G].type] = N.tracks[G]),
                            (D.tracks[N.tracks[G].type].timelineStartInfo.baseMediaDecodeTime =
                              K.baseMediaDecodeTime))
                        D.tracks.video &&
                          !D.videoSegmentStream &&
                          ((D.videoSegmentStream = new lm(D.tracks.video, K)),
                          D.videoSegmentStream.on('timelineStartInfo', function (P) {
                            D.tracks.audio &&
                              !K.keepOriginalTimestamps &&
                              D.audioSegmentStream.setEarliestDts(P.dts - K.baseMediaDecodeTime)
                          }),
                          D.videoSegmentStream.on(
                            'timingInfo',
                            D.trigger.bind(D, 'videoTimingInfo'),
                          ),
                          D.videoSegmentStream.on('data', function (P) {
                            D.trigger('data', { type: 'video', data: P })
                          }),
                          D.videoSegmentStream.on('done', D.trigger.bind(D, 'done')),
                          D.videoSegmentStream.on('partialdone', D.trigger.bind(D, 'partialdone')),
                          D.videoSegmentStream.on(
                            'endedtimeline',
                            D.trigger.bind(D, 'endedtimeline'),
                          ),
                          D.h264.pipe(D.videoSegmentStream))
                        D.tracks.audio &&
                          !D.audioSegmentStream &&
                          ((D.audioSegmentStream = new Xh(D.tracks.audio, K)),
                          D.audioSegmentStream.on('data', function (P) {
                            D.trigger('data', { type: 'audio', data: P })
                          }),
                          D.audioSegmentStream.on('done', D.trigger.bind(D, 'done')),
                          D.audioSegmentStream.on('partialdone', D.trigger.bind(D, 'partialdone')),
                          D.audioSegmentStream.on(
                            'endedtimeline',
                            D.trigger.bind(D, 'endedtimeline'),
                          ),
                          D.audioSegmentStream.on(
                            'timingInfo',
                            D.trigger.bind(D, 'audioTimingInfo'),
                          ),
                          D.adts.pipe(D.audioSegmentStream))
                        D.trigger('trackinfo', {
                          hasAudio: !!D.tracks.audio,
                          hasVideo: !!D.tracks.video,
                        })
                      }
                    })
                    D.captionStream.on('data', function (N) {
                      var G = D.tracks.video ? D.tracks.video.timelineStartInfo.pts || 0 : 0
                      N.startTime = Ca.metadataTsToSeconds(N.startPts, G, K.keepOriginalTimestamps)
                      N.endTime = Ca.metadataTsToSeconds(N.endPts, G, K.keepOriginalTimestamps)
                      D.trigger('caption', N)
                    })
                    D = mm(D)
                    D.metadataStream.on('data', D.trigger.bind(D, 'id3Frame'))
                    return D
                  },
                  ar = function (K) {
                    var D = {
                      type: 'aac',
                      tracks: { audio: null },
                      metadataStream: new fb.MetadataStream(),
                      aacStream: new xf(),
                      audioRollover: new fb.TimestampRolloverStream('audio'),
                      timedMetadataRollover: new fb.TimestampRolloverStream('timed-metadata'),
                      adtsStream: new Dd(!0),
                    }
                    D.headOfPipeline = D.aacStream
                    D.aacStream.pipe(D.audioRollover).pipe(D.adtsStream)
                    D.aacStream.pipe(D.timedMetadataRollover).pipe(D.metadataStream)
                    D.metadataStream.on('timestamp', function (N) {
                      D.aacStream.setTimestamp(N.timeStamp)
                    })
                    D.aacStream.on('data', function (N) {
                      ;('timed-metadata' !== N.type && 'audio' !== N.type) ||
                        D.audioSegmentStream ||
                        ((D.tracks.audio = D.tracks.audio || {
                          timelineStartInfo: { baseMediaDecodeTime: K.baseMediaDecodeTime },
                          codec: 'adts',
                          type: 'audio',
                        }),
                        (D.audioSegmentStream = new Xh(D.tracks.audio, K)),
                        D.audioSegmentStream.on('data', function (G) {
                          D.trigger('data', { type: 'audio', data: G })
                        }),
                        D.audioSegmentStream.on('partialdone', D.trigger.bind(D, 'partialdone')),
                        D.audioSegmentStream.on('done', D.trigger.bind(D, 'done')),
                        D.audioSegmentStream.on(
                          'endedtimeline',
                          D.trigger.bind(D, 'endedtimeline'),
                        ),
                        D.audioSegmentStream.on('timingInfo', D.trigger.bind(D, 'audioTimingInfo')),
                        D.adtsStream.pipe(D.audioSegmentStream),
                        D.trigger('trackinfo', {
                          hasAudio: !!D.tracks.audio,
                          hasVideo: !!D.tracks.video,
                        }))
                    })
                    D = mm(D)
                    D.metadataStream.on('data', D.trigger.bind(D, 'id3Frame'))
                    return D
                  },
                  nm = function (K, D) {
                    K.on('data', D.trigger.bind(D, 'data'))
                    K.on('done', D.trigger.bind(D, 'done'))
                    K.on('partialdone', D.trigger.bind(D, 'partialdone'))
                    K.on('endedtimeline', D.trigger.bind(D, 'endedtimeline'))
                    K.on('audioTimingInfo', D.trigger.bind(D, 'audioTimingInfo'))
                    K.on('videoTimingInfo', D.trigger.bind(D, 'videoTimingInfo'))
                    K.on('trackinfo', D.trigger.bind(D, 'trackinfo'))
                    K.on('id3Frame', function (N) {
                      N.dispatchType = K.metadataStream.dispatchType
                      N.cueTime = Ca.videoTsToSeconds(N.pts)
                      D.trigger('id3Frame', N)
                    })
                    K.on('caption', function (N) {
                      D.trigger('caption', N)
                    })
                  },
                  om = function N(D) {
                    var G = null,
                      P = !0
                    D = D || {}
                    N.prototype.init.call(this)
                    D.baseMediaDecodeTime = D.baseMediaDecodeTime || 0
                    this.push = function (L) {
                      if (P) {
                        var Y = Zq(L)
                        !Y || (G && 'aac' === G.type)
                          ? Y || (G && 'ts' === G.type) || ((G = $q(D)), nm(G, this))
                          : ((G = ar(D)), nm(G, this))
                        P = !1
                      }
                      G.headOfPipeline.push(L)
                    }
                    this.flush = function () {
                      G && ((P = !0), G.headOfPipeline.flush())
                    }
                    this.partialFlush = function () {
                      G && G.headOfPipeline.partialFlush()
                    }
                    this.endTimeline = function () {
                      G && G.headOfPipeline.endTimeline()
                    }
                    this.reset = function () {
                      G && G.headOfPipeline.reset()
                    }
                    this.setBaseMediaDecodeTime = function (L) {
                      D.keepOriginalTimestamps || (D.baseMediaDecodeTime = L)
                      G &&
                        (G.tracks.audio &&
                          ((G.tracks.audio.timelineStartInfo.dts = void 0),
                          (G.tracks.audio.timelineStartInfo.pts = void 0),
                          $a.clearDtsInfo(G.tracks.audio),
                          G.audioRollover && G.audioRollover.discontinuity()),
                        G.tracks.video &&
                          (G.videoSegmentStream && (G.videoSegmentStream.gopCache_ = []),
                          (G.tracks.video.timelineStartInfo.dts = void 0),
                          (G.tracks.video.timelineStartInfo.pts = void 0),
                          $a.clearDtsInfo(G.tracks.video)),
                        G.timestampRollover && G.timestampRollover.discontinuity())
                    }
                    this.setRemux = function (L) {
                      D.remux = L
                      G && G.coalesceStream && G.coalesceStream.setRemux(L)
                    }
                    this.setAudioAppendStart = function (L) {
                      G &&
                        G.tracks.audio &&
                        G.audioSegmentStream &&
                        G.audioSegmentStream.setAudioAppendStart(L)
                    }
                    this.alignGopsWith = function (L) {}
                  }
                om.prototype = new p()
                var oe = function P(N, G) {
                    var L = [],
                      Y
                    if (!G.length) return null
                    for (Y = 0; Y < N.byteLength; ) {
                      var ha = ((N[Y] << 24) | (N[Y + 1] << 16) | (N[Y + 2] << 8) | N[Y + 3]) >>> 0
                      var la = N.subarray(Y + 4, Y + 8)
                      var ba = '' + String.fromCharCode(la[0])
                      ba += String.fromCharCode(la[1])
                      ba += String.fromCharCode(la[2])
                      ba += String.fromCharCode(la[3])
                      ha = 1 < ha ? Y + ha : N.byteLength
                      ba === G[0] &&
                        (1 === G.length
                          ? L.push(N.subarray(Y + 8, ha))
                          : ((Y = P(N.subarray(Y + 8, ha), G.slice(1))),
                            Y.length && (L = L.concat(Y))))
                      Y = ha
                    }
                    return L
                  },
                  pm = function (N) {
                    return {
                      isLeading: (N[0] & 12) >>> 2,
                      dependsOn: N[0] & 3,
                      isDependedOn: (N[1] & 192) >>> 6,
                      hasRedundancy: (N[1] & 48) >>> 4,
                      paddingValue: (N[1] & 14) >>> 1,
                      isNonSyncSample: N[1] & 1,
                      degradationPriority: (N[2] << 8) | N[3],
                    }
                  },
                  br = function (N) {
                    var G = { version: N[0], flags: new Uint8Array(N.subarray(1, 4)), samples: [] },
                      P = new DataView(N.buffer, N.byteOffset, N.byteLength),
                      L = G.flags[2] & 1,
                      Y = G.flags[2] & 4,
                      ha = G.flags[1] & 1,
                      la = G.flags[1] & 2,
                      ba = G.flags[1] & 4,
                      ma = G.flags[1] & 8,
                      wa = P.getUint32(4),
                      ta = 8
                    L && ((G.dataOffset = P.getInt32(ta)), (ta += 4))
                    Y &&
                      wa &&
                      ((L = { flags: pm(N.subarray(ta, ta + 4)) }),
                      (ta += 4),
                      ha && ((L.duration = P.getUint32(ta)), (ta += 4)),
                      la && ((L.size = P.getUint32(ta)), (ta += 4)),
                      ma &&
                        ((L.compositionTimeOffset =
                          1 === G.version ? P.getInt32(ta) : P.getUint32(ta)),
                        (ta += 4)),
                      G.samples.push(L),
                      wa--)
                    for (; wa--; )
                      (L = {}),
                        ha && ((L.duration = P.getUint32(ta)), (ta += 4)),
                        la && ((L.size = P.getUint32(ta)), (ta += 4)),
                        ba && ((L.flags = pm(N.subarray(ta, ta + 4))), (ta += 4)),
                        ma &&
                          ((L.compositionTimeOffset =
                            1 === G.version ? P.getInt32(ta) : P.getUint32(ta)),
                          (ta += 4)),
                        G.samples.push(L)
                    return G
                  },
                  cr = me.discardEmulationPreventionBytes,
                  dr = function (N, G, P) {
                    var L = G,
                      Y = P.defaultSampleDuration || 0,
                      ha = P.defaultSampleSize || 0,
                      la = P.trackId,
                      ba = []
                    N.forEach(function (ma) {
                      ma = br(ma).samples
                      ma.forEach(function (wa) {
                        void 0 === wa.duration && (wa.duration = Y)
                        void 0 === wa.size && (wa.size = ha)
                        wa.trackId = la
                        wa.dts = L
                        void 0 === wa.compositionTimeOffset && (wa.compositionTimeOffset = 0)
                        wa.pts = L + wa.compositionTimeOffset
                        L += wa.duration
                      })
                      ba = ba.concat(ma)
                    })
                    return ba
                  },
                  er = function (N, G) {
                    var P = oe(N, ['moof', 'traf']),
                      L = {},
                      Y = []
                    oe(N, ['mdat']).forEach(function (ha, la) {
                      Y.push({ mdat: ha, traf: P[la] })
                    })
                    Y.forEach(function (ha) {
                      var la = ha.mdat,
                        ba = ha.traf,
                        ma = oe(ba, ['tfhd'])[0]
                      ha = new DataView(ma.buffer, ma.byteOffset, ma.byteLength)
                      ma = {
                        version: ma[0],
                        flags: new Uint8Array(ma.subarray(1, 4)),
                        trackId: ha.getUint32(4),
                      }
                      var wa = ma.flags[2] & 1,
                        ta = ma.flags[2] & 2,
                        Da = ma.flags[2] & 8,
                        Ia = ma.flags[2] & 16,
                        gb = ma.flags[2] & 32,
                        Zb = ma.flags[0] & 65536,
                        hc = ma.flags[0] & 131072
                      var Ka = 8
                      wa && ((Ka += 4), (ma.baseDataOffset = ha.getUint32(12)), (Ka += 4))
                      ta && ((ma.sampleDescriptionIndex = ha.getUint32(Ka)), (Ka += 4))
                      Da && ((ma.defaultSampleDuration = ha.getUint32(Ka)), (Ka += 4))
                      Ia && ((ma.defaultSampleSize = ha.getUint32(Ka)), (Ka += 4))
                      gb && (ma.defaultSampleFlags = ha.getUint32(Ka))
                      Zb && (ma.durationIsEmpty = !0)
                      !wa && hc && (ma.baseDataOffsetIsMoof = !0)
                      ha = ma.trackId
                      wa = oe(ba, ['tfdt'])
                      0 < wa.length
                        ? ((wa = wa[0]),
                          (ta = wa[0]),
                          new Uint8Array(wa.subarray(1, 4)),
                          (Da = ((wa[4] << 24) | (wa[5] << 16) | (wa[6] << 8) | wa[7]) >>> 0),
                          1 === ta &&
                            ((Da *= Math.pow(2, 32)),
                            (Da += ((wa[8] << 24) | (wa[9] << 16) | (wa[10] << 8) | wa[11]) >>> 0)),
                          (wa = Da))
                        : (wa = 0)
                      ba = oe(ba, ['trun'])
                      if (G === ha && 0 < ba.length) {
                        ba = dr(ba, wa, ma)
                        ma = new DataView(la.buffer, la.byteOffset, la.byteLength)
                        wa = []
                        for (ta = 0; ta + 4 < la.length; ta += Da)
                          if (((Da = ma.getUint32(ta)), (ta += 4), !(0 >= Da)))
                            switch (la[ta] & 31) {
                              case 6:
                                Ia = la.subarray(ta + 1, ta + 1 + Da)
                                a: {
                                  gb = ta
                                  for (Zb = 0; Zb < ba.length; Zb++) {
                                    hc = ba[Zb]
                                    if (gb < hc.size) {
                                      gb = hc
                                      break a
                                    }
                                    gb -= hc.size
                                  }
                                  gb = null
                                }
                                Ia = {
                                  nalUnitType: 'sei_rbsp',
                                  size: Da,
                                  data: Ia,
                                  escapedRBSP: cr(Ia),
                                  trackId: ha,
                                }
                                if (gb) {
                                  Ia.pts = gb.pts
                                  Ia.dts = gb.dts
                                  var Yh = gb
                                } else if (Yh) (Ia.pts = Yh.pts), (Ia.dts = Yh.dts)
                                else {
                                  console.log(
                                    "We've encountered a nal unit without data. See mux.js#233.",
                                  )
                                  break
                                }
                                wa.push(Ia)
                            }
                        L[ha] || (L[ha] = [])
                        L[ha] = L[ha].concat(wa)
                      }
                    })
                    return L
                  },
                  fr = function () {
                    var N = !1,
                      G,
                      P,
                      L,
                      Y,
                      ha,
                      la
                    this.isInitialized = function () {
                      return N
                    }
                    this.init = function (ba) {
                      G = new Hb()
                      N = !0
                      la = ba ? ba.isPartial : !1
                      G.on('data', function (ma) {
                        ma.startTime = ma.startPts / Y
                        ma.endTime = ma.endPts / Y
                        ha.captions.push(ma)
                        ha.captionStreams[ma.stream] = !0
                      })
                    }
                    this.isNewInit = function (ba, ma) {
                      return (ba && 0 === ba.length) ||
                        (ma && 'object' === typeof ma && 0 === Object.keys(ma).length)
                        ? !1
                        : L !== ba[0] || Y !== ma[L]
                    }
                    this.parse = function (ba, ma, wa) {
                      if (this.isInitialized()) {
                        if (!ma || !wa) return null
                        if (this.isNewInit(ma, wa)) (L = ma[0]), (Y = wa[L])
                        else if (null === L || !Y) return P.push(ba), null
                      } else return null
                      for (; 0 < P.length; ) {
                        var ta = P.shift()
                        this.parse(ta, ma, wa)
                      }
                      ma = L
                      wa = Y
                      ba = null === ma ? null : { seiNals: er(ba, ma)[ma], timescale: wa }
                      if (null === ba || !ba.seiNals) return null
                      this.pushNals(ba.seiNals)
                      this.flushStream()
                      return ha
                    }
                    this.pushNals = function (ba) {
                      if (!this.isInitialized() || !ba || 0 === ba.length) return null
                      ba.forEach(function (ma) {
                        G.push(ma)
                      })
                    }
                    this.flushStream = function () {
                      if (!this.isInitialized()) return null
                      la ? G.partialFlush() : G.flush()
                    }
                    this.clearParsedCaptions = function () {
                      ha.captions = []
                      ha.captionStreams = {}
                    }
                    this.resetCaptionStream = function () {
                      if (!this.isInitialized()) return null
                      G.reset()
                    }
                    this.clearAllCaptions = function () {
                      this.clearParsedCaptions()
                      this.resetCaptionStream()
                    }
                    this.reset = function () {
                      P = []
                      Y = L = null
                      ha ? this.clearParsedCaptions() : (ha = { captions: [], captionStreams: {} })
                      this.resetCaptionStream()
                    }
                    this.reset()
                  },
                  Zh = function (N) {
                    return 'AudioSegmentStream' === N
                      ? 'audio'
                      : 'VideoSegmentStream' === N
                        ? 'video'
                        : ''
                  },
                  gr = function (N, G) {
                    G.on('data', function (P) {
                      var L = P.initSegment
                      P.initSegment = {
                        data: L.buffer,
                        byteOffset: L.byteOffset,
                        byteLength: L.byteLength,
                      }
                      L = P.data
                      P.data = L.buffer
                      N.postMessage(
                        {
                          action: 'data',
                          segment: P,
                          byteOffset: L.byteOffset,
                          byteLength: L.byteLength,
                        },
                        [P.data],
                      )
                    })
                    G.on('done', function (P) {
                      N.postMessage({ action: 'done' })
                    })
                    G.on('gopInfo', function (P) {
                      N.postMessage({ action: 'gopInfo', gopInfo: P })
                    })
                    G.on('videoSegmentTimingInfo', function (P) {
                      var L = {
                        start: {
                          decode: Ca.videoTsToSeconds(P.start.dts),
                          presentation: Ca.videoTsToSeconds(P.start.pts),
                        },
                        end: {
                          decode: Ca.videoTsToSeconds(P.end.dts),
                          presentation: Ca.videoTsToSeconds(P.end.pts),
                        },
                        baseMediaDecodeTime: Ca.videoTsToSeconds(P.baseMediaDecodeTime),
                      }
                      P.prependedContentDuration &&
                        (L.prependedContentDuration = Ca.videoTsToSeconds(
                          P.prependedContentDuration,
                        ))
                      N.postMessage({ action: 'videoSegmentTimingInfo', videoSegmentTimingInfo: L })
                    })
                    G.on('audioSegmentTimingInfo', function (P) {
                      var L = {
                        start: {
                          decode: Ca.videoTsToSeconds(P.start.dts),
                          presentation: Ca.videoTsToSeconds(P.start.pts),
                        },
                        end: {
                          decode: Ca.videoTsToSeconds(P.end.dts),
                          presentation: Ca.videoTsToSeconds(P.end.pts),
                        },
                        baseMediaDecodeTime: Ca.videoTsToSeconds(P.baseMediaDecodeTime),
                      }
                      P.prependedContentDuration &&
                        (L.prependedContentDuration = Ca.videoTsToSeconds(
                          P.prependedContentDuration,
                        ))
                      N.postMessage({ action: 'audioSegmentTimingInfo', audioSegmentTimingInfo: L })
                    })
                    G.on('id3Frame', function (P) {
                      N.postMessage({ action: 'id3Frame', id3Frame: P })
                    })
                    G.on('caption', function (P) {
                      N.postMessage({ action: 'caption', caption: P })
                    })
                    G.on('trackinfo', function (P) {
                      N.postMessage({ action: 'trackinfo', trackInfo: P })
                    })
                    G.on('audioTimingInfo', function (P) {
                      N.postMessage({
                        action: 'audioTimingInfo',
                        audioTimingInfo: {
                          start: Ca.videoTsToSeconds(P.start),
                          end: Ca.videoTsToSeconds(P.end),
                        },
                      })
                    })
                    G.on('videoTimingInfo', function (P) {
                      N.postMessage({
                        action: 'videoTimingInfo',
                        videoTimingInfo: {
                          start: Ca.videoTsToSeconds(P.start),
                          end: Ca.videoTsToSeconds(P.end),
                        },
                      })
                    })
                  },
                  hr = function (N, G) {
                    G.on('data', function (P) {
                      var L = {
                        boxes: {
                          data: P.data.boxes.buffer,
                          byteOffset: P.data.boxes.byteOffset,
                          byteLength: P.data.boxes.byteLength,
                        },
                        initSegment: {
                          data: P.data.track.initSegment.buffer,
                          byteOffset: P.data.track.initSegment.byteOffset,
                          byteLength: P.data.track.initSegment.byteLength,
                        },
                        type: P.type,
                        sequence: P.data.sequence,
                      }
                      'undefined' !== typeof P.data.videoFrameDts &&
                        (L.videoFrameDtsTime = Ca.videoTsToSeconds(P.data.videoFrameDts))
                      'undefined' !== typeof P.data.videoFramePts &&
                        (L.videoFramePtsTime = Ca.videoTsToSeconds(P.data.videoFramePts))
                      N.postMessage({ action: 'data', segment: L }, [
                        L.boxes.data,
                        L.initSegment.data,
                      ])
                    })
                    G.on('id3Frame', function (P) {
                      N.postMessage({ action: 'id3Frame', id3Frame: P })
                    })
                    G.on('caption', function (P) {
                      N.postMessage({ action: 'caption', caption: P })
                    })
                    G.on('done', function (P) {
                      N.postMessage({ action: 'done', type: Zh(P) })
                    })
                    G.on('partialdone', function (P) {
                      N.postMessage({ action: 'partialdone', type: Zh(P) })
                    })
                    G.on('endedsegment', function (P) {
                      N.postMessage({ action: 'endedSegment', type: Zh(P) })
                    })
                    G.on('trackinfo', function (P) {
                      N.postMessage({ action: 'trackinfo', trackInfo: P })
                    })
                    G.on('audioTimingInfo', function (P) {
                      if (null === P.start)
                        N.postMessage({ action: 'audioTimingInfo', audioTimingInfo: P })
                      else {
                        var L = { start: Ca.videoTsToSeconds(P.start) }
                        P.end && (L.end = Ca.videoTsToSeconds(P.end))
                        N.postMessage({ action: 'audioTimingInfo', audioTimingInfo: L })
                      }
                    })
                    G.on('videoTimingInfo', function (P) {
                      var L = { start: Ca.videoTsToSeconds(P.start) }
                      P.end && (L.end = Ca.videoTsToSeconds(P.end))
                      N.postMessage({ action: 'videoTimingInfo', videoTimingInfo: L })
                    })
                  },
                  qm = (function () {
                    function N(P, L) {
                      this.options = L || {}
                      this.self = P
                      this.init()
                    }
                    var G = N.prototype
                    G.init = function () {
                      this.transmuxer && this.transmuxer.dispose()
                      this.transmuxer = this.options.handlePartialData
                        ? new om(this.options)
                        : new Wh(this.options)
                      this.options.handlePartialData
                        ? hr(this.self, this.transmuxer)
                        : gr(this.self, this.transmuxer)
                    }
                    G.pushMp4Captions = function (P) {
                      this.captionParser ||
                        ((this.captionParser = new fr()), this.captionParser.init())
                      var L = new Uint8Array(P.data, P.byteOffset, P.byteLength)
                      P = this.captionParser.parse(L, P.trackIds, P.timescales)
                      this.self.postMessage(
                        {
                          action: 'mp4Captions',
                          captions: (P && P.captions) || [],
                          data: L.buffer,
                        },
                        [L.buffer],
                      )
                    }
                    G.clearAllMp4Captions = function () {
                      this.captionParser && this.captionParser.clearAllCaptions()
                    }
                    G.clearParsedMp4Captions = function () {
                      this.captionParser && this.captionParser.clearParsedCaptions()
                    }
                    G.push = function (P) {
                      P = new Uint8Array(P.data, P.byteOffset, P.byteLength)
                      this.transmuxer.push(P)
                    }
                    G.reset = function () {
                      this.transmuxer.reset()
                    }
                    G.setTimestampOffset = function (P) {
                      this.transmuxer.setBaseMediaDecodeTime(
                        Math.round(Ca.secondsToVideoTs(P.timestampOffset || 0)),
                      )
                    }
                    G.setAudioAppendStart = function (P) {
                      this.transmuxer.setAudioAppendStart(
                        Math.ceil(Ca.secondsToVideoTs(P.appendStart)),
                      )
                    }
                    G.setRemux = function (P) {
                      this.transmuxer.setRemux(P.remux)
                    }
                    G.flush = function (P) {
                      this.transmuxer.flush()
                      self.postMessage({ action: 'done', type: 'transmuxed' })
                    }
                    G.partialFlush = function (P) {
                      this.transmuxer.partialFlush()
                      self.postMessage({ action: 'partialdone', type: 'transmuxed' })
                    }
                    G.endTimeline = function () {
                      this.transmuxer.endTimeline()
                      self.postMessage({ action: 'endedtimeline', type: 'transmuxed' })
                    }
                    G.alignGopsWith = function (P) {
                      this.transmuxer.alignGopsWith(P.gopsToAlignWith.slice())
                    }
                    return N
                  })()
                self.onmessage = function (N) {
                  if ('init' === N.data.action && N.data.options)
                    this.messageHandlers = new qm(self, N.data.options)
                  else if (
                    (this.messageHandlers || (this.messageHandlers = new qm(self)),
                    N.data &&
                      N.data.action &&
                      'init' !== N.data.action &&
                      this.messageHandlers[N.data.action])
                  )
                    this.messageHandlers[N.data.action](N.data)
                }
              }),
            ),
            jr = Xl(ir),
            sm = function (p) {
              var m = p.transmuxer,
                l = p.bytes,
                f = p.audioAppendStart,
                g = p.gopsToAlignWith,
                k = p.isPartial,
                u = p.remux,
                w = p.onData,
                A = p.onTrackInfo,
                H = p.onAudioTimingInfo,
                R = p.onVideoTimingInfo,
                W = p.onVideoSegmentTimingInfo,
                M = p.onAudioSegmentTimingInfo,
                T = p.onId3,
                Q = p.onCaptions,
                na = p.onDone,
                oa = p.onEndedTimeline,
                ya = p.isEndOfTimeline,
                da = { isPartial: k, buffer: [] },
                ka = ya
              m.onmessage = function (sa) {
                if (m.currentTransmux === p) {
                  if ('data' === sa.data.action) {
                    var Ha = sa.data.segment,
                      Sa = Ha.type,
                      pb = Ha.initSegment,
                      Za = Ha.videoFrameDtsTime,
                      mb = Ha.videoFramePtsTime
                    da.buffer.push({
                      captions: Ha.captions,
                      captionStreams: Ha.captionStreams,
                      metadata: Ha.metadata,
                    })
                    Ha = sa.data.segment.boxes || { data: sa.data.segment.data }
                    Sa = {
                      type: Sa,
                      data: new Uint8Array(Ha.data, Ha.data.byteOffset, Ha.data.byteLength),
                      initSegment: new Uint8Array(pb.data, pb.byteOffset, pb.byteLength),
                    }
                    'undefined' !== typeof Za && (Sa.videoFrameDtsTime = Za)
                    'undefined' !== typeof mb && (Sa.videoFramePtsTime = mb)
                    w(Sa)
                  }
                  'trackinfo' === sa.data.action && A(sa.data.trackInfo)
                  'gopInfo' === sa.data.action && (da.gopInfo = sa.data.gopInfo)
                  'audioTimingInfo' === sa.data.action && H(sa.data.audioTimingInfo)
                  'videoTimingInfo' === sa.data.action && R(sa.data.videoTimingInfo)
                  'videoSegmentTimingInfo' === sa.data.action && W(sa.data.videoSegmentTimingInfo)
                  'audioSegmentTimingInfo' === sa.data.action && M(sa.data.audioSegmentTimingInfo)
                  'id3Frame' === sa.data.action &&
                    T([sa.data.id3Frame], sa.data.id3Frame.dispatchType)
                  'caption' === sa.data.action && Q(sa.data.caption)
                  'endedtimeline' === sa.data.action && ((ka = !1), oa())
                  'transmuxed' !== sa.data.type ||
                    ka ||
                    ((m.onmessage = null), (da.buffer = []), na(da), rm(m))
                }
              }
              f && m.postMessage({ action: 'setAudioAppendStart', appendStart: f })
              Array.isArray(g) && m.postMessage({ action: 'alignGopsWith', gopsToAlignWith: g })
              'undefined' !== typeof u && m.postMessage({ action: 'setRemux', remux: u })
              l.byteLength &&
                ((f = l instanceof ArrayBuffer ? l : l.buffer),
                m.postMessage(
                  {
                    action: 'push',
                    data: f,
                    byteOffset: l instanceof ArrayBuffer ? 0 : l.byteOffset,
                    byteLength: l.byteLength,
                  },
                  [f],
                ))
              m.postMessage({ action: k ? 'partialFlush' : 'flush' })
              ya && m.postMessage({ action: 'endTimeline' })
            },
            rm = function (p) {
              p.currentTransmux = null
              p.transmuxQueue.length &&
                ((p.currentTransmux = p.transmuxQueue.shift()),
                'function' === typeof p.currentTransmux
                  ? p.currentTransmux()
                  : sm(p.currentTransmux))
            },
            tm = function (p, m) {
              p.postMessage({ action: m })
              rm(p)
            },
            um = function (p, m) {
              m.currentTransmux
                ? m.transmuxQueue.push(tm.bind(null, m, p))
                : ((m.currentTransmux = p), tm(m, p))
            },
            vm = function (p) {
              p.transmuxer.currentTransmux
                ? p.transmuxer.transmuxQueue.push(p)
                : ((p.transmuxer.currentTransmux = p), sm(p))
            },
            $h = {
              reset: function (p) {
                um('reset', p)
              },
              endTimeline: function (p) {
                um('endTimeline', p)
              },
              transmux: vm,
              createTransmuxer: function (p) {
                var m = new jr()
                m.currentTransmux = null
                m.transmuxQueue = []
                var l = m.terminate
                m.terminate = function () {
                  m.currentTransmux = null
                  m.transmuxQueue.length = 0
                  return l.call(m)
                }
                m.postMessage({ action: 'init', options: p })
                return m
              },
            },
            kr = function (p, m) {
              m = 'number' !== typeof m || isNaN(m) ? void 0 : 9e4 * m
              p = dq.inspect(p, m)
              if (!p) return null
              m = {
                hasVideo: (p.video && 2 === p.video.length) || !1,
                hasAudio: (p.audio && 2 === p.audio.length) || !1,
              }
              m.hasVideo && (m.videoStart = p.video[0].ptsTime)
              m.hasAudio && (m.audioStart = p.audio[0].ptsTime)
              return m
            },
            lr = function (p) {
              var m = 0
              if (p.bytes) {
                var l = new Uint8Array(p.bytes)
                p.segments.forEach(function (f) {
                  l.set(f, m)
                  m += f.byteLength
                })
              }
              return l
            },
            wm = function (p) {
              p.forEach(function (m) {
                m.abort()
              })
            },
            ai = function (p, m) {
              return m.timedout
                ? {
                    status: m.status,
                    message: 'HLS request timed-out at URL: ' + m.uri,
                    code: -101,
                    xhr: m,
                  }
                : m.aborted
                  ? {
                      status: m.status,
                      message: 'HLS request aborted at URL: ' + m.uri,
                      code: -102,
                      xhr: m,
                    }
                  : p
                    ? {
                        status: m.status,
                        message: 'HLS request errored at URL: ' + m.uri,
                        code: 2,
                        xhr: m,
                      }
                    : null
            },
            mr = function (p, m) {
              return function (l, f) {
                var g = f.response
                if ((l = ai(l, f))) return m(l, p)
                if (16 !== g.byteLength)
                  return m(
                    {
                      status: f.status,
                      message: 'Invalid HLS key at URL: ' + f.uri,
                      code: 2,
                      xhr: f,
                    },
                    p,
                  )
                f = new DataView(g)
                p.key.bytes = new Uint32Array([
                  f.getUint32(0),
                  f.getUint32(4),
                  f.getUint32(8),
                  f.getUint32(12),
                ])
                return m(null, p)
              }
            },
            nr = function (p) {
              var m = p.segment,
                l = p.finishProcessingFn
              return function (f, g) {
                var k = g.response
                if ((f = ai(f, g))) return l(f, m)
                if (0 === k.byteLength)
                  return l(
                    {
                      status: g.status,
                      message: 'Empty HLS segment content at URL: ' + g.uri,
                      code: 2,
                      xhr: g,
                    },
                    m,
                  )
                m.map.bytes = new Uint8Array(g.response)
                k = xh(m.map.bytes)
                if ('mp4' !== k)
                  return l(
                    {
                      status: g.status,
                      message:
                        'Found unsupported ' +
                        (k || 'unknown') +
                        ' container for initialization segment at URL: ' +
                        g.uri,
                      code: 2,
                      internal: !0,
                      xhr: g,
                    },
                    m,
                  )
                vl.tracks(m.map.bytes).forEach(function (u) {
                  m.map.tracks = m.map.tracks || {}
                  m.map.tracks[u.type] ||
                    ((m.map.tracks[u.type] = u),
                    'number' === typeof u.id &&
                      u.timescale &&
                      ((m.map.timescales = m.map.timescales || {}),
                      (m.map.timescales[u.id] = u.timescale)))
                })
                return l(null, m)
              }
            },
            or = function (p) {
              var m = p.segment,
                l = p.finishProcessingFn,
                f = p.responseType
              return function (g, k) {
                var u = k.response
                if ((g = ai(g, k))) return l(g, m)
                g =
                  'arraybuffer' !== f && k.responseText
                    ? Vl(k.responseText.substring(m.lastReachedChar || 0))
                    : k.response
                if (0 === u.byteLength)
                  return l(
                    {
                      status: k.status,
                      message: 'Empty HLS segment content at URL: ' + k.uri,
                      code: 2,
                      xhr: k,
                    },
                    m,
                  )
                m.stats = {
                  bandwidth: k.bandwidth,
                  bytesReceived: k.bytesReceived || 0,
                  roundTripTime: k.roundTripTime || 0,
                }
                m.key ? (m.encryptedBytes = new Uint8Array(g)) : (m.bytes = new Uint8Array(g))
                return l(null, m)
              }
            },
            pr = function (p) {
              var m = p.segment,
                l = p.bytes,
                f = p.isPartial,
                g = p.trackInfoFn,
                k = p.timingInfoFn,
                u = p.videoSegmentTimingInfoFn,
                w = p.audioSegmentTimingInfoFn,
                A = p.id3Fn,
                H = p.captionsFn,
                R = p.isEndOfTimeline,
                W = p.endedTimelineFn,
                M = p.dataFn,
                T = p.doneFn
              p = (m.map && m.map.tracks) || {}
              var Q = !(!p.audio || !p.video),
                na = k.bind(null, m, 'audio', 'start'),
                oa = k.bind(null, m, 'audio', 'end'),
                ya = k.bind(null, m, 'video', 'start'),
                da = k.bind(null, m, 'video', 'end')
              f ||
                m.lastReachedChar ||
                !(k = kr(l, m.baseStartTime)) ||
                (g(m, { hasAudio: k.hasAudio, hasVideo: k.hasVideo, isMuxed: Q }),
                (g = null),
                k.hasAudio && !Q && na(k.audioStart),
                k.hasVideo && ya(k.videoStart),
                (ya = na = null))
              vm({
                bytes: l,
                transmuxer: m.transmuxer,
                audioAppendStart: m.audioAppendStart,
                gopsToAlignWith: m.gopsToAlignWith,
                isPartial: f,
                remux: Q,
                onData: function (ka) {
                  ka.type = 'combined' === ka.type ? 'video' : ka.type
                  M(m, ka)
                },
                onTrackInfo: function (ka) {
                  g && (Q && (ka.isMuxed = !0), g(m, ka))
                },
                onAudioTimingInfo: function (ka) {
                  na && 'undefined' !== typeof ka.start && (na(ka.start), (na = null))
                  oa && 'undefined' !== typeof ka.end && oa(ka.end)
                },
                onVideoTimingInfo: function (ka) {
                  ya && 'undefined' !== typeof ka.start && (ya(ka.start), (ya = null))
                  da && 'undefined' !== typeof ka.end && da(ka.end)
                },
                onVideoSegmentTimingInfo: function (ka) {
                  u(ka)
                },
                onAudioSegmentTimingInfo: function (ka) {
                  w(ka)
                },
                onId3: function (ka, sa) {
                  A(m, ka, sa)
                },
                onCaptions: function (ka) {
                  H(m, [ka])
                },
                isEndOfTimeline: R && !f,
                onEndedTimeline: function () {
                  W()
                },
                onDone: function (ka) {
                  T &&
                    !f &&
                    ((ka.type = 'combined' === ka.type ? 'video' : ka.type), T(null, m, ka))
                },
              })
            },
            bi = function (p) {
              var m = p.segment,
                l = p.bytes,
                f = p.isPartial,
                g = p.trackInfoFn,
                k = p.timingInfoFn,
                u = p.videoSegmentTimingInfoFn,
                w = p.audioSegmentTimingInfoFn,
                A = p.id3Fn,
                H = p.captionsFn,
                R = p.isEndOfTimeline,
                W = p.endedTimelineFn,
                M = p.dataFn,
                T = p.doneFn
              p = new Uint8Array(l)
              if (0 < jl(p, ['moof']).length) {
                m.isFmp4 = !0
                f = m.map.tracks
                var Q = { isFmp4: !0, hasVideo: !!f.video, hasAudio: !!f.audio }
                f.audio &&
                  f.audio.codec &&
                  'enca' !== f.audio.codec &&
                  (Q.audioCodec = f.audio.codec)
                f.video &&
                  f.video.codec &&
                  'encv' !== f.video.codec &&
                  (Q.videoCodec = f.video.codec)
                f.video && f.audio && (Q.isMuxed = !0)
                g(m, Q)
                g = vl.startTime(m.map.timescales, p)
                Q.hasAudio && !Q.isMuxed && k(m, 'audio', 'start', g)
                Q.hasVideo && k(m, 'video', 'start', g)
                var na = function (oa) {
                  M(m, { data: l, type: Q.hasAudio && !Q.isMuxed ? 'audio' : 'video' })
                  oa && oa.length && H(m, oa)
                  T(null, m, {})
                }
                f.video && l.byteLength && m.transmuxer
                  ? ((k = l instanceof ArrayBuffer ? l : l.buffer),
                    (g = l instanceof ArrayBuffer ? 0 : l.byteOffset),
                    m.transmuxer.addEventListener('message', function da(ya) {
                      if ('mp4Captions' === ya.data.action) {
                        m.transmuxer.removeEventListener('message', da)
                        var ka = ya.data.data
                        m.bytes = l = new Uint8Array(ka, ka.byteOffset || 0, ka.byteLength)
                        na(ya.data.captions)
                      }
                    }),
                    m.transmuxer.postMessage(
                      {
                        action: 'pushMp4Captions',
                        timescales: m.map.timescales,
                        trackIds: [f.video.id],
                        data: k,
                        byteOffset: g,
                        byteLength: l.byteLength,
                      },
                      [k],
                    ))
                  : na()
              } else
                m.transmuxer
                  ? ('undefined' === typeof m.container && (m.container = xh(p)),
                    'ts' !== m.container && 'aac' !== m.container
                      ? (g(m, { hasAudio: !1, hasVideo: !1 }), T(null, m, {}))
                      : pr({
                          segment: m,
                          bytes: l,
                          isPartial: f,
                          trackInfoFn: g,
                          timingInfoFn: k,
                          videoSegmentTimingInfoFn: u,
                          audioSegmentTimingInfoFn: w,
                          id3Fn: A,
                          captionsFn: H,
                          isEndOfTimeline: R,
                          endedTimelineFn: W,
                          dataFn: M,
                          doneFn: T,
                        }))
                  : T(null, m, {})
            },
            qr = function (p) {
              var m = p.decryptionWorker,
                l = p.segment,
                f = p.trackInfoFn,
                g = p.timingInfoFn,
                k = p.videoSegmentTimingInfoFn,
                u = p.audioSegmentTimingInfoFn,
                w = p.id3Fn,
                A = p.captionsFn,
                H = p.isEndOfTimeline,
                R = p.endedTimelineFn,
                W = p.dataFn,
                M = p.doneFn
              m.addEventListener('message', function na(Q) {
                Q.data.source === l.requestId &&
                  (m.removeEventListener('message', na),
                  (Q = Q.data.decrypted),
                  (l.bytes = new Uint8Array(Q.bytes, Q.byteOffset, Q.byteLength)),
                  bi({
                    segment: l,
                    bytes: l.bytes,
                    isPartial: !1,
                    trackInfoFn: f,
                    timingInfoFn: g,
                    videoSegmentTimingInfoFn: k,
                    audioSegmentTimingInfoFn: u,
                    id3Fn: w,
                    captionsFn: A,
                    isEndOfTimeline: H,
                    endedTimelineFn: R,
                    dataFn: W,
                    doneFn: M,
                  }))
              })
              p = l.key.bytes.slice
                ? l.key.bytes.slice()
                : new Uint32Array(Array.prototype.slice.call(l.key.bytes))
              m.postMessage(
                Pl({ source: l.requestId, encrypted: l.encryptedBytes, key: p, iv: l.key.iv }),
                [l.encryptedBytes.buffer, p.buffer],
              )
            },
            rr = function (p) {
              var m = p.activeXhrs,
                l = p.decryptionWorker,
                f = p.trackInfoFn,
                g = p.timingInfoFn,
                k = p.videoSegmentTimingInfoFn,
                u = p.audioSegmentTimingInfoFn,
                w = p.id3Fn,
                A = p.captionsFn,
                H = p.isEndOfTimeline,
                R = p.endedTimelineFn,
                W = p.dataFn,
                M = p.doneFn,
                T = 0,
                Q = !1
              return function (na, oa) {
                if (!Q) {
                  if (na) return (Q = !0), wm(m), M(na, oa)
                  T += 1
                  if (T === m.length) {
                    oa.endOfAllRequests = Date.now()
                    if (oa.encryptedBytes)
                      return qr({
                        decryptionWorker: l,
                        segment: oa,
                        trackInfoFn: f,
                        timingInfoFn: g,
                        videoSegmentTimingInfoFn: k,
                        audioSegmentTimingInfoFn: u,
                        id3Fn: w,
                        captionsFn: A,
                        isEndOfTimeline: H,
                        endedTimelineFn: R,
                        dataFn: W,
                        doneFn: M,
                      })
                    bi({
                      segment: oa,
                      bytes: oa.bytes,
                      isPartial: !1,
                      trackInfoFn: f,
                      timingInfoFn: g,
                      videoSegmentTimingInfoFn: k,
                      audioSegmentTimingInfoFn: u,
                      id3Fn: w,
                      captionsFn: A,
                      isEndOfTimeline: H,
                      endedTimelineFn: R,
                      dataFn: W,
                      doneFn: M,
                    })
                  }
                }
              }
            },
            sr = function (p) {
              var m = p.loadendState,
                l = p.abortFn
              return function (f) {
                f.target.aborted && l && !m.calledAbortFn && (l(), (m.calledAbortFn = !0))
              }
            },
            tr = function (p) {
              var m = p.segment,
                l = p.progressFn,
                f = p.trackInfoFn,
                g = p.timingInfoFn,
                k = p.videoSegmentTimingInfoFn,
                u = p.audioSegmentTimingInfoFn,
                w = p.id3Fn,
                A = p.captionsFn,
                H = p.isEndOfTimeline,
                R = p.endedTimelineFn,
                W = p.dataFn,
                M = p.handlePartialData
              return function (T) {
                var Q = T.target
                if (!Q.aborted) {
                  if (M && !m.key && Q.responseText && 8 <= Q.responseText.length) {
                    var na = Vl(Q.responseText.substring(m.lastReachedChar || 0))
                    ;(!m.lastReachedChar && 0 < jl(new Uint8Array(na), ['moof']).length) ||
                      ((m.lastReachedChar = Q.responseText.length),
                      bi({
                        segment: m,
                        bytes: na,
                        isPartial: !0,
                        trackInfoFn: f,
                        timingInfoFn: g,
                        videoSegmentTimingInfoFn: k,
                        audioSegmentTimingInfoFn: u,
                        id3Fn: w,
                        captionsFn: A,
                        isEndOfTimeline: H,
                        endedTimelineFn: R,
                        dataFn: W,
                      }))
                  }
                  Q = U.mergeOptions
                  na = m.stats
                  var oa = T.target
                  oa = Date.now() - oa.requestTime
                  oa = { bandwidth: Infinity, bytesReceived: 0, roundTripTime: oa || 0 }
                  oa.bytesReceived = T.loaded
                  oa.bandwidth = Math.floor((oa.bytesReceived / oa.roundTripTime) * 8e3)
                  m.stats = Q.call(U, na, oa)
                  !m.stats.firstBytesReceivedAt &&
                    m.stats.bytesReceived &&
                    (m.stats.firstBytesReceivedAt = Date.now())
                  return l(T, m)
                }
              }
            },
            ur = function (p) {
              var m = p.xhr,
                l = p.xhrOptions,
                f = p.segment,
                g = p.abortFn,
                k = p.progressFn,
                u = p.trackInfoFn,
                w = p.timingInfoFn,
                A = p.videoSegmentTimingInfoFn,
                H = p.audioSegmentTimingInfoFn,
                R = p.id3Fn,
                W = p.captionsFn,
                M = p.isEndOfTimeline,
                T = p.endedTimelineFn,
                Q = p.dataFn,
                na = p.handlePartialData,
                oa = []
              p = rr({
                activeXhrs: oa,
                decryptionWorker: p.decryptionWorker,
                trackInfoFn: u,
                timingInfoFn: w,
                videoSegmentTimingInfoFn: A,
                audioSegmentTimingInfoFn: H,
                id3Fn: R,
                captionsFn: W,
                isEndOfTimeline: M,
                endedTimelineFn: T,
                dataFn: Q,
                doneFn: p.doneFn,
              })
              if (f.key && !f.key.bytes) {
                var ya = U.mergeOptions(l, { uri: f.key.resolvedUri, responseType: 'arraybuffer' }),
                  da = mr(f, p)
                ya = m(ya, da)
                oa.push(ya)
              }
              f.map &&
                !f.map.bytes &&
                ((ya = U.mergeOptions(l, {
                  uri: f.map.resolvedUri,
                  responseType: 'arraybuffer',
                  headers: Hh(f.map),
                })),
                (da = nr({ segment: f, finishProcessingFn: p })),
                (ya = m(ya, da)),
                oa.push(ya))
              l = U.mergeOptions(l, {
                uri: f.resolvedUri,
                responseType: 'arraybuffer',
                headers: Hh(f),
              })
              na &&
                ((l.responseType = 'text'),
                (l.beforeSend = function (sa) {
                  sa.overrideMimeType('text/plain; charset=x-user-defined')
                }))
              p = or({ segment: f, finishProcessingFn: p, responseType: l.responseType })
              m = m(l, p)
              m.addEventListener(
                'progress',
                tr({
                  segment: f,
                  progressFn: k,
                  trackInfoFn: u,
                  timingInfoFn: w,
                  videoSegmentTimingInfoFn: A,
                  audioSegmentTimingInfoFn: H,
                  id3Fn: R,
                  captionsFn: W,
                  isEndOfTimeline: M,
                  endedTimelineFn: T,
                  dataFn: Q,
                  handlePartialData: na,
                }),
              )
              oa.push(m)
              var ka = {}
              oa.forEach(function (sa) {
                sa.addEventListener('loadend', sr({ loadendState: ka, abortFn: g }))
              })
              return function () {
                return wm(oa)
              }
            },
            vr = mc('CodecUtils'),
            xm = function (p, m) {
              m = m.attributes || {}
              return (
                p && p.mediaGroups && p.mediaGroups.AUDIO && m.AUDIO && p.mediaGroups.AUDIO[m.AUDIO]
              )
            },
            ci = function (p) {
              var m = {}
              p.forEach(function (l) {
                var f = l.mediaType,
                  g = l.type
                l = l.details
                m[f] = m[f] || []
                m[f].push(xl('' + g + l))
              })
              Object.keys(m).forEach(function (l) {
                1 < m[l].length
                  ? (vr(
                      'multiple ' +
                        l +
                        ' codecs found as attributes: ' +
                        m[l].join(', ') +
                        '. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.',
                    ),
                    (m[l] = null))
                  : (m[l] = m[l][0])
              })
              return m
            },
            ym = function (p) {
              var m = 0
              p.audio && m++
              p.video && m++
              return m
            },
            pe = function (p, m) {
              var l = m.attributes || {}
              var f = m.attributes || {}
              f = f.CODECS ? yc(f.CODECS) : void 0
              f = ci(f || [])
              if (xm(p, m) && !f.audio) {
                a: if (xm(p, m)) {
                  m = p.mediaGroups.AUDIO[(m.attributes || {}).AUDIO]
                  for (g in m)
                    if (!m[g].uri && !m[g].playlists) {
                      var g = !0
                      break a
                    }
                  g = !1
                } else g = !0
                g || ((p = ci(fq(p, l.AUDIO) || [])), p.audio && (f.audio = p.audio))
              }
              return f
            },
            zf = mc('PlaylistSelector'),
            zm = function (p) {
              if (p && p.playlist) {
                var m = p.playlist
                return JSON.stringify({
                  id: m.id,
                  bandwidth: p.bandwidth,
                  width: p.width,
                  height: p.height,
                  codecs: (m.attributes && m.attributes.CODECS) || '',
                })
              }
            },
            Af = function (p, m) {
              return p ? ((p = ra.getComputedStyle(p)) ? p[m] : '') : ''
            },
            qe = function (p, m) {
              var l = p.slice()
              p.sort(function (f, g) {
                var k = m(f, g)
                return 0 === k ? l.indexOf(f) - l.indexOf(g) : k
              })
            },
            di = function (p, m) {
              if (p.attributes.BANDWIDTH) var l = p.attributes.BANDWIDTH
              l = l || ra.Number.MAX_VALUE
              if (m.attributes.BANDWIDTH) var f = m.attributes.BANDWIDTH
              f = f || ra.Number.MAX_VALUE
              return l - f
            },
            Am = function (p, m, l, f, g) {
              if (p) {
                var k = { bandwidth: m, width: l, height: f, limitRenditionByPlayerDimensions: g },
                  u = p.playlists.map(function (M) {
                    var T = M.attributes.RESOLUTION && M.attributes.RESOLUTION.width,
                      Q = M.attributes.RESOLUTION && M.attributes.RESOLUTION.height
                    var na = (na = M.attributes.BANDWIDTH) || ra.Number.MAX_VALUE
                    return { bandwidth: na, width: T, height: Q, playlist: M }
                  })
                qe(u, function (M, T) {
                  return M.bandwidth - T.bandwidth
                })
                u = u.filter(function (M) {
                  return !Gb.isIncompatible(M.playlist)
                })
                p = u.filter(function (M) {
                  return Gb.isEnabled(M.playlist)
                })
                p.length ||
                  (p = u.filter(function (M) {
                    return !Gb.isDisabled(M.playlist)
                  }))
                var w = p.filter(function (M) {
                    return M.bandwidth * lb.BANDWIDTH_VARIANCE < m
                  }),
                  A = w[w.length - 1],
                  H = w.filter(function (M) {
                    return M.bandwidth === A.bandwidth
                  })[0]
                if (!1 === g) {
                  var R = H || p[0] || u[0]
                  if (R && R.playlist)
                    return (
                      (u = 'sortedPlaylistReps'),
                      H && (u = 'bandwidthBestRep'),
                      p[0] && (u = 'enabledPlaylistReps'),
                      zf('choosing ' + zm(R) + ' using ' + u + ' with options', k),
                      R.playlist
                    )
                  zf('could not choose a playlist with options', k)
                  return null
                }
                w = w.filter(function (M) {
                  return M.width && M.height
                })
                qe(w, function (M, T) {
                  return M.width - T.width
                })
                g = w.filter(function (M) {
                  return M.width === l && M.height === f
                })
                A = g[g.length - 1]
                g = g.filter(function (M) {
                  return M.bandwidth === A.bandwidth
                })[0]
                if (!g) {
                  var W = w.filter(function (M) {
                    return M.width > l || M.height > f
                  })
                  R = W.filter(function (M) {
                    return M.width === W[0].width && M.height === W[0].height
                  })
                  A = R[R.length - 1]
                  R = R.filter(function (M) {
                    return M.bandwidth === A.bandwidth
                  })[0]
                }
                if ((u = R || g || H || p[0] || u[0]) && u.playlist)
                  return (
                    (w = 'sortedPlaylistReps'),
                    R
                      ? (w = 'resolutionPlusOneRep')
                      : g
                        ? (w = 'resolutionBestRep')
                        : H
                          ? (w = 'bandwidthBestRep')
                          : p[0] && (w = 'enabledPlaylistReps'),
                    zf('choosing ' + zm(u) + ' using ' + w + ' with options', k),
                    u.playlist
                  )
                zf('could not choose a playlist with options', k)
                return null
              }
            },
            Bm = function () {
              var p = this.useDevicePixelRatio ? ra.devicePixelRatio || 1 : 1
              return Am(
                this.playlists.master,
                this.systemBandwidth,
                parseInt(Af(this.tech_.el(), 'width'), 10) * p,
                parseInt(Af(this.tech_.el(), 'height'), 10) * p,
                this.limitRenditionByPlayerDimensions,
              )
            },
            wr = function (p) {
              var m = p.currentTime,
                l = p.bandwidth,
                f = p.duration,
                g = p.segmentDuration,
                k = p.timeUntilRebuffer,
                u = p.currentTimeline,
                w = p.syncController
              p = p.master.playlists.filter(function (H) {
                return !Gb.isIncompatible(H)
              })
              var A = p.filter(Gb.isEnabled)
              A.length ||
                (A = p.filter(function (H) {
                  return !Gb.isDisabled(H)
                }))
              p = A.filter(Gb.hasAttribute.bind(null, 'BANDWIDTH')).map(function (H) {
                var R = w.getSyncPoint(H, f, u, m) ? 1 : 2
                R = Gb.estimateSegmentRequestTime(g, l, H) * R - k
                return { playlist: H, rebufferingImpact: R }
              })
              A = p.filter(function (H) {
                return 0 >= H.rebufferingImpact
              })
              qe(A, function (H, R) {
                return di(R.playlist, H.playlist)
              })
              if (A.length) return A[0]
              qe(p, function (H, R) {
                return H.rebufferingImpact - R.rebufferingImpact
              })
              return p[0] || null
            },
            xr = function (p) {
              var m = p.inbandTextTracks,
                l = p.captionArray,
                f = p.timestampOffset
              if (l) {
                var g = ra.WebKitDataCue || ra.VTTCue
                l.forEach(function (k) {
                  m[k.stream].addCue(new g(k.startTime + f, k.endTime + f, k.text))
                })
              }
            },
            yr = function (p) {
              Object.defineProperties(p.frame, {
                id: {
                  get: function () {
                    U.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.')
                    return p.value.key
                  },
                },
                value: {
                  get: function () {
                    U.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.')
                    return p.value.data
                  },
                },
                privateData: {
                  get: function () {
                    U.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.')
                    return p.value.data
                  },
                },
              })
            },
            zr = function (p) {
              var m = p.metadataArray,
                l = p.timestampOffset,
                f = p.videoDuration
              if (m) {
                var g = ra.WebKitDataCue || ra.VTTCue,
                  k = p.inbandTextTracks.metadataTrack_
                if (
                  k &&
                  (m.forEach(function (H) {
                    var R = H.cueTime + l
                    !('number' !== typeof R || ra.isNaN(R) || 0 > R) &&
                      Infinity > R &&
                      H.frames.forEach(function (W) {
                        var M = new g(R, R, W.value || W.url || W.data || '')
                        M.frame = W
                        M.value = W
                        yr(M)
                        k.addCue(M)
                      })
                  }),
                  k.cues && k.cues.length)
                ) {
                  p = k.cues
                  m = []
                  for (var u = 0; u < p.length; u++) p[u] && m.push(p[u])
                  var w = m.reduce(function (H, R) {
                      var W = H[R.startTime] || []
                      W.push(R)
                      H[R.startTime] = W
                      return H
                    }, {}),
                    A = Object.keys(w).sort(function (H, R) {
                      return Number(H) - Number(R)
                    })
                  A.forEach(function (H, R) {
                    var W = Number(A[R + 1]) || f
                    w[H].forEach(function (M) {
                      M.endTime = W
                    })
                  })
                }
              }
            },
            re = function (p, m, l) {
              var f
              if (l && l.cues)
                for (f = l.cues.length; f--; ) {
                  var g = l.cues[f]
                  g.startTime >= p && g.endTime <= m && l.removeCue(g)
                }
            },
            Ar = function (p) {
              var m = p.cues
              if (m)
                for (var l = 0; l < m.length; l++) {
                  for (var f = [], g = 0, k = 0; k < m.length; k++)
                    m[l].startTime === m[k].startTime &&
                      m[l].endTime === m[k].endTime &&
                      m[l].text === m[k].text &&
                      (g++, 1 < g && f.push(m[k]))
                  f.length &&
                    f.forEach(function (u) {
                      return p.removeCue(u)
                    })
                }
            },
            Br = function (p, m, l, f) {
              m = Math.ceil(9e4 * (m - f))
              var g = Math.ceil(9e4 * (l - f))
              l = p.slice()
              for (f = p.length; f-- && !(p[f].pts <= g); );
              if (-1 === f) return l
              for (g = f + 1; g-- && !(p[g].pts <= m); );
              g = Math.max(g, 0)
              l.splice(g, f - g + 1)
              return l
            },
            Cr = function (p, m) {
              if ((!p && !m) || (!p && m) || (p && !m)) return !1
              if (p === m) return !0
              var l = Object.keys(p).sort(),
                f = Object.keys(m).sort()
              if (l.length !== f.length) return !1
              for (var g = 0; g < l.length; g++) {
                var k = l[g]
                if (k !== f[g] || p[k] !== m[k]) return !1
              }
              return !0
            },
            Bf = 1 / 60,
            Cm = function (p) {
              var m = p.segmentTimeline,
                l = p.currentTimeline,
                f = p.startOfSegment,
                g = p.buffered
              return p.overrideCheck || m !== l
                ? m < l
                  ? f
                  : g.length
                    ? g.end(g.length - 1)
                    : f
                : null
            },
            Dm = function (p) {
              var m = p.timelineChangeController,
                l = p.segmentTimeline,
                f = p.loaderType,
                g = p.audioDisabled
              return p.currentTimeline === l
                ? !1
                : 'audio' === f
                  ? ((p = m.lastTimelineChange({ type: 'main' })), !p || p.to !== l)
                  : 'main' === f && g
                    ? (p = m.pendingTimelineChange({ type: 'audio' })) && p.to === l
                      ? !1
                      : !0
                    : !1
            },
            Em = function (p) {
              var m = p.segmentDuration
              return m ? Math.round(m) > p.maxDuration + Zc : !1
            },
            ei = (function (p) {
              function m(f, g) {
                var k = p.call(this) || this
                if (!f) throw new TypeError('Initialization settings are required')
                if ('function' !== typeof f.currentTime)
                  throw new TypeError('No currentTime getter specified')
                if (!f.mediaSource) throw new TypeError('No MediaSource specified')
                k.bandwidth = f.bandwidth
                k.throughput = { rate: 0, count: 0 }
                k.roundTrip = NaN
                k.resetStats_()
                k.mediaIndex = null
                k.hasPlayed_ = f.hasPlayed
                k.currentTime_ = f.currentTime
                k.seekable_ = f.seekable
                k.seeking_ = f.seeking
                k.duration_ = f.duration
                k.mediaSource_ = f.mediaSource
                k.vhs_ = f.vhs
                k.loaderType_ = f.loaderType
                k.currentMediaInfo_ = void 0
                k.startingMediaInfo_ = void 0
                k.segmentMetadataTrack_ = f.segmentMetadataTrack
                k.goalBufferLength_ = f.goalBufferLength
                k.sourceType_ = f.sourceType
                k.sourceUpdater_ = f.sourceUpdater
                k.inbandTextTracks_ = f.inbandTextTracks
                k.state_ = 'INIT'
                k.handlePartialData_ = f.handlePartialData
                k.timelineChangeController_ = f.timelineChangeController
                k.shouldSaveSegmentTimingInfo_ = !0
                k.parse708captions_ = f.parse708captions
                k.checkBufferTimeout_ = null
                k.error_ = void 0
                k.currentTimeline_ = -1
                k.pendingSegment_ = null
                k.xhrOptions_ = null
                k.pendingSegments_ = []
                k.audioDisabled_ = !1
                k.isPendingTimestampOffset_ = !1
                k.gopBuffer_ = []
                k.timeMapping_ = 0
                k.safeAppend_ = 11 <= U.browser.IE_VERSION
                k.appendInitSegment_ = { audio: !0, video: !0 }
                k.playlistOfLastInitSegment_ = { audio: null, video: null }
                k.callQueue_ = []
                k.loadQueue_ = []
                k.metadataQueue_ = { id3: [], caption: [] }
                k.waitingOnRemove_ = !1
                k.quotaExceededErrorRetryTimeout_ = null
                k.activeInitSegmentId_ = null
                k.initSegments_ = {}
                k.cacheEncryptionKeys_ = f.cacheEncryptionKeys
                k.keyCache_ = {}
                k.decrypter_ = f.decrypter
                k.syncController_ = f.syncController
                k.syncPoint_ = { segmentIndex: 0, time: 0 }
                k.transmuxer_ = k.createTransmuxer_()
                k.triggerSyncInfoUpdate_ = function () {
                  return k.trigger('syncinfoupdate')
                }
                k.syncController_.on('syncinfoupdate', k.triggerSyncInfoUpdate_)
                k.mediaSource_.addEventListener('sourceopen', function () {
                  k.isEndOfStream_() || (k.ended_ = !1)
                })
                k.fetchAtBuffer_ = !1
                k.logger_ = mc('SegmentLoader[' + k.loaderType_ + ']')
                Object.defineProperty(Xb(k), 'state', {
                  get: function () {
                    return this.state_
                  },
                  set: function (u) {
                    u !== this.state_ &&
                      (this.logger_(this.state_ + ' -> ' + u),
                      (this.state_ = u),
                      this.trigger('statechange'))
                  },
                })
                k.sourceUpdater_.on('ready', function () {
                  k.hasEnoughInfoToAppend_() && k.processCallQueue_()
                })
                if ('main' === k.loaderType_)
                  k.timelineChangeController_.on('pendingtimelinechange', function () {
                    k.hasEnoughInfoToAppend_() && k.processCallQueue_()
                  })
                if ('audio' === k.loaderType_)
                  k.timelineChangeController_.on('timelinechange', function () {
                    k.hasEnoughInfoToLoad_() && k.processLoadQueue_()
                    k.hasEnoughInfoToAppend_() && k.processCallQueue_()
                  })
                return k
              }
              xc(m, p)
              var l = m.prototype
              l.createTransmuxer_ = function () {
                return $h.createTransmuxer({
                  remux: !1,
                  alignGopsAtEnd: this.safeAppend_,
                  keepOriginalTimestamps: !0,
                  handlePartialData: this.handlePartialData_,
                  parse708captions: this.parse708captions_,
                })
              }
              l.resetStats_ = function () {
                this.mediaSecondsLoaded =
                  this.mediaTransferDuration =
                  this.mediaRequestsErrored =
                  this.mediaRequestsTimedout =
                  this.mediaRequestsAborted =
                  this.mediaRequests =
                  this.mediaBytesTransferred =
                    0
              }
              l.dispose = function () {
                this.trigger('dispose')
                this.state = 'DISPOSED'
                this.pause()
                this.abort_()
                this.transmuxer_ && this.transmuxer_.terminate()
                this.resetStats_()
                this.checkBufferTimeout_ && ra.clearTimeout(this.checkBufferTimeout_)
                this.syncController_ &&
                  this.triggerSyncInfoUpdate_ &&
                  this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_)
                this.off()
              }
              l.setAudio = function (f) {
                this.audioDisabled_ = !f
                f
                  ? (this.appendInitSegment_.audio = !0)
                  : this.sourceUpdater_.removeAudio(0, this.duration_())
              }
              l.abort = function () {
                'WAITING' !== this.state
                  ? this.pendingSegment_ && (this.pendingSegment_ = null)
                  : (this.abort_(), (this.state = 'READY'), this.paused() || this.monitorBuffer_())
              }
              l.abort_ = function () {
                this.pendingSegment_ &&
                  this.pendingSegment_.abortRequests &&
                  this.pendingSegment_.abortRequests()
                this.pendingSegment_ = null
                this.callQueue_ = []
                this.loadQueue_ = []
                this.metadataQueue_.id3 = []
                this.metadataQueue_.caption = []
                this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_)
                this.waitingOnRemove_ = !1
                ra.clearTimeout(this.quotaExceededErrorRetryTimeout_)
                this.quotaExceededErrorRetryTimeout_ = null
              }
              l.checkForAbort_ = function (f) {
                return 'APPENDING' !== this.state || this.pendingSegment_
                  ? this.pendingSegment_ && this.pendingSegment_.requestId === f
                    ? !1
                    : !0
                  : ((this.state = 'READY'), !0)
              }
              l.error = function (f) {
                'undefined' !== typeof f && (this.logger_('error occurred:', f), (this.error_ = f))
                this.pendingSegment_ = null
                return this.error_
              }
              l.endOfStream = function () {
                this.ended_ = !0
                this.transmuxer_ && $h.reset(this.transmuxer_)
                this.gopBuffer_.length = 0
                this.pause()
                this.trigger('ended')
              }
              l.buffered_ = function () {
                if (!this.sourceUpdater_ || !this.startingMediaInfo_) return U.createTimeRanges()
                if ('main' === this.loaderType_) {
                  var f = this.startingMediaInfo_,
                    g = f.hasAudio,
                    k = f.hasVideo
                  f = f.isMuxed
                  if (k && g && !this.audioDisabled_ && !f) return this.sourceUpdater_.buffered()
                  if (k) return this.sourceUpdater_.videoBuffered()
                }
                return this.sourceUpdater_.audioBuffered()
              }
              l.initSegmentForMap = function (f, g) {
                void 0 === g && (g = !1)
                if (!f) return null
                var k = qf(f),
                  u = this.initSegments_[k]
                g &&
                  !u &&
                  f.bytes &&
                  (this.initSegments_[k] = u =
                    {
                      resolvedUri: f.resolvedUri,
                      byterange: f.byterange,
                      bytes: f.bytes,
                      tracks: f.tracks,
                      timescales: f.timescales,
                    })
                return u || f
              }
              l.segmentKey = function (f, g) {
                void 0 === g && (g = !1)
                if (!f) return null
                var k = f.resolvedUri,
                  u = this.keyCache_[k]
                this.cacheEncryptionKeys_ &&
                  g &&
                  !u &&
                  f.bytes &&
                  (this.keyCache_[k] = u = { resolvedUri: f.resolvedUri, bytes: f.bytes })
                f = { resolvedUri: (u || f).resolvedUri }
                u && (f.bytes = u.bytes)
                return f
              }
              l.couldBeginLoading_ = function () {
                return this.playlist_ && !this.paused()
              }
              l.load = function () {
                this.monitorBuffer_()
                if (this.playlist_) {
                  if ('INIT' === this.state && this.couldBeginLoading_()) return this.init_()
                  !this.couldBeginLoading_() ||
                    ('READY' !== this.state && 'INIT' !== this.state) ||
                    (this.state = 'READY')
                }
              }
              l.init_ = function () {
                this.state = 'READY'
                this.resetEverything()
                return this.monitorBuffer_()
              }
              l.playlist = function (f, g) {
                void 0 === g && (g = {})
                if (f) {
                  var k = this.playlist_,
                    u = this.pendingSegment_
                  this.playlist_ = f
                  this.xhrOptions_ = g
                  'INIT' === this.state &&
                    ((f.syncInfo = { mediaSequence: f.mediaSequence, time: 0 }),
                    'main' === this.loaderType_ &&
                      this.syncController_.setDateTimeMappingForStart(f))
                  g = null
                  k && (k.id ? (g = k.id) : k.uri && (g = k.uri))
                  this.logger_('playlist update [' + g + ' => ' + (f.id || f.uri) + ']')
                  this.trigger('syncinfoupdate')
                  if ('INIT' === this.state && this.couldBeginLoading_()) return this.init_()
                  k && k.uri === f.uri
                    ? ((g = f.mediaSequence - k.mediaSequence),
                      this.logger_('live window shift [' + g + ']'),
                      null !== this.mediaIndex && (this.mediaIndex -= g),
                      u &&
                        ((u.mediaIndex -= g),
                        0 <= u.mediaIndex && (u.segment = f.segments[u.mediaIndex])),
                      this.syncController_.saveExpiredSegmentInfo(k, f))
                    : ((null !== this.mediaIndex || this.handlePartialData_) && this.resyncLoader(),
                      (this.currentMediaInfo_ = void 0),
                      this.trigger('playlistupdate'))
                }
              }
              l.pause = function () {
                this.checkBufferTimeout_ &&
                  (ra.clearTimeout(this.checkBufferTimeout_), (this.checkBufferTimeout_ = null))
              }
              l.paused = function () {
                return null === this.checkBufferTimeout_
              }
              l.resetEverything = function (f) {
                this.ended_ = !1
                this.appendInitSegment_ = { audio: !0, video: !0 }
                this.resetLoader()
                this.remove(0, Infinity, f)
                this.transmuxer_ && this.transmuxer_.postMessage({ action: 'clearAllMp4Captions' })
              }
              l.resetLoader = function () {
                this.fetchAtBuffer_ = !1
                this.resyncLoader()
              }
              l.resyncLoader = function () {
                this.transmuxer_ && $h.reset(this.transmuxer_)
                this.syncPoint_ = this.mediaIndex = null
                this.isPendingTimestampOffset_ = !1
                this.callQueue_ = []
                this.loadQueue_ = []
                this.metadataQueue_.id3 = []
                this.metadataQueue_.caption = []
                this.abort()
                this.transmuxer_ &&
                  this.transmuxer_.postMessage({ action: 'clearParsedMp4Captions' })
              }
              l.remove = function (f, g, k) {
                void 0 === k && (k = function () {})
                Infinity === g && (g = this.duration_())
                if (this.sourceUpdater_ && this.startingMediaInfo_) {
                  var u = 1,
                    w = function () {
                      u--
                      0 === u && k()
                    }
                  this.audioDisabled_ || (u++, this.sourceUpdater_.removeAudio(f, g, w))
                  'main' === this.loaderType_ &&
                    ((this.gopBuffer_ = Br(this.gopBuffer_, f, g, this.timeMapping_)),
                    u++,
                    this.sourceUpdater_.removeVideo(f, g, w))
                  for (var A in this.inbandTextTracks_) re(f, g, this.inbandTextTracks_[A])
                  re(f, g, this.segmentMetadataTrack_)
                  w()
                } else
                  this.logger_('skipping remove because no source updater or starting media info')
              }
              l.monitorBuffer_ = function () {
                this.checkBufferTimeout_ && ra.clearTimeout(this.checkBufferTimeout_)
                this.checkBufferTimeout_ = ra.setTimeout(this.monitorBufferTick_.bind(this), 1)
              }
              l.monitorBufferTick_ = function () {
                'READY' === this.state && this.fillBuffer_()
                this.checkBufferTimeout_ && ra.clearTimeout(this.checkBufferTimeout_)
                this.checkBufferTimeout_ = ra.setTimeout(this.monitorBufferTick_.bind(this), 500)
              }
              l.fillBuffer_ = function () {
                if (!this.sourceUpdater_.updating()) {
                  this.syncPoint_ ||
                    (this.syncPoint_ = this.syncController_.getSyncPoint(
                      this.playlist_,
                      this.duration_(),
                      this.currentTimeline_,
                      this.currentTime_(),
                    ))
                  var f = this.buffered_(),
                    g = this.checkBuffer_(
                      f,
                      this.playlist_,
                      this.mediaIndex,
                      this.hasPlayed_(),
                      this.currentTime_(),
                      this.syncPoint_,
                    )
                  g &&
                    ((g.timestampOffset = Cm({
                      segmentTimeline: g.timeline,
                      currentTimeline: this.currentTimeline_,
                      startOfSegment: g.startOfSegment,
                      buffered: f,
                      overrideCheck: this.isPendingTimestampOffset_,
                    })),
                    (this.isPendingTimestampOffset_ = !1),
                    'number' === typeof g.timestampOffset &&
                      this.timelineChangeController_.pendingTimelineChange({
                        type: this.loaderType_,
                        from: this.currentTimeline_,
                        to: g.timeline,
                      }),
                    this.loadSegment_(g))
                }
              }
              l.isEndOfStream_ = function (f, g) {
                void 0 === f && (f = this.mediaIndex)
                void 0 === g && (g = this.playlist_)
                if (!g || !this.mediaSource_) return !1
                f = f + 1 === g.segments.length
                return g.endList && 'open' === this.mediaSource_.readyState && f
              }
              l.checkBuffer_ = function (f, g, k, u, w, A) {
                var H = 0
                f.length && (H = f.end(f.length - 1))
                f = Math.max(0, H - w)
                if (!g.segments.length || f >= this.goalBufferLength_() || (!u && 1 <= f))
                  return null
                u = !1
                if (null === A) (H = this.getSyncSegmentCandidate_(g)), (u = !0)
                else if (null !== k) {
                  var R = (R = g.segments[k]) && R.end ? R.end : H
                  H = k + 1
                } else
                  this.fetchAtBuffer_
                    ? ((R = Gb.getMediaInfoForTime(g, H, A.segmentIndex, A.time)),
                      (H = R.mediaIndex),
                      (R = R.startTime))
                    : ((R = Gb.getMediaInfoForTime(g, w, A.segmentIndex, A.time)),
                      (H = R.mediaIndex),
                      (R = R.startTime))
                if (
                  (w = this.generateSegmentInfo_(g, H, R, u)) &&
                  (!this.mediaSource_ ||
                    !this.playlist_ ||
                    w.mediaIndex !== this.playlist_.segments.length - 1 ||
                    'ended' !== this.mediaSource_.readyState ||
                    this.seeking_())
                )
                  return (
                    this.logger_('checkBuffer_ returning ' + w.uri, {
                      segmentInfo: w,
                      playlist: g,
                      currentMediaIndex: k,
                      nextMediaIndex: H,
                      startOfSegment: R,
                      isSyncRequest: u,
                    }),
                    w
                  )
              }
              l.getSyncSegmentCandidate_ = function (f) {
                var g = this
                if (-1 === this.currentTimeline_) return 0
                var k = f.segments
                  .map(function (u, w) {
                    return { timeline: u.timeline, segmentIndex: w }
                  })
                  .filter(function (u) {
                    return u.timeline === g.currentTimeline_
                  })
                return k.length
                  ? k[Math.min(k.length - 1, 1)].segmentIndex
                  : Math.max(f.segments.length - 1, 0)
              }
              l.generateSegmentInfo_ = function (f, g, k, u) {
                if (0 > g || g >= f.segments.length) return null
                var w = f.segments[g],
                  A = this.sourceUpdater_.audioBuffered(),
                  H = this.sourceUpdater_.videoBuffered(),
                  R,
                  W
                A.length && (R = A.end(A.length - 1) - this.sourceUpdater_.audioTimestampOffset())
                if (H.length)
                  if (
                    ((A = this.gopBuffer_),
                    (H = this.currentTime_() - this.sourceUpdater_.videoTimestampOffset()),
                    'undefined' !== typeof H && null !== H && A.length)
                  ) {
                    H = Math.ceil(9e4 * (H - this.timeMapping_ + 3))
                    for (W = 0; W < A.length && !(A[W].pts > H); W++);
                    W = A.slice(W)
                  } else W = []
                return {
                  requestId: 'segment-loader-' + Math.random(),
                  uri: w.resolvedUri,
                  mediaIndex: g,
                  isSyncRequest: u,
                  startOfSegment: k,
                  playlist: f,
                  bytes: null,
                  encryptedBytes: null,
                  timestampOffset: null,
                  timeline: w.timeline,
                  duration: w.duration,
                  segment: w,
                  byteLength: 0,
                  transmuxer: this.transmuxer_,
                  audioAppendStart: R,
                  gopsToAlignWith: W,
                }
              }
              l.earlyAbortWhenNeeded_ = function (f) {
                if (
                  !this.vhs_.tech_.paused() &&
                  this.xhrOptions_.timeout &&
                  this.playlist_.attributes.BANDWIDTH &&
                  !(1e3 > Date.now() - (f.firstBytesReceivedAt || Date.now()))
                ) {
                  var g = this.currentTime_(),
                    k = f.bandwidth,
                    u = this.pendingSegment_.duration
                  f = Gb.estimateSegmentRequestTime(u, k, this.playlist_, f.bytesReceived)
                  var w = this.buffered_(),
                    A = this.vhs_.tech_.playbackRate()
                  void 0 === A && (A = 1)
                  w = ((w.length ? w.end(w.length - 1) : 0) - g) / A - 1
                  f <= w ||
                    !(g = wr({
                      master: this.vhs_.playlists.master,
                      currentTime: g,
                      bandwidth: k,
                      duration: this.duration_(),
                      segmentDuration: u,
                      timeUntilRebuffer: w,
                      currentTimeline: this.currentTimeline_,
                      syncController: this.syncController_,
                    })) ||
                    ((k = f - w - g.rebufferingImpact),
                    (u = 0.5),
                    w <= Zc && (u = 1),
                    !g.playlist ||
                      g.playlist.uri === this.playlist_.uri ||
                      k < u ||
                      ((this.bandwidth =
                        g.playlist.attributes.BANDWIDTH * lb.BANDWIDTH_VARIANCE + 1),
                      this.trigger('earlyabort')))
                }
              }
              l.handleAbort_ = function () {
                this.mediaRequestsAborted += 1
              }
              l.handleProgress_ = function (f, g) {
                this.earlyAbortWhenNeeded_(g.stats)
                this.checkForAbort_(g.requestId) || this.trigger('progress')
              }
              l.handleTrackInfo_ = function (f, g) {
                this.earlyAbortWhenNeeded_(f.stats)
                this.checkForAbort_(f.requestId) ||
                  this.checkForIllegalMediaSwitch(g) ||
                  ((g = g || {}),
                  Cr(this.currentMediaInfo_, g) ||
                    ((this.appendInitSegment_ = { audio: !0, video: !0 }),
                    (this.currentMediaInfo_ = this.startingMediaInfo_ = g),
                    this.logger_('trackinfo update', g),
                    this.trigger('trackinfo')),
                  this.checkForAbort_(f.requestId) ||
                    ((this.pendingSegment_.trackInfo = g),
                    this.hasEnoughInfoToAppend_() && this.processCallQueue_()))
              }
              l.handleTimingInfo_ = function (f, g, k, u) {
                this.earlyAbortWhenNeeded_(f.stats)
                if (!this.checkForAbort_(f.requestId)) {
                  f = this.pendingSegment_
                  var w = g + 'TimingInfo'
                  f[w] = f[w] || {}
                  f[w][k] = u
                  this.logger_('timinginfo: ' + g + ' - ' + k + ' - ' + u)
                  this.hasEnoughInfoToAppend_() && this.processCallQueue_()
                }
              }
              l.handleCaptions_ = function (f, g) {
                var k = this
                this.earlyAbortWhenNeeded_(f.stats)
                if (!this.checkForAbort_(f.requestId))
                  if (0 === g.length)
                    this.logger_('SegmentLoader received no captions from a caption event')
                  else if (this.pendingSegment_.hasAppendedData_) {
                    var u =
                        null === this.sourceUpdater_.videoTimestampOffset()
                          ? this.sourceUpdater_.audioTimestampOffset()
                          : this.sourceUpdater_.videoTimestampOffset(),
                      w = {}
                    g.forEach(function (A) {
                      w[A.stream] = w[A.stream] || { startTime: Infinity, captions: [], endTime: 0 }
                      var H = w[A.stream]
                      H.startTime = Math.min(H.startTime, A.startTime + u)
                      H.endTime = Math.max(H.endTime, A.endTime + u)
                      H.captions.push(A)
                    })
                    Object.keys(w).forEach(function (A) {
                      var H = w[A],
                        R = H.startTime,
                        W = H.endTime
                      H = H.captions
                      var M = k.inbandTextTracks_
                      k.logger_('adding cues from ' + R + ' -> ' + W + ' for ' + A)
                      var T = k.vhs_.tech_
                      if (!M[A]) {
                        T.trigger({ type: 'usage', name: 'vhs-608' })
                        T.trigger({ type: 'usage', name: 'hls-608' })
                        var Q = T.textTracks().getTrackById(A)
                        M[A] = Q
                          ? Q
                          : T.addRemoteTextTrack({ kind: 'captions', id: A, label: A }, !1).track
                      }
                      re(R, W, M[A])
                      xr({ captionArray: H, inbandTextTracks: M, timestampOffset: u })
                    })
                    this.transmuxer_ &&
                      this.transmuxer_.postMessage({ action: 'clearParsedMp4Captions' })
                  } else this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, f, g))
              }
              l.handleId3_ = function (f, g, k) {
                this.earlyAbortWhenNeeded_(f.stats)
                if (!this.checkForAbort_(f.requestId))
                  if (this.pendingSegment_.hasAppendedData_) {
                    f =
                      null === this.sourceUpdater_.videoTimestampOffset()
                        ? this.sourceUpdater_.audioTimestampOffset()
                        : this.sourceUpdater_.videoTimestampOffset()
                    var u = this.inbandTextTracks_
                    u.metadataTrack_ ||
                      ((u.metadataTrack_ = this.vhs_.tech_.addRemoteTextTrack(
                        { kind: 'metadata', label: 'Timed Metadata' },
                        !1,
                      ).track),
                      (u.metadataTrack_.inBandMetadataTrackDispatchType = k))
                    zr({
                      inbandTextTracks: this.inbandTextTracks_,
                      metadataArray: g,
                      timestampOffset: f,
                      videoDuration: this.duration_(),
                    })
                  } else this.metadataQueue_.id3.push(this.handleId3_.bind(this, f, g, k))
              }
              l.processMetadataQueue_ = function () {
                this.metadataQueue_.id3.forEach(function (f) {
                  return f()
                })
                this.metadataQueue_.caption.forEach(function (f) {
                  return f()
                })
                this.metadataQueue_.id3 = []
                this.metadataQueue_.caption = []
              }
              l.processCallQueue_ = function () {
                var f = this.callQueue_
                this.callQueue_ = []
                f.forEach(function (g) {
                  return g()
                })
              }
              l.processLoadQueue_ = function () {
                var f = this.loadQueue_
                this.loadQueue_ = []
                f.forEach(function (g) {
                  return g()
                })
              }
              l.hasEnoughInfoToLoad_ = function () {
                if ('audio' !== this.loaderType_) return !0
                var f = this.pendingSegment_
                return f
                  ? this.currentMediaInfo_
                    ? Dm({
                        timelineChangeController: this.timelineChangeController_,
                        currentTimeline: this.currentTimeline_,
                        segmentTimeline: f.timeline,
                        loaderType: this.loaderType_,
                        audioDisabled: this.audioDisabled_,
                      })
                      ? !1
                      : !0
                    : !0
                  : !1
              }
              l.hasEnoughInfoToAppend_ = function () {
                if (
                  !this.sourceUpdater_.ready() ||
                  this.waitingOnRemove_ ||
                  this.quotaExceededErrorRetryTimeout_
                )
                  return !1
                var f = this.pendingSegment_
                if (!f || !f.trackInfo) return !1
                if (!this.handlePartialData_) {
                  var g = this.currentMediaInfo_,
                    k = g.isMuxed
                  if (
                    (g.hasVideo && !f.videoTimingInfo) ||
                    (g.hasAudio && !this.audioDisabled_ && !k && !f.audioTimingInfo)
                  )
                    return !1
                }
                return Dm({
                  timelineChangeController: this.timelineChangeController_,
                  currentTimeline: this.currentTimeline_,
                  segmentTimeline: f.timeline,
                  loaderType: this.loaderType_,
                  audioDisabled: this.audioDisabled_,
                })
                  ? !1
                  : !0
              }
              l.handleData_ = function (f, g) {
                this.earlyAbortWhenNeeded_(f.stats)
                if (!this.checkForAbort_(f.requestId))
                  if (this.callQueue_.length || !this.hasEnoughInfoToAppend_())
                    this.callQueue_.push(this.handleData_.bind(this, f, g))
                  else {
                    var k = this.pendingSegment_
                    this.setTimeMapping_(k.timeline)
                    this.updateMediaSecondsLoaded_(k.segment)
                    if ('closed' !== this.mediaSource_.readyState) {
                      f.map &&
                        ((f.map = this.initSegmentForMap(f.map, !0)), (k.segment.map = f.map))
                      f.key && this.segmentKey(f.key, !0)
                      k.isFmp4 = f.isFmp4
                      k.timingInfo = k.timingInfo || {}
                      if (k.isFmp4)
                        this.trigger('fmp4'), (k.timingInfo.start = k[g.type + 'TimingInfo'].start)
                      else {
                        f = 'main' === this.loaderType_ && this.currentMediaInfo_.hasVideo
                        var u
                        f &&
                          (u = this.handlePartialData_
                            ? g.videoFramePtsTime
                            : k.videoTimingInfo.start)
                        k.timingInfo.start = this.trueSegmentStart_({
                          currentStart: k.timingInfo.start,
                          playlist: k.playlist,
                          mediaIndex: k.mediaIndex,
                          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),
                          useVideoTimingInfo: f,
                          firstVideoFrameTimeForData: u,
                          videoTimingInfo: k.videoTimingInfo,
                          audioTimingInfo: k.audioTimingInfo,
                        })
                      }
                      this.updateAppendInitSegmentStatus(k, g.type)
                      this.updateSourceBufferTimestampOffset_(k)
                      k.hasAppendedData_ = !0
                      this.processMetadataQueue_()
                      this.appendData_(k, g)
                    }
                  }
              }
              l.updateAppendInitSegmentStatus = function (f, g) {
                'main' !== this.loaderType_ ||
                  'number' !== typeof f.timestampOffset ||
                  f.changedTimestampOffset ||
                  (this.appendInitSegment_ = { audio: !0, video: !0 })
                this.playlistOfLastInitSegment_[g] !== f.playlist &&
                  (this.appendInitSegment_[g] = !0)
              }
              l.getInitSegmentAndUpdateState_ = function (f) {
                var g = f.type,
                  k = f.initSegment,
                  u = f.map
                f = f.playlist
                if (u) {
                  var w = qf(u)
                  if (this.activeInitSegmentId_ === w) return null
                  k = this.initSegmentForMap(u, !0).bytes
                  this.activeInitSegmentId_ = w
                }
                return k && this.appendInitSegment_[g]
                  ? ((this.playlistOfLastInitSegment_[g] = f),
                    (this.appendInitSegment_[g] = u ? !0 : !1),
                    (this.activeInitSegmentId_ = null),
                    k)
                  : null
              }
              l.handleQuotaExceededError_ = function (f, g) {
                var k = this
                g = f.segmentInfo
                var u = f.type
                f = f.bytes
                var w = this.sourceUpdater_.audioBuffered(),
                  A = this.sourceUpdater_.videoBuffered()
                1 < w.length &&
                  this.logger_(
                    'On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + $c(w).join(', '),
                  )
                1 < A.length &&
                  this.logger_(
                    'On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + $c(A).join(', '),
                  )
                var H = w.length ? w.start(0) : 0,
                  R = w.length ? w.end(w.length - 1) : 0,
                  W = A.length ? A.start(0) : 0,
                  M = A.length ? A.end(A.length - 1) : 0
                if (1 >= R - H && 1 >= M - W)
                  this.logger_(
                    'On QUOTA_EXCEEDED_ERR, single segment too large to append to buffer, triggering an error. Appended byte length: ' +
                      (f.byteLength + ', audio buffer: ') +
                      ($c(w).join(', ') + ', video buffer: ') +
                      ($c(A).join(', ') + ', '),
                  ),
                    this.error({
                      message: 'Quota exceeded error with append of a single segment of content',
                      blacklistDuration: Infinity,
                    }),
                    this.trigger('error')
                else {
                  this.waitingOnRemove_ = !0
                  this.callQueue_.push(
                    this.appendToSourceBuffer_.bind(this, { segmentInfo: g, type: u, bytes: f }),
                  )
                  var T = this.currentTime_() - 1
                  this.logger_('On QUOTA_EXCEEDED_ERR, removing video from 0 to ' + T)
                  this.sourceUpdater_.removeVideo(0, T, function () {
                    k.logger_('On QUOTA_EXCEEDED_ERR, removing audio from 0 to ' + T)
                    k.sourceUpdater_.removeAudio(0, T, function () {
                      k.logger_('On QUOTA_EXCEEDED_ERR, retrying append in 1s')
                      k.waitingOnRemove_ = !1
                      k.quotaExceededErrorRetryTimeout_ = ra.setTimeout(function () {
                        k.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue')
                        k.quotaExceededErrorRetryTimeout_ = null
                        k.processCallQueue_()
                      }, 1e3)
                    })
                  })
                }
              }
              l.handleAppendError_ = function (f, g) {
                var k = f.segmentInfo,
                  u = f.type
                f = f.bytes
                g &&
                  (22 === g.code
                    ? this.handleQuotaExceededError_({ segmentInfo: k, type: u, bytes: f })
                    : (this.logger_('Received non QUOTA_EXCEEDED_ERR on append', g),
                      this.error(
                        u +
                          ' append of ' +
                          f.length +
                          'b failed for segment #' +
                          (k.mediaIndex + ' in playlist ' + k.playlist.id),
                      ),
                      this.trigger('appenderror')))
              }
              l.appendToSourceBuffer_ = function (f) {
                var g = f.segmentInfo,
                  k = f.type,
                  u = f.initSegment,
                  w = f.data
                f = f.bytes
                f ||
                  ((f = [w]),
                  (w = w.byteLength),
                  u && (f.unshift(u), (w += u.byteLength)),
                  (f = lr({ bytes: w, segments: f })))
                this.sourceUpdater_.appendBuffer(
                  { segmentInfo: g, type: k, bytes: f },
                  this.handleAppendError_.bind(this, { segmentInfo: g, type: k, bytes: f }),
                )
              }
              l.handleSegmentTimingInfo_ = function (f, g, k) {
                this.pendingSegment_ &&
                  g === this.pendingSegment_.requestId &&
                  ((g = this.pendingSegment_.segment),
                  (f += 'TimingInfo'),
                  g[f] || (g[f] = {}),
                  (g[f].transmuxerPrependedSeconds = k.prependedContentDuration || 0),
                  (g[f].transmuxedPresentationStart = k.start.presentation),
                  (g[f].transmuxedDecodeStart = k.start.decode),
                  (g[f].transmuxedPresentationEnd = k.end.presentation),
                  (g[f].transmuxedDecodeEnd = k.end.decode),
                  (g[f].baseMediaDecodeTime = k.baseMediaDecodeTime))
              }
              l.appendData_ = function (f, g) {
                var k = g.type,
                  u = g.data
                !u ||
                  !u.byteLength ||
                  ('audio' === k && this.audioDisabled_) ||
                  ((g = this.getInitSegmentAndUpdateState_({
                    type: k,
                    initSegment: g.initSegment,
                    playlist: f.playlist,
                    map: f.isFmp4 ? f.segment.map : null,
                  })),
                  this.appendToSourceBuffer_({ segmentInfo: f, type: k, initSegment: g, data: u }))
              }
              l.loadSegment_ = function (f) {
                var g = this
                this.state = 'WAITING'
                this.pendingSegment_ = f
                this.trimBackBuffer_(f)
                'number' === typeof f.timestampOffset &&
                  this.transmuxer_ &&
                  this.transmuxer_.postMessage({ action: 'clearAllMp4Captions' })
                this.hasEnoughInfoToLoad_()
                  ? this.updateTransmuxerAndRequestSegment_(f)
                  : this.loadQueue_.push(function () {
                      var k = g.buffered_()
                      'number' === typeof f.timestampOffset &&
                        (f.timestampOffset = Cm({
                          segmentTimeline: f.timeline,
                          currentTimeline: g.currentTimeline_,
                          startOfSegment: f.startOfSegment,
                          buffered: k,
                          overrideCheck: !0,
                        }))
                      delete f.audioAppendStart
                      k = g.sourceUpdater_.audioBuffered()
                      k.length &&
                        (f.audioAppendStart =
                          k.end(k.length - 1) - g.sourceUpdater_.audioTimestampOffset())
                      g.updateTransmuxerAndRequestSegment_(f)
                    })
              }
              l.updateTransmuxerAndRequestSegment_ = function (f) {
                var g = this
                this.shouldUpdateTransmuxerTimestampOffset_(f.timestampOffset) &&
                  ((this.gopBuffer_.length = 0),
                  (f.gopsToAlignWith = []),
                  (this.timeMapping_ = 0),
                  this.transmuxer_.postMessage({ action: 'reset' }),
                  this.transmuxer_.postMessage({
                    action: 'setTimestampOffset',
                    timestampOffset: f.timestampOffset,
                  }))
                var k = this.createSimplifiedSegmentObj_(f),
                  u = this.isEndOfStream_(f.mediaIndex, f.playlist),
                  w = null !== this.mediaIndex,
                  A = f.timeline !== this.currentTimeline_ && 0 < f.timeline
                u = u || (w && A)
                f.abortRequests = ur({
                  xhr: this.vhs_.xhr,
                  xhrOptions: this.xhrOptions_,
                  decryptionWorker: this.decrypter_,
                  segment: k,
                  handlePartialData: this.handlePartialData_,
                  abortFn: this.handleAbort_.bind(this),
                  progressFn: this.handleProgress_.bind(this),
                  trackInfoFn: this.handleTrackInfo_.bind(this),
                  timingInfoFn: this.handleTimingInfo_.bind(this),
                  videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(
                    this,
                    'video',
                    f.requestId,
                  ),
                  audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(
                    this,
                    'audio',
                    f.requestId,
                  ),
                  captionsFn: this.handleCaptions_.bind(this),
                  isEndOfTimeline: u,
                  endedTimelineFn: function () {
                    g.logger_('received endedtimeline callback')
                  },
                  id3Fn: this.handleId3_.bind(this),
                  dataFn: this.handleData_.bind(this),
                  doneFn: this.segmentRequestFinished_.bind(this),
                })
              }
              l.trimBackBuffer_ = function (f) {
                f = this.seekable_()
                var g = this.currentTime_(),
                  k = this.playlist_.targetDuration || 10,
                  u = g - lb.BACK_BUFFER_LENGTH
                f.length && (u = Math.max(u, f.start(0)))
                f = Math.min(g - k, u)
                0 < f && this.remove(0, f)
              }
              l.createSimplifiedSegmentObj_ = function (f) {
                var g = f.segment,
                  k = {
                    resolvedUri: g.resolvedUri,
                    byterange: g.byterange,
                    requestId: f.requestId,
                    transmuxer: f.transmuxer,
                    audioAppendStart: f.audioAppendStart,
                    gopsToAlignWith: f.gopsToAlignWith,
                  },
                  u = f.playlist.segments[f.mediaIndex - 1]
                u &&
                  u.timeline === g.timeline &&
                  (u.videoTimingInfo
                    ? (k.baseStartTime = u.videoTimingInfo.transmuxedDecodeEnd)
                    : u.audioTimingInfo &&
                      (k.baseStartTime = u.audioTimingInfo.transmuxedDecodeEnd))
                g.key &&
                  ((f =
                    g.key.iv ||
                    new Uint32Array([0, 0, 0, f.mediaIndex + f.playlist.mediaSequence])),
                  (k.key = this.segmentKey(g.key)),
                  (k.key.iv = f))
                g.map && (k.map = this.initSegmentForMap(g.map))
                return k
              }
              l.saveTransferStats_ = function (f) {
                this.mediaRequests += 1
                f &&
                  ((this.mediaBytesTransferred += f.bytesReceived),
                  (this.mediaTransferDuration += f.roundTripTime))
              }
              l.saveBandwidthRelatedStats_ = function (f, g) {
                this.pendingSegment_.byteLength = g.bytesReceived
                f < Bf
                  ? this.logger_(
                      "Ignoring segment's bandwidth because its duration of " +
                        f +
                        (' is less than the min to record ' + Bf),
                    )
                  : ((this.bandwidth = g.bandwidth), (this.roundTrip = g.roundTripTime))
              }
              l.handleTimeout_ = function () {
                this.mediaRequestsTimedout += 1
                this.bandwidth = 1
                this.roundTrip = NaN
                this.trigger('bandwidthupdate')
              }
              l.segmentRequestFinished_ = function (f, g, k) {
                if (this.callQueue_.length)
                  this.callQueue_.push(this.segmentRequestFinished_.bind(this, f, g, k))
                else if (
                  (this.saveTransferStats_(g.stats),
                  this.pendingSegment_ && g.requestId === this.pendingSegment_.requestId)
                )
                  if (f)
                    (this.pendingSegment_ = null),
                      (this.state = 'READY'),
                      -102 !== f.code &&
                        (this.pause(),
                        -101 === f.code
                          ? this.handleTimeout_()
                          : ((this.mediaRequestsErrored += 1),
                            this.error(f),
                            this.trigger('error')))
                  else {
                    f = this.pendingSegment_
                    this.saveBandwidthRelatedStats_(f.duration, g.stats)
                    f.endOfAllRequests = g.endOfAllRequests
                    if (k.gopInfo) {
                      g = this.gopBuffer_
                      k = k.gopInfo
                      if (k.length)
                        if (this.safeAppend_) g = k.slice()
                        else {
                          var u = k[0].pts,
                            w = 0
                          for (w; w < g.length && !(g[w].pts >= u); w++);
                          g = g.slice(0, w).concat(k)
                        }
                      this.gopBuffer_ = g
                    }
                    this.state = 'APPENDING'
                    this.trigger('appending')
                    this.waitForAppendsToComplete_(f)
                  }
              }
              l.setTimeMapping_ = function (f) {
                f = this.syncController_.mappingForTimeline(f)
                null !== f && (this.timeMapping_ = f)
              }
              l.updateMediaSecondsLoaded_ = function (f) {
                this.mediaSecondsLoaded =
                  'number' === typeof f.start && 'number' === typeof f.end
                    ? this.mediaSecondsLoaded + (f.end - f.start)
                    : this.mediaSecondsLoaded + f.duration
              }
              l.shouldUpdateTransmuxerTimestampOffset_ = function (f) {
                return null === f
                  ? !1
                  : ('main' === this.loaderType_ &&
                        f !== this.sourceUpdater_.videoTimestampOffset()) ||
                      (!this.audioDisabled_ && f !== this.sourceUpdater_.audioTimestampOffset())
                    ? !0
                    : !1
              }
              l.trueSegmentStart_ = function (f) {
                var g = f.currentStart,
                  k = f.mediaIndex,
                  u = f.firstVideoFrameTimeForData,
                  w = f.currentVideoTimestampOffset,
                  A = f.audioTimingInfo
                if ('undefined' !== typeof g) return g
                if (!f.useVideoTimingInfo) return A.start
                g = f.playlist.segments[k - 1]
                return 0 !== k && g && 'undefined' !== typeof g.start && g.end === u + w
                  ? f.videoTimingInfo.start
                  : u
              }
              l.waitForAppendsToComplete_ = function (f) {
                if (this.currentMediaInfo_) {
                  var g = this.currentMediaInfo_,
                    k = g.hasAudio,
                    u = g.hasVideo
                  g = g.isMuxed
                  u = 'main' === this.loaderType_ && u
                  k = !this.audioDisabled_ && k && !g
                  f.waitingOnAppends = 0
                  f.hasAppendedData_
                    ? (u && f.waitingOnAppends++,
                      k && f.waitingOnAppends++,
                      u &&
                        this.sourceUpdater_.videoQueueCallback(
                          this.checkAppendsDone_.bind(this, f),
                        ),
                      k &&
                        this.sourceUpdater_.audioQueueCallback(
                          this.checkAppendsDone_.bind(this, f),
                        ))
                    : (f.timingInfo ||
                        'number' !== typeof f.timestampOffset ||
                        (this.isPendingTimestampOffset_ = !0),
                      (f.timingInfo = { start: 0 }),
                      f.waitingOnAppends++,
                      this.isPendingTimestampOffset_ ||
                        (this.updateSourceBufferTimestampOffset_(f), this.processMetadataQueue_()),
                      this.checkAppendsDone_(f))
                } else
                  this.error({
                    message:
                      'No starting media returned, likely due to an unsupported media format.',
                    blacklistDuration: Infinity,
                  }),
                    this.trigger('error')
              }
              l.checkAppendsDone_ = function (f) {
                this.checkForAbort_(f.requestId) ||
                  (f.waitingOnAppends--, 0 === f.waitingOnAppends && this.handleAppendsDone_())
              }
              l.checkForIllegalMediaSwitch = function (f) {
                var g = this.currentMediaInfo_
                return (f =
                  'main' === this.loaderType_ && g && f
                    ? f.hasAudio || f.hasVideo
                      ? g.hasVideo && !f.hasVideo
                        ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest."
                        : !g.hasVideo && f.hasVideo
                          ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest."
                          : null
                      : 'Neither audio nor video found in segment.'
                    : null)
                  ? (this.error({ message: f, blacklistDuration: Infinity }),
                    this.trigger('error'),
                    !0)
                  : !1
              }
              l.updateSourceBufferTimestampOffset_ = function (f) {
                if (
                  null !== f.timestampOffset &&
                  'number' === typeof f.timingInfo.start &&
                  !f.changedTimestampOffset &&
                  'main' === this.loaderType_
                ) {
                  var g = !1
                  f.timestampOffset -= f.timingInfo.start
                  f.changedTimestampOffset = !0
                  f.timestampOffset !== this.sourceUpdater_.videoTimestampOffset() &&
                    (this.sourceUpdater_.videoTimestampOffset(f.timestampOffset), (g = !0))
                  f.timestampOffset !== this.sourceUpdater_.audioTimestampOffset() &&
                    (this.sourceUpdater_.audioTimestampOffset(f.timestampOffset), (g = !0))
                  g && this.trigger('timestampoffset')
                }
              }
              l.updateTimingInfoEnd_ = function (f) {
                f.timingInfo = f.timingInfo || {}
                var g =
                  'main' === this.loaderType_ &&
                  this.currentMediaInfo_.hasVideo &&
                  f.videoTimingInfo
                    ? f.videoTimingInfo
                    : f.audioTimingInfo
                g && (f.timingInfo.end = 'number' === typeof g.end ? g.end : g.start + f.duration)
              }
              l.handleAppendsDone_ = function () {
                this.pendingSegment_ && this.trigger('appendsdone')
                if (this.pendingSegment_) {
                  var f = this.pendingSegment_
                  this.updateTimingInfoEnd_(f)
                  this.shouldSaveSegmentTimingInfo_ &&
                    this.syncController_.saveSegmentTimingInfo({
                      segmentInfo: f,
                      shouldSaveTimelineMapping: 'main' === this.loaderType_,
                    })
                  var g = this.logger_
                  var k = f.segment
                  var u = f.playlist,
                    w = u.mediaSequence,
                    A = u.segments
                  k = [
                    'appending [' +
                      f.mediaIndex +
                      '] of [' +
                      w +
                      ', ' +
                      (w + (void 0 === A ? [] : A).length) +
                      '] from playlist [' +
                      u.id +
                      ']',
                    '[' + k.start + ' => ' + k.end + '] in timeline [' + f.timeline + ']',
                  ].join(' ')
                  g.call(this, k)
                  'hls' !== this.sourceType_
                    ? (g = null)
                    : ((g = f.audioTimingInfo),
                      (k = f.videoTimingInfo),
                      (u = Math.max(
                        g && 'number' === typeof g.start && 'number' === typeof g.end
                          ? g.end - g.start
                          : 0,
                        k && 'number' === typeof k.start && 'number' === typeof k.end
                          ? k.end - k.start
                          : 0,
                      ))
                        ? ((w = f.playlist.targetDuration),
                          (g = Em({ segmentDuration: u, maxDuration: 2 * w })),
                          (k = Em({ segmentDuration: u, maxDuration: w })),
                          (u =
                            'Segment with index ' +
                            f.mediaIndex +
                            ' from playlist ' +
                            (f.playlist.id + ' has a duration of ') +
                            (u + ' when the reported duration is ') +
                            (f.duration + ' and the target duration is ') +
                            (w +
                              '. For HLS content, a duration in excess of the target duration may result in playback issues. See the HLS specification section on EXT-X-TARGETDURATION for more details: https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1')),
                          (g = g || k ? { severity: g ? 'warn' : 'info', message: u } : null))
                        : (g = null))
                  g && ('warn' === g.severity ? U.log.warn(g.message) : this.logger_(g.message))
                  this.recordThroughput_(f)
                  this.pendingSegment_ = null
                  this.state = 'READY'
                  f.isSyncRequest
                    ? this.trigger('syncinfoupdate')
                    : (this.addSegmentMetadataCue_(f),
                      (this.fetchAtBuffer_ = !0),
                      this.currentTimeline_ !== f.timeline &&
                        (this.timelineChangeController_.lastTimelineChange({
                          type: this.loaderType_,
                          from: this.currentTimeline_,
                          to: f.timeline,
                        }),
                        'main' !== this.loaderType_ ||
                          this.audioDisabled_ ||
                          this.timelineChangeController_.lastTimelineChange({
                            type: 'audio',
                            from: this.currentTimeline_,
                            to: f.timeline,
                          })),
                      (this.currentTimeline_ = f.timeline),
                      this.trigger('syncinfoupdate'),
                      (g = f.segment),
                      g.end && this.currentTime_() - g.end > 3 * f.playlist.targetDuration
                        ? this.resetEverything()
                        : (null !== this.mediaIndex && this.trigger('bandwidthupdate'),
                          this.trigger('progress'),
                          (this.mediaIndex = f.mediaIndex),
                          this.isEndOfStream_(f.mediaIndex, f.playlist) && this.endOfStream(),
                          this.trigger('appended'),
                          this.paused() || this.monitorBuffer_()))
                } else (this.state = 'READY'), this.paused() || this.monitorBuffer_()
              }
              l.recordThroughput_ = function (f) {
                if (f.duration < Bf)
                  this.logger_(
                    "Ignoring segment's throughput because its duration of " +
                      f.duration +
                      (' is less than the min to record ' + Bf),
                  )
                else {
                  var g = this.throughput.rate,
                    k = Date.now() - f.endOfAllRequests + 1
                  this.throughput.rate +=
                    (Math.floor((f.byteLength / k) * 8e3) - g) / ++this.throughput.count
                }
              }
              l.addSegmentMetadataCue_ = function (f) {
                if (this.segmentMetadataTrack_) {
                  var g = f.segment,
                    k = g.start,
                    u = g.end
                  if (
                    'number' === typeof k &&
                    isFinite(k) &&
                    'number' === typeof u &&
                    isFinite(u)
                  ) {
                    re(k, u, this.segmentMetadataTrack_)
                    var w = ra.WebKitDataCue || ra.VTTCue
                    f = {
                      custom: g.custom,
                      dateTimeObject: g.dateTimeObject,
                      dateTimeString: g.dateTimeString,
                      bandwidth: f.playlist.attributes.BANDWIDTH,
                      resolution: f.playlist.attributes.RESOLUTION,
                      codecs: f.playlist.attributes.CODECS,
                      byteLength: f.byteLength,
                      uri: f.uri,
                      timeline: f.timeline,
                      playlist: f.playlist.id,
                      start: k,
                      end: u,
                    }
                    g = JSON.stringify(f)
                    k = new w(k, u, g)
                    k.value = f
                    this.segmentMetadataTrack_.addCue(k)
                  }
                }
              }
              return m
            })(U.EventTarget),
            Fm = function (p) {
              return 'string' !== typeof p
                ? p
                : p.replace(/./, function (m) {
                    return m.toUpperCase()
                  })
            },
            Dr = ['video', 'audio'],
            fi = function (p, m) {
              var l = m[p + 'Buffer']
              return (l && l.updating) || m.queuePending[p]
            },
            gi = function f(m, l) {
              if (0 !== l.queue.length) {
                var g = 0,
                  k = l.queue[g]
                if ('mediaSource' === k.type)
                  l.updating() ||
                    'closed' === l.mediaSource.readyState ||
                    (l.queue.shift(),
                    k.action(l),
                    k.doneFn && k.doneFn(),
                    f('audio', l),
                    f('video', l))
                else if (
                  'mediaSource' !== m &&
                  l.ready() &&
                  'closed' !== l.mediaSource.readyState &&
                  !fi(m, l)
                ) {
                  if (k.type !== m) {
                    a: {
                      g = l.queue
                      for (k = 0; k < g.length; k++) {
                        var u = g[k]
                        if ('mediaSource' === u.type) {
                          g = null
                          break a
                        }
                        if (u.type === m) {
                          g = k
                          break a
                        }
                      }
                      g = null
                    }
                    if (null === g) return
                    k = l.queue[g]
                  }
                  l.queue.splice(g, 1)
                  l.queuePending[m] = k
                  k.action(m, l)
                  k.doneFn || ((l.queuePending[m] = null), f(m, l))
                }
              }
            },
            Gm = function (m, l) {
              var f = l[m + 'Buffer'],
                g = Fm(m)
              f &&
                (f.removeEventListener('updateend', l['on' + g + 'UpdateEnd_']),
                f.removeEventListener('error', l['on' + g + 'Error_']),
                (l.codecs[m] = null),
                (l[m + 'Buffer'] = null))
            },
            qc = function (m, l) {
              return m && l && -1 !== Array.prototype.indexOf.call(m.sourceBuffers, l)
            },
            Ub = {
              appendBuffer: function (m, l, f) {
                return function (g, k) {
                  var u = k[g + 'Buffer']
                  if (qc(k.mediaSource, u)) {
                    k.logger_(
                      'Appending segment ' +
                        l.mediaIndex +
                        "'s " +
                        m.length +
                        ' bytes to ' +
                        g +
                        'Buffer',
                    )
                    try {
                      u.appendBuffer(m)
                    } catch (w) {
                      k.logger_(
                        'Error with code ' +
                          w.code +
                          ' ' +
                          (22 === w.code ? '(QUOTA_EXCEEDED_ERR) ' : '') +
                          ('when appending segment ' + l.mediaIndex + ' to ' + g + 'Buffer'),
                      ),
                        (k.queuePending[g] = null),
                        f(w)
                    }
                  }
                }
              },
              remove: function (m, l) {
                return function (f, g) {
                  var k = g[f + 'Buffer']
                  qc(g.mediaSource, k) &&
                    (g.logger_('Removing ' + m + ' to ' + l + ' from ' + f + 'Buffer'),
                    k.remove(m, l))
                }
              },
              timestampOffset: function (m) {
                return function (l, f) {
                  var g = f[l + 'Buffer']
                  qc(f.mediaSource, g) &&
                    (f.logger_('Setting ' + l + 'timestampOffset to ' + m), (g.timestampOffset = m))
                }
              },
              callback: function (m) {
                return function (l, f) {
                  m()
                }
              },
              endOfStream: function (m) {
                return function (l) {
                  if ('open' === l.mediaSource.readyState) {
                    l.logger_('Calling mediaSource endOfStream(' + (m || '') + ')')
                    try {
                      l.mediaSource.endOfStream(m)
                    } catch (f) {
                      U.log.warn('Failed to call media source endOfStream', f)
                    }
                  }
                }
              },
              duration: function (m) {
                return function (l) {
                  l.logger_('Setting mediaSource duration to ' + m)
                  try {
                    l.mediaSource.duration = m
                  } catch (f) {
                    U.log.warn('Failed to set media source duration', f)
                  }
                }
              },
              abort: function () {
                return function (m, l) {
                  if ('open' === l.mediaSource.readyState) {
                    var f = l[m + 'Buffer']
                    if (qc(l.mediaSource, f)) {
                      l.logger_('calling abort on ' + m + 'Buffer')
                      try {
                        f.abort()
                      } catch (g) {
                        U.log.warn('Failed to abort on ' + m + 'Buffer', g)
                      }
                    }
                  }
                }
              },
              addSourceBuffer: function (m, l) {
                return function (f) {
                  var g = Fm(m),
                    k = zh(l)
                  f.logger_('Adding ' + m + 'Buffer with codec ' + l + ' to mediaSource')
                  k = f.mediaSource.addSourceBuffer(k)
                  k.addEventListener('updateend', f['on' + g + 'UpdateEnd_'])
                  k.addEventListener('error', f['on' + g + 'Error_'])
                  f.codecs[m] = l
                  f[m + 'Buffer'] = k
                }
              },
              removeSourceBuffer: function (m) {
                return function (l) {
                  var f = l[m + 'Buffer']
                  Gm(m, l)
                  if (qc(l.mediaSource, f)) {
                    l.logger_(
                      'Removing ' + m + 'Buffer with codec ' + l.codecs[m] + ' from mediaSource',
                    )
                    try {
                      l.mediaSource.removeSourceBuffer(f)
                    } catch (g) {
                      U.log.warn('Failed to removeSourceBuffer ' + m + 'Buffer', g)
                    }
                  }
                }
              },
              changeType: function (m) {
                return function (l, f) {
                  var g = f[l + 'Buffer'],
                    k = zh(m)
                  qc(f.mediaSource, g) &&
                    f.codecs[l] !== m &&
                    (f.logger_('changing ' + l + 'Buffer codec from ' + f.codecs[l] + ' to ' + m),
                    g.changeType(k),
                    (f.codecs[l] = m))
                }
              },
            },
            Vb = function (m) {
              var l = m.type,
                f = m.sourceUpdater
              f.queue.push({ type: l, action: m.action, doneFn: m.doneFn, name: m.name })
              gi(l, f)
            },
            Hm = function (m, l) {
              return function (f) {
                l.queuePending[m] &&
                  ((f = l.queuePending[m].doneFn),
                  (l.queuePending[m] = null),
                  f && f(l[m + 'Error_']))
                gi(m, l)
              }
            },
            Im = (function (m) {
              function l(g) {
                var k = m.call(this) || this
                k.mediaSource = g
                k.sourceopenListener_ = function () {
                  return gi('mediaSource', Xb(k))
                }
                k.mediaSource.addEventListener('sourceopen', k.sourceopenListener_)
                k.logger_ = mc('SourceUpdater')
                k.audioTimestampOffset_ = 0
                k.videoTimestampOffset_ = 0
                k.queue = []
                k.queuePending = { audio: null, video: null }
                k.delayedAudioAppendQueue_ = []
                k.videoAppendQueued_ = !1
                k.codecs = {}
                k.onVideoUpdateEnd_ = Hm('video', Xb(k))
                k.onAudioUpdateEnd_ = Hm('audio', Xb(k))
                k.onVideoError_ = function (u) {
                  k.videoError_ = u
                }
                k.onAudioError_ = function (u) {
                  k.audioError_ = u
                }
                k.createdSourceBuffers_ = !1
                k.initializedEme_ = !1
                k.triggeredReady_ = !1
                return k
              }
              xc(l, m)
              var f = l.prototype
              f.initializedEme = function () {
                this.initializedEme_ = !0
                this.triggerReady()
              }
              f.hasCreatedSourceBuffers = function () {
                return this.createdSourceBuffers_
              }
              f.hasInitializedAnyEme = function () {
                return this.initializedEme_
              }
              f.ready = function () {
                return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme()
              }
              f.createSourceBuffers = function (g) {
                this.hasCreatedSourceBuffers() ||
                  (this.addOrChangeSourceBuffers(g),
                  (this.createdSourceBuffers_ = !0),
                  this.trigger('createdsourcebuffers'),
                  this.triggerReady())
              }
              f.triggerReady = function () {
                this.ready() &&
                  !this.triggeredReady_ &&
                  ((this.triggeredReady_ = !0), this.trigger('ready'))
              }
              f.addSourceBuffer = function (g, k) {
                Vb({
                  type: 'mediaSource',
                  sourceUpdater: this,
                  action: Ub.addSourceBuffer(g, k),
                  name: 'addSourceBuffer',
                })
              }
              f.abort = function (g) {
                Vb({ type: g, sourceUpdater: this, action: Ub.abort(g), name: 'abort' })
              }
              f.removeSourceBuffer = function (g) {
                this.canRemoveSourceBuffer()
                  ? Vb({
                      type: 'mediaSource',
                      sourceUpdater: this,
                      action: Ub.removeSourceBuffer(g),
                      name: 'removeSourceBuffer',
                    })
                  : U.log.error('removeSourceBuffer is not supported!')
              }
              f.canRemoveSourceBuffer = function () {
                return (
                  !U.browser.IE_VERSION &&
                  !U.browser.IS_FIREFOX &&
                  ra.MediaSource &&
                  ra.MediaSource.prototype &&
                  'function' === typeof ra.MediaSource.prototype.removeSourceBuffer
                )
              }
              l.canChangeType = function () {
                return (
                  ra.SourceBuffer &&
                  ra.SourceBuffer.prototype &&
                  'function' === typeof ra.SourceBuffer.prototype.changeType
                )
              }
              f.canChangeType = function () {
                return this.constructor.canChangeType()
              }
              f.changeType = function (g, k) {
                this.canChangeType()
                  ? Vb({
                      type: g,
                      sourceUpdater: this,
                      action: Ub.changeType(k),
                      name: 'changeType',
                    })
                  : U.log.error('changeType is not supported!')
              }
              f.addOrChangeSourceBuffers = function (g) {
                var k = this
                if (!g || 'object' !== typeof g || 0 === Object.keys(g).length)
                  throw Error('Cannot addOrChangeSourceBuffers to undefined codecs')
                Object.keys(g).forEach(function (u) {
                  var w = g[u]
                  if (!k.hasCreatedSourceBuffers()) return k.addSourceBuffer(u, w)
                  k.canChangeType() && k.changeType(u, w)
                })
              }
              f.appendBuffer = function (g, k) {
                var u = this,
                  w = g.segmentInfo,
                  A = g.type,
                  H = g.bytes
                this.processedAppend_ = !0
                'audio' === A && this.videoBuffer && !this.videoAppendQueued_
                  ? (this.delayedAudioAppendQueue_.push([g, k]),
                    this.logger_('delayed audio append of ' + H.length + ' until video append'))
                  : (Vb({
                      type: A,
                      sourceUpdater: this,
                      action: Ub.appendBuffer(H, w || { mediaIndex: -1 }, k),
                      doneFn: k,
                      name: 'appendBuffer',
                    }),
                    'video' === A &&
                      ((this.videoAppendQueued_ = !0),
                      this.delayedAudioAppendQueue_.length &&
                        ((g = this.delayedAudioAppendQueue_.slice()),
                        this.logger_('queuing delayed audio ' + g.length + ' appendBuffers'),
                        (this.delayedAudioAppendQueue_.length = 0),
                        g.forEach(function (R) {
                          u.appendBuffer.apply(u, R)
                        }))))
              }
              f.audioBuffered = function () {
                return qc(this.mediaSource, this.audioBuffer)
                  ? this.audioBuffer.buffered
                    ? this.audioBuffer.buffered
                    : U.createTimeRange()
                  : U.createTimeRange()
              }
              f.videoBuffered = function () {
                return qc(this.mediaSource, this.videoBuffer)
                  ? this.videoBuffer.buffered
                    ? this.videoBuffer.buffered
                    : U.createTimeRange()
                  : U.createTimeRange()
              }
              f.buffered = function () {
                var g = qc(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null,
                  k = qc(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null
                return k && !g
                  ? this.audioBuffered()
                  : g && !k
                    ? this.videoBuffered()
                    : mq(this.audioBuffered(), this.videoBuffered())
              }
              f.setDuration = function (g, k) {
                void 0 === k && (k = Ic)
                Vb({
                  type: 'mediaSource',
                  sourceUpdater: this,
                  action: Ub.duration(g),
                  name: 'duration',
                  doneFn: k,
                })
              }
              f.endOfStream = function (g, k) {
                void 0 === g && (g = null)
                void 0 === k && (k = Ic)
                'string' !== typeof g && (g = void 0)
                Vb({
                  type: 'mediaSource',
                  sourceUpdater: this,
                  action: Ub.endOfStream(g),
                  name: 'endOfStream',
                  doneFn: k,
                })
              }
              f.removeAudio = function (g, k, u) {
                void 0 === u && (u = Ic)
                this.audioBuffered().length && 0 !== this.audioBuffered().end(0)
                  ? Vb({
                      type: 'audio',
                      sourceUpdater: this,
                      action: Ub.remove(g, k),
                      doneFn: u,
                      name: 'remove',
                    })
                  : u()
              }
              f.removeVideo = function (g, k, u) {
                void 0 === u && (u = Ic)
                this.videoBuffered().length && 0 !== this.videoBuffered().end(0)
                  ? Vb({
                      type: 'video',
                      sourceUpdater: this,
                      action: Ub.remove(g, k),
                      doneFn: u,
                      name: 'remove',
                    })
                  : u()
              }
              f.updating = function () {
                return fi('audio', this) || fi('video', this) ? !0 : !1
              }
              f.audioTimestampOffset = function (g) {
                'undefined' !== typeof g &&
                  this.audioBuffer &&
                  this.audioTimestampOffset_ !== g &&
                  (Vb({
                    type: 'audio',
                    sourceUpdater: this,
                    action: Ub.timestampOffset(g),
                    name: 'timestampOffset',
                  }),
                  (this.audioTimestampOffset_ = g))
                return this.audioTimestampOffset_
              }
              f.videoTimestampOffset = function (g) {
                'undefined' !== typeof g &&
                  this.videoBuffer &&
                  this.videoTimestampOffset !== g &&
                  (Vb({
                    type: 'video',
                    sourceUpdater: this,
                    action: Ub.timestampOffset(g),
                    name: 'timestampOffset',
                  }),
                  (this.videoTimestampOffset_ = g))
                return this.videoTimestampOffset_
              }
              f.audioQueueCallback = function (g) {
                this.audioBuffer &&
                  Vb({
                    type: 'audio',
                    sourceUpdater: this,
                    action: Ub.callback(g),
                    name: 'callback',
                  })
              }
              f.videoQueueCallback = function (g) {
                this.videoBuffer &&
                  Vb({
                    type: 'video',
                    sourceUpdater: this,
                    action: Ub.callback(g),
                    name: 'callback',
                  })
              }
              f.dispose = function () {
                var g = this
                this.trigger('dispose')
                Dr.forEach(function (k) {
                  g.abort(k)
                  if (g.canRemoveSourceBuffer()) g.removeSourceBuffer(k)
                  else
                    g[k + 'QueueCallback'](function () {
                      return Gm(k, g)
                    })
                })
                this.videoAppendQueued_ = !1
                this.delayedAudioAppendQueue_.length = 0
                this.sourceopenListener_ &&
                  this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_)
                this.off()
              }
              return l
            })(U.EventTarget),
            Jm = new Uint8Array(
              ['\n', '\n'].map(function (m) {
                return m.charCodeAt(0)
              }),
            ),
            Er = (function (m) {
              function l(g, k) {
                void 0 === k && (k = {})
                k = m.call(this, g, k) || this
                k.handlePartialData_ = !1
                k.mediaSource_ = null
                k.subtitlesTrack_ = null
                k.loaderType_ = 'subtitle'
                k.featuresNativeTextTracks_ = g.featuresNativeTextTracks
                k.shouldSaveSegmentTimingInfo_ = !1
                return k
              }
              xc(l, m)
              var f = l.prototype
              f.createTransmuxer_ = function () {
                return null
              }
              f.buffered_ = function () {
                if (
                  !this.subtitlesTrack_ ||
                  !this.subtitlesTrack_.cues ||
                  !this.subtitlesTrack_.cues.length
                )
                  return U.createTimeRanges()
                var g = this.subtitlesTrack_.cues
                return U.createTimeRanges([[g[0].startTime, g[g.length - 1].startTime]])
              }
              f.initSegmentForMap = function (g, k) {
                void 0 === k && (k = !1)
                if (!g) return null
                var u = qf(g),
                  w = this.initSegments_[u]
                k &&
                  !w &&
                  g.bytes &&
                  ((k = new Uint8Array(Jm.byteLength + g.bytes.byteLength)),
                  k.set(g.bytes),
                  k.set(Jm, g.bytes.byteLength),
                  (this.initSegments_[u] = w =
                    { resolvedUri: g.resolvedUri, byterange: g.byterange, bytes: k }))
                return w || g
              }
              f.couldBeginLoading_ = function () {
                return this.playlist_ && this.subtitlesTrack_ && !this.paused()
              }
              f.init_ = function () {
                this.state = 'READY'
                this.resetEverything()
                return this.monitorBuffer_()
              }
              f.track = function (g) {
                if ('undefined' === typeof g) return this.subtitlesTrack_
                this.subtitlesTrack_ = g
                'INIT' === this.state && this.couldBeginLoading_() && this.init_()
                return this.subtitlesTrack_
              }
              f.remove = function (g, k) {
                re(g, k, this.subtitlesTrack_)
              }
              f.fillBuffer_ = function () {
                var g = this
                this.syncPoint_ ||
                  (this.syncPoint_ = this.syncController_.getSyncPoint(
                    this.playlist_,
                    this.duration_(),
                    this.currentTimeline_,
                    this.currentTime_(),
                  ))
                var k = this.checkBuffer_(
                  this.buffered_(),
                  this.playlist_,
                  this.mediaIndex,
                  this.hasPlayed_(),
                  this.currentTime_(),
                  this.syncPoint_,
                )
                if ((k = this.skipEmptySegments_(k)))
                  null === this.syncController_.timestampOffsetForTimeline(k.timeline)
                    ? (this.syncController_.one('timestampoffset', function () {
                        g.state = 'READY'
                        g.paused() || g.monitorBuffer_()
                      }),
                      (this.state = 'WAITING_ON_TIMELINE'))
                    : this.loadSegment_(k)
              }
              f.skipEmptySegments_ = function (g) {
                for (; g && g.segment.empty; )
                  g = this.generateSegmentInfo_(
                    g.playlist,
                    g.mediaIndex + 1,
                    g.startOfSegment + g.duration,
                    g.isSyncRequest,
                  )
                return g
              }
              f.stopForError = function (g) {
                this.error(g)
                this.state = 'READY'
                this.pause()
                this.trigger('error')
              }
              f.segmentRequestFinished_ = function (g, k, u) {
                var w = this
                if (this.subtitlesTrack_)
                  if ((this.saveTransferStats_(k.stats), this.pendingSegment_))
                    if (g)
                      -101 === g.code && this.handleTimeout_(),
                        -102 === g.code
                          ? (this.mediaRequestsAborted += 1)
                          : (this.mediaRequestsErrored += 1),
                        this.stopForError(g)
                    else {
                      var A = this.pendingSegment_
                      this.saveBandwidthRelatedStats_(A.duration, k.stats)
                      this.state = 'APPENDING'
                      this.trigger('appending')
                      var H = A.segment
                      H.map && (H.map.bytes = k.map.bytes)
                      A.bytes = k.bytes
                      if (
                        'function' !== typeof ra.WebVTT &&
                        this.subtitlesTrack_ &&
                        this.subtitlesTrack_.tech_
                      ) {
                        var R = function () {
                          w.subtitlesTrack_.tech_.off('vttjsloaded', W)
                          w.stopForError({ message: 'Error loading vtt.js' })
                        }
                        var W = function () {
                          w.subtitlesTrack_.tech_.off('vttjserror', R)
                          w.segmentRequestFinished_(g, k, u)
                        }
                        this.state = 'WAITING_ON_VTTJS'
                        this.subtitlesTrack_.tech_.one('vttjsloaded', W)
                        this.subtitlesTrack_.tech_.one('vttjserror', R)
                      } else {
                        H.requested = !0
                        try {
                          this.parseVTTCues_(A)
                        } catch (M) {
                          this.stopForError({ message: M.message })
                          return
                        }
                        this.updateTimeMapping_(
                          A,
                          this.syncController_.timelines[A.timeline],
                          this.playlist_,
                        )
                        A.timingInfo = A.cues.length
                          ? { start: A.cues[0].startTime, end: A.cues[A.cues.length - 1].endTime }
                          : { start: A.startOfSegment, end: A.startOfSegment + A.duration }
                        A.isSyncRequest
                          ? (this.trigger('syncinfoupdate'),
                            (this.pendingSegment_ = null),
                            (this.state = 'READY'))
                          : ((A.byteLength = A.bytes.byteLength),
                            (this.mediaSecondsLoaded += H.duration),
                            A.cues.forEach(function (M) {
                              w.subtitlesTrack_.addCue(
                                w.featuresNativeTextTracks_
                                  ? new ra.VTTCue(M.startTime, M.endTime, M.text)
                                  : M,
                              )
                            }),
                            Ar(this.subtitlesTrack_),
                            this.handleAppendsDone_())
                      }
                    }
                  else (this.state = 'READY'), (this.mediaRequestsAborted += 1)
                else this.state = 'READY'
              }
              f.handleData_ = function () {}
              f.updateTimingInfoEnd_ = function () {}
              f.parseVTTCues_ = function (g) {
                var k = !1
                if ('function' === typeof ra.TextDecoder) var u = new ra.TextDecoder('utf8')
                else (u = ra.WebVTT.StringDecoder()), (k = !0)
                u = new ra.WebVTT.Parser(ra, ra.vttjs, u)
                g.cues = []
                g.timestampmap = { MPEGTS: 0, LOCAL: 0 }
                u.oncue = g.cues.push.bind(g.cues)
                u.ontimestampmap = function (A) {
                  g.timestampmap = A
                }
                u.onparsingerror = function (A) {
                  U.log.warn('Error encountered when parsing cues: ' + A.message)
                }
                if (g.segment.map) {
                  var w = g.segment.map.bytes
                  k && (w = decodeURIComponent(escape(String.fromCharCode.apply(null, w))))
                  u.parse(w)
                }
                w = g.bytes
                k && (w = decodeURIComponent(escape(String.fromCharCode.apply(null, w))))
                u.parse(w)
                u.flush()
              }
              f.updateTimeMapping_ = function (g, k, u) {
                var w = g.segment
                if (k)
                  if (g.cues.length) {
                    var A = g.timestampmap,
                      H = A.MPEGTS / 9e4 - A.LOCAL + k.mapping
                    g.cues.forEach(function (R) {
                      R.startTime += H
                      R.endTime += H
                    })
                    u.syncInfo ||
                      (u.syncInfo = {
                        mediaSequence: u.mediaSequence + g.mediaIndex,
                        time: Math.min(
                          g.cues[0].startTime,
                          g.cues[g.cues.length - 1].startTime - w.duration,
                        ),
                      })
                  } else w.empty = !0
              }
              return l
            })(ei),
            Km = [
              {
                name: 'VOD',
                run: function (m, l, f, g, k) {
                  return Infinity !== f ? { time: 0, segmentIndex: 0 } : null
                },
              },
              {
                name: 'ProgramDateTime',
                run: function (m, l, f, g, k) {
                  if (!Object.keys(m.timelineToDatetimeMappings).length) return null
                  l = l.segments || []
                  g = f = null
                  k = k || 0
                  for (var u = 0; u < l.length; u++) {
                    var w = l[u],
                      A = m.timelineToDatetimeMappings[w.timeline]
                    if (A && w.dateTimeObject) {
                      w = w.dateTimeObject.getTime() / 1e3 + A
                      A = Math.abs(k - w)
                      if (null !== g && (0 === A || g < A)) break
                      g = A
                      f = { time: w, segmentIndex: u }
                    }
                  }
                  return f
                },
              },
              {
                name: 'Segment',
                run: function (m, l, f, g, k) {
                  m = l.segments || []
                  f = l = null
                  k = k || 0
                  for (var u = 0; u < m.length; u++) {
                    var w = m[u]
                    if (w.timeline === g && 'undefined' !== typeof w.start) {
                      var A = Math.abs(k - w.start)
                      if (null !== f && f < A) break
                      if (!l || null === f || f >= A)
                        (f = A), (l = { time: w.start, segmentIndex: u })
                    }
                  }
                  return l
                },
              },
              {
                name: 'Discontinuity',
                run: function (m, l, f, g, k) {
                  f = null
                  k = k || 0
                  if (l.discontinuityStarts && l.discontinuityStarts.length) {
                    g = null
                    for (var u = 0; u < l.discontinuityStarts.length; u++) {
                      var w = l.discontinuityStarts[u],
                        A = m.discontinuities[l.discontinuitySequence + u + 1]
                      if (A) {
                        var H = Math.abs(k - A.time)
                        if (null !== g && g < H) break
                        if (!f || null === g || g >= H)
                          (g = H), (f = { time: A.time, segmentIndex: w })
                      }
                    }
                  }
                  return f
                },
              },
              {
                name: 'Playlist',
                run: function (m, l, f, g, k) {
                  return l.syncInfo
                    ? {
                        time: l.syncInfo.time,
                        segmentIndex: l.syncInfo.mediaSequence - l.mediaSequence,
                      }
                    : null
                },
              },
            ],
            Fr = (function (m) {
              function l(g) {
                g = m.call(this) || this
                g.timelines = []
                g.discontinuities = []
                g.timelineToDatetimeMappings = {}
                g.logger_ = mc('SyncController')
                return g
              }
              xc(l, m)
              var f = l.prototype
              f.getSyncPoint = function (g, k, u, w) {
                g = this.runStrategies_(g, k, u, w)
                return g.length ? this.selectSyncPoint_(g, { key: 'time', value: w }) : null
              }
              f.getExpiredTime = function (g, k) {
                if (!g || !g.segments) return null
                k = this.runStrategies_(g, k, g.discontinuitySequence, 0)
                if (!k.length) return null
                k = this.selectSyncPoint_(k, { key: 'segmentIndex', value: 0 })
                0 < k.segmentIndex && (k.time *= -1)
                return Math.abs(k.time + le(g, k.segmentIndex, 0))
              }
              f.runStrategies_ = function (g, k, u, w) {
                for (var A = [], H = 0; H < Km.length; H++) {
                  var R = Km[H],
                    W = R.run(this, g, k, u, w)
                  W && ((W.strategy = R.name), A.push({ strategy: R.name, syncPoint: W }))
                }
                return A
              }
              f.selectSyncPoint_ = function (g, k) {
                for (
                  var u = g[0].syncPoint,
                    w = Math.abs(g[0].syncPoint[k.key] - k.value),
                    A = g[0].strategy,
                    H = 1;
                  H < g.length;
                  H++
                ) {
                  var R = Math.abs(g[H].syncPoint[k.key] - k.value)
                  R < w && ((w = R), (u = g[H].syncPoint), (A = g[H].strategy))
                }
                this.logger_(
                  'syncPoint for [' +
                    k.key +
                    ': ' +
                    k.value +
                    '] chosen with strategy [' +
                    (A + ']: [time:' + u.time + ', segmentIndex:') +
                    (u.segmentIndex + ']'),
                )
                return u
              }
              f.saveExpiredSegmentInfo = function (g, k) {
                for (var u = k.mediaSequence - g.mediaSequence - 1; 0 <= u; u--) {
                  var w = g.segments[u]
                  if (w && 'undefined' !== typeof w.start) {
                    k.syncInfo = { mediaSequence: g.mediaSequence + u, time: w.start }
                    this.logger_(
                      'playlist refresh sync: [time:' +
                        k.syncInfo.time +
                        ', mediaSequence: ' +
                        (k.syncInfo.mediaSequence + ']'),
                    )
                    this.trigger('syncinfoupdate')
                    break
                  }
                }
              }
              f.setDateTimeMappingForStart = function (g) {
                this.timelineToDatetimeMappings = {}
                if (g.segments && g.segments.length && g.segments[0].dateTimeObject) {
                  g = g.segments[0]
                  var k = g.dateTimeObject.getTime() / 1e3
                  this.timelineToDatetimeMappings[g.timeline] = -k
                }
              }
              f.saveSegmentTimingInfo = function (g) {
                var k = g.segmentInfo
                g = g.shouldSaveTimelineMapping
                var u = this.calculateSegmentTimeMapping_(k, k.timingInfo, g),
                  w = k.segment
                u &&
                  (this.saveDiscontinuitySyncInfo_(k),
                  k.playlist.syncInfo ||
                    (k.playlist.syncInfo = {
                      mediaSequence: k.playlist.mediaSequence + k.mediaIndex,
                      time: w.start,
                    }))
                k = w.dateTimeObject
                w.discontinuity &&
                  g &&
                  k &&
                  (this.timelineToDatetimeMappings[w.timeline] = -(k.getTime() / 1e3))
              }
              f.timestampOffsetForTimeline = function (g) {
                return 'undefined' === typeof this.timelines[g] ? null : this.timelines[g].time
              }
              f.mappingForTimeline = function (g) {
                return 'undefined' === typeof this.timelines[g] ? null : this.timelines[g].mapping
              }
              f.calculateSegmentTimeMapping_ = function (g, k, u) {
                var w = g.segment,
                  A = this.timelines[g.timeline]
                if ('number' === typeof g.timestampOffset)
                  (A = { time: g.startOfSegment, mapping: g.startOfSegment - k.start }),
                    u &&
                      ((this.timelines[g.timeline] = A),
                      this.trigger('timestampoffset'),
                      this.logger_(
                        'time mapping for timeline ' +
                          g.timeline +
                          ': [time: ' +
                          (A.time + '] [mapping: ' + A.mapping + ']'),
                      )),
                    (w.start = g.startOfSegment),
                    (w.end = k.end + A.mapping)
                else if (A) (w.start = k.start + A.mapping), (w.end = k.end + A.mapping)
                else return !1
                return !0
              }
              f.saveDiscontinuitySyncInfo_ = function (g) {
                var k = g.playlist,
                  u = g.segment
                if (u.discontinuity)
                  this.discontinuities[u.timeline] = { time: u.start, accuracy: 0 }
                else if (k.discontinuityStarts && k.discontinuityStarts.length)
                  for (var w = 0; w < k.discontinuityStarts.length; w++) {
                    var A = k.discontinuityStarts[w],
                      H = k.discontinuitySequence + w + 1,
                      R = A - g.mediaIndex,
                      W = Math.abs(R)
                    if (!this.discontinuities[H] || this.discontinuities[H].accuracy > W)
                      (A =
                        0 > R
                          ? u.start - le(k, g.mediaIndex, A)
                          : u.end + le(k, g.mediaIndex + 1, A)),
                        (this.discontinuities[H] = { time: A, accuracy: W })
                  }
              }
              f.dispose = function () {
                this.trigger('dispose')
                this.off()
              }
              return l
            })(U.EventTarget),
            Gr = (function (m) {
              function l() {
                var g = m.call(this) || this
                g.pendingTimelineChanges_ = {}
                g.lastTimelineChanges_ = {}
                return g
              }
              xc(l, m)
              var f = l.prototype
              f.clearPendingTimelineChange = function (g) {
                this.pendingTimelineChanges_[g] = null
                this.trigger('pendingtimelinechange')
              }
              f.pendingTimelineChange = function (g) {
                var k = g.type,
                  u = g.from
                g = g.to
                'number' === typeof u &&
                  'number' === typeof g &&
                  ((this.pendingTimelineChanges_[k] = { type: k, from: u, to: g }),
                  this.trigger('pendingtimelinechange'))
                return this.pendingTimelineChanges_[k]
              }
              f.lastTimelineChange = function (g) {
                var k = g.type,
                  u = g.from
                g = g.to
                'number' === typeof u &&
                  'number' === typeof g &&
                  ((this.lastTimelineChanges_[k] = { type: k, from: u, to: g }),
                  delete this.pendingTimelineChanges_[k],
                  this.trigger('timelinechange'))
                return this.lastTimelineChanges_[k]
              }
              f.dispose = function () {
                this.trigger('dispose')
                this.pendingTimelineChanges_ = {}
                this.lastTimelineChanges_ = {}
                this.off()
              }
              return l
            })(U.EventTarget),
            Hr = Yl(
              Zl(function () {
                function m(W, M) {
                  for (var T = 0; T < M.length; T++) {
                    var Q = M[T]
                    Q.enumerable = Q.enumerable || !1
                    Q.configurable = !0
                    'value' in Q && (Q.writable = !0)
                    Object.defineProperty(W, Q.key, Q)
                  }
                }
                var l = function (W, M, T) {
                    M && m(W.prototype, M)
                    T && m(W, T)
                    return W
                  },
                  f = function (W, M) {
                    W.prototype = Object.create(M.prototype)
                    W.prototype.constructor = W
                    W.__proto__ = M
                  },
                  g = (function () {
                    function W() {
                      this.listeners = {}
                    }
                    var M = W.prototype
                    M.on = function (T, Q) {
                      this.listeners[T] || (this.listeners[T] = [])
                      this.listeners[T].push(Q)
                    }
                    M.off = function (T, Q) {
                      if (!this.listeners[T]) return !1
                      Q = this.listeners[T].indexOf(Q)
                      this.listeners[T] = this.listeners[T].slice(0)
                      this.listeners[T].splice(Q, 1)
                      return -1 < Q
                    }
                    M.trigger = function (T) {
                      var Q = this.listeners[T]
                      if (Q)
                        if (2 === arguments.length)
                          for (var na = Q.length, oa = 0; oa < na; ++oa)
                            Q[oa].call(this, arguments[1])
                        else {
                          na = Array.prototype.slice.call(arguments, 1)
                          oa = Q.length
                          for (var ya = 0; ya < oa; ++ya) Q[ya].apply(this, na)
                        }
                    }
                    M.dispose = function () {
                      this.listeners = {}
                    }
                    M.pipe = function (T) {
                      this.on('data', function (Q) {
                        T.push(Q)
                      })
                    }
                    return W
                  })(),
                  k = null,
                  u = (function () {
                    function W(M) {
                      if (!k) {
                        var T = [
                            [[], [], [], [], []],
                            [[], [], [], [], []],
                          ],
                          Q = T[0],
                          na = T[1],
                          oa = Q[4],
                          ya = na[4],
                          da,
                          ka,
                          sa,
                          Ha = [],
                          Sa = [],
                          pb
                        for (da = 0; 256 > da; da++)
                          Sa[(Ha[da] = (da << 1) ^ (283 * (da >> 7))) ^ da] = da
                        for (ka = sa = 0; !oa[ka]; ka ^= pb || 1, sa = Sa[sa] || 1) {
                          var Za = sa ^ (sa << 1) ^ (sa << 2) ^ (sa << 3) ^ (sa << 4)
                          Za = (Za >> 8) ^ (Za & 255) ^ 99
                          oa[ka] = Za
                          ya[Za] = ka
                          var mb = Ha[(da = Ha[(pb = Ha[ka])])]
                          var Tb = (16843009 * mb) ^ (65537 * da) ^ (257 * pb) ^ (16843008 * ka)
                          mb = (257 * Ha[Za]) ^ (16843008 * Za)
                          for (da = 0; 4 > da; da++)
                            (Q[da][ka] = mb = (mb << 24) ^ (mb >>> 8)),
                              (na[da][Za] = Tb = (Tb << 24) ^ (Tb >>> 8))
                        }
                        for (da = 0; 5 > da; da++)
                          (Q[da] = Q[da].slice(0)), (na[da] = na[da].slice(0))
                        k = T
                      }
                      this._tables = [
                        [
                          k[0][0].slice(),
                          k[0][1].slice(),
                          k[0][2].slice(),
                          k[0][3].slice(),
                          k[0][4].slice(),
                        ],
                        [
                          k[1][0].slice(),
                          k[1][1].slice(),
                          k[1][2].slice(),
                          k[1][3].slice(),
                          k[1][4].slice(),
                        ],
                      ]
                      T = this._tables[0][4]
                      Q = this._tables[1]
                      oa = M.length
                      ya = 1
                      if (4 !== oa && 6 !== oa && 8 !== oa) throw Error('Invalid aes key size')
                      ka = M.slice(0)
                      sa = []
                      this._key = [ka, sa]
                      for (M = oa; M < 4 * oa + 28; M++) {
                        na = ka[M - 1]
                        if (0 === M % oa || (8 === oa && 4 === M % oa))
                          (na =
                            (T[na >>> 24] << 24) ^
                            (T[(na >> 16) & 255] << 16) ^
                            (T[(na >> 8) & 255] << 8) ^
                            T[na & 255]),
                            0 === M % oa &&
                              ((na = (na << 8) ^ (na >>> 24) ^ (ya << 24)),
                              (ya = (ya << 1) ^ (283 * (ya >> 7))))
                        ka[M] = ka[M - oa] ^ na
                      }
                      for (oa = 0; M; oa++, M--)
                        (na = ka[oa & 3 ? M : M - 4]),
                          (sa[oa] =
                            4 >= M || 4 > oa
                              ? na
                              : Q[0][T[na >>> 24]] ^
                                Q[1][T[(na >> 16) & 255]] ^
                                Q[2][T[(na >> 8) & 255]] ^
                                Q[3][T[na & 255]])
                    }
                    W.prototype.decrypt = function (M, T, Q, na, oa, ya) {
                      var da = this._key[1]
                      M ^= da[0]
                      na ^= da[1]
                      Q ^= da[2]
                      T ^= da[3]
                      var ka = da.length / 4 - 2,
                        sa,
                        Ha = 4
                      var Sa = this._tables[1]
                      var pb = Sa[0],
                        Za = Sa[1],
                        mb = Sa[2],
                        Tb = Sa[3],
                        oc = Sa[4]
                      for (sa = 0; sa < ka; sa++) {
                        Sa =
                          pb[M >>> 24] ^
                          Za[(na >> 16) & 255] ^
                          mb[(Q >> 8) & 255] ^
                          Tb[T & 255] ^
                          da[Ha]
                        var Cd =
                          pb[na >>> 24] ^
                          Za[(Q >> 16) & 255] ^
                          mb[(T >> 8) & 255] ^
                          Tb[M & 255] ^
                          da[Ha + 1]
                        var Kh =
                          pb[Q >>> 24] ^
                          Za[(T >> 16) & 255] ^
                          mb[(M >> 8) & 255] ^
                          Tb[na & 255] ^
                          da[Ha + 2]
                        T =
                          pb[T >>> 24] ^
                          Za[(M >> 16) & 255] ^
                          mb[(na >> 8) & 255] ^
                          Tb[Q & 255] ^
                          da[Ha + 3]
                        Ha += 4
                        M = Sa
                        na = Cd
                        Q = Kh
                      }
                      for (sa = 0; 4 > sa; sa++)
                        (oa[(3 & -sa) + ya] =
                          (oc[M >>> 24] << 24) ^
                          (oc[(na >> 16) & 255] << 16) ^
                          (oc[(Q >> 8) & 255] << 8) ^
                          oc[T & 255] ^
                          da[Ha++]),
                          (Sa = M),
                          (M = na),
                          (na = Q),
                          (Q = T),
                          (T = Sa)
                    }
                    return W
                  })(),
                  w = (function (W) {
                    function M() {
                      var Q = W.call(this, g) || this
                      Q.jobs = []
                      Q.delay = 1
                      Q.timeout_ = null
                      return Q
                    }
                    f(M, W)
                    var T = M.prototype
                    T.processJob_ = function () {
                      this.jobs.shift()()
                      this.timeout_ = this.jobs.length
                        ? setTimeout(this.processJob_.bind(this), this.delay)
                        : null
                    }
                    T.push = function (Q) {
                      this.jobs.push(Q)
                      this.timeout_ ||
                        (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay))
                    }
                    return M
                  })(g),
                  A = function (W) {
                    return (W << 24) | ((W & 65280) << 8) | ((W & 16711680) >> 8) | (W >>> 24)
                  },
                  H = (function () {
                    function W(M, T, Q, na) {
                      var oa = W.STEP,
                        ya = new Int32Array(M.buffer),
                        da = new Uint8Array(M.byteLength)
                      M = 0
                      this.asyncStream_ = new w()
                      this.asyncStream_.push(this.decryptChunk_(ya.subarray(M, M + oa), T, Q, da))
                      for (M = oa; M < ya.length; M += oa)
                        (Q = new Uint32Array([
                          A(ya[M - 4]),
                          A(ya[M - 3]),
                          A(ya[M - 2]),
                          A(ya[M - 1]),
                        ])),
                          this.asyncStream_.push(
                            this.decryptChunk_(ya.subarray(M, M + oa), T, Q, da),
                          )
                      this.asyncStream_.push(function () {
                        na(null, da.subarray(0, da.byteLength - da[da.byteLength - 1]))
                      })
                    }
                    W.prototype.decryptChunk_ = function (M, T, Q, na) {
                      return function () {
                        var oa = new Int32Array(M.buffer, M.byteOffset, M.byteLength >> 2),
                          ya = new u(Array.prototype.slice.call(T)),
                          da = new Uint8Array(M.byteLength),
                          ka = new Int32Array(da.buffer),
                          sa
                        var Ha = Q[0]
                        var Sa = Q[1]
                        var pb = Q[2]
                        var Za = Q[3]
                        for (sa = 0; sa < oa.length; sa += 4) {
                          var mb = A(oa[sa])
                          var Tb = A(oa[sa + 1])
                          var oc = A(oa[sa + 2])
                          var Cd = A(oa[sa + 3])
                          ya.decrypt(mb, Tb, oc, Cd, ka, sa)
                          ka[sa] = A(ka[sa] ^ Ha)
                          ka[sa + 1] = A(ka[sa + 1] ^ Sa)
                          ka[sa + 2] = A(ka[sa + 2] ^ pb)
                          ka[sa + 3] = A(ka[sa + 3] ^ Za)
                          Ha = mb
                          Sa = Tb
                          pb = oc
                          Za = Cd
                        }
                        na.set(da, M.byteOffset)
                      }
                    }
                    l(W, null, [
                      {
                        key: 'STEP',
                        get: function () {
                          return 32e3
                        },
                      },
                    ])
                    return W
                  })(),
                  R = function (W) {
                    var M = {}
                    Object.keys(W).forEach(function (T) {
                      var Q = W[T]
                      ArrayBuffer.isView(Q)
                        ? (M[T] = {
                            bytes: Q.buffer,
                            byteOffset: Q.byteOffset,
                            byteLength: Q.byteLength,
                          })
                        : (M[T] = Q)
                    })
                    return M
                  }
                self.onmessage = function (W) {
                  var M = W.data
                  W = new Uint8Array(
                    M.encrypted.bytes,
                    M.encrypted.byteOffset,
                    M.encrypted.byteLength,
                  )
                  var T = new Uint32Array(M.key.bytes, M.key.byteOffset, M.key.byteLength / 4),
                    Q = new Uint32Array(M.iv.bytes, M.iv.byteOffset, M.iv.byteLength / 4)
                  new H(W, T, Q, function (na, oa) {
                    self.postMessage(R({ source: M.source, decrypted: oa }), [oa.buffer])
                  })
                }
              }),
            ),
            Ir = Xl(Hr),
            Jr = function (m) {
              var l = m['default'] ? 'main' : 'alternative'
              m.characteristics &&
                0 <= m.characteristics.indexOf('public.accessibility.describes-video') &&
                (l = 'main-desc')
              return l
            },
            Cf = function (m, l) {
              m.abort()
              m.pause()
              l &&
                l.activePlaylistLoader &&
                (l.activePlaylistLoader.pause(), (l.activePlaylistLoader = null))
            },
            Kr = function (m, l) {
              return function () {
                var f = l.segmentLoaders,
                  g = f[m],
                  k = f.main
                f = l.mediaTypes[m]
                var u = f.activeTrack()
                u = f.activeGroup(u)
                var w = f.activePlaylistLoader
                Cf(g, f)
                u &&
                  (u.playlistLoader
                    ? (g.resyncLoader(),
                      (g = u.playlistLoader),
                      (f.activePlaylistLoader = g),
                      g.load())
                    : w && k.resetEverything())
              }
            },
            Lr = function (m, l) {
              return function () {
                var f = l.segmentLoaders[m]
                f.abort()
                f.pause()
              }
            },
            Mr = function (m, l) {
              return function () {
                var f = l.segmentLoaders,
                  g = f[m],
                  k = f.main
                f = l.mediaTypes[m]
                var u = f.activeTrack(),
                  w = f.activeGroup(u),
                  A = f.activePlaylistLoader
                Cf(g, f)
                if (w) {
                  if ('AUDIO' === m) {
                    if (!w.playlistLoader) {
                      k.setAudio(!0)
                      k.resetEverything()
                      return
                    }
                    g.setAudio(!0)
                    k.setAudio(!1)
                  }
                  A === w.playlistLoader
                    ? ((g = w.playlistLoader), (f.activePlaylistLoader = g), g.load())
                    : (g.track && g.track(u),
                      g.resetEverything(),
                      (g = w.playlistLoader),
                      (f.activePlaylistLoader = g),
                      g.load())
                }
              }
            },
            Df = {
              AUDIO: function (m, l) {
                return function () {
                  var f = l.mediaTypes[m],
                    g = l.blacklistCurrentPlaylist
                  Cf(l.segmentLoaders[m], f)
                  var k = f.activeTrack(),
                    u = f.activeGroup()
                  u = (
                    u.filter(function (A) {
                      return A['default']
                    })[0] || u[0]
                  ).id
                  u = f.tracks[u]
                  if (k === u)
                    g({ message: 'Problem encountered loading the default audio track.' })
                  else {
                    U.log.warn(
                      'Problem encountered loading the alternate audio track.Switching back to default.',
                    )
                    for (var w in f.tracks) f.tracks[w].enabled = f.tracks[w] === u
                    f.onTrackChanged()
                  }
                }
              },
              SUBTITLES: function (m, l) {
                return function () {
                  var f = l.segmentLoaders[m],
                    g = l.mediaTypes[m]
                  U.log.warn(
                    'Problem encountered loading the subtitle track.Disabling subtitle track.',
                  )
                  Cf(f, g)
                  if ((f = g.activeTrack())) f.mode = 'disabled'
                  g.onTrackChanged()
                }
              },
            },
            Lm = {
              AUDIO: function (m, l, f) {
                if (l) {
                  var g = f.tech,
                    k = f.requestOptions,
                    u = f.segmentLoaders[m]
                  l.on('loadedmetadata', function () {
                    var w = l.media()
                    u.playlist(w, k)
                    ;(!g.paused() || (w.endList && 'none' !== g.preload())) && u.load()
                  })
                  l.on('loadedplaylist', function () {
                    u.playlist(l.media(), k)
                    g.paused() || u.load()
                  })
                  l.on('error', Df[m](m, f))
                }
              },
              SUBTITLES: function (m, l, f) {
                var g = f.tech,
                  k = f.requestOptions,
                  u = f.segmentLoaders[m],
                  w = f.mediaTypes[m]
                l.on('loadedmetadata', function () {
                  var A = l.media()
                  u.playlist(A, k)
                  u.track(w.activeTrack())
                  ;(!g.paused() || (A.endList && 'none' !== g.preload())) && u.load()
                })
                l.on('loadedplaylist', function () {
                  u.playlist(l.media(), k)
                  g.paused() || u.load()
                })
                l.on('error', Df[m](m, f))
              },
            },
            Nr = {
              AUDIO: function (m, l) {
                var f = l.vhs,
                  g = l.sourceType,
                  k = l.segmentLoaders[m],
                  u = l.requestOptions,
                  w = l.master,
                  A = w.mediaGroups,
                  H = w.playlists
                w = l.mediaTypes[m]
                var R = w.groups,
                  W = w.tracks,
                  M = l.masterPlaylistLoader
                ;(A[m] && 0 !== Object.keys(A[m]).length) ||
                  (A[m] = { main: { default: { default: !0 } } })
                w = function (Q) {
                  R[Q] || (R[Q] = [])
                  var na = H.filter(function (da) {
                      return da.attributes[m] === Q
                    }),
                    oa = function (da) {
                      var ka = A[m][Q][da]
                      !na.filter(function (Ha) {
                        return Ha.resolvedUri !== ka.resolvedUri
                      }).length &&
                        na.length &&
                        delete ka.resolvedUri
                      var sa = void 0
                      sa =
                        'vhs-json' === g && ka.playlists
                          ? new Bd(ka.playlists[0], f, u)
                          : ka.resolvedUri
                            ? new Bd(ka.resolvedUri, f, u)
                            : ka.playlists && 'dash' === g
                              ? new Jh(ka.playlists[0], f, u, M)
                              : null
                      ka = U.mergeOptions({ id: da, playlistLoader: sa }, ka)
                      Lm[m](m, ka.playlistLoader, l)
                      R[Q].push(ka)
                      'undefined' === typeof W[da] &&
                        ((sa = new U.AudioTrack({
                          id: da,
                          kind: Jr(ka),
                          enabled: !1,
                          language: ka.language,
                          default: ka['default'],
                          label: da,
                        })),
                        (W[da] = sa))
                    },
                    ya
                  for (ya in A[m][Q]) oa(ya)
                }
                for (var T in A[m]) w(T)
                k.on('error', Df[m](m, l))
              },
              SUBTITLES: function (m, l) {
                var f = l.tech,
                  g = l.vhs,
                  k = l.sourceType,
                  u = l.segmentLoaders[m],
                  w = l.requestOptions,
                  A = l.master.mediaGroups,
                  H = l.mediaTypes[m],
                  R = H.groups
                H = H.tracks
                var W = l.masterPlaylistLoader,
                  M
                for (M in A[m]) {
                  R[M] || (R[M] = [])
                  for (var T in A[m][M])
                    if (!A[m][M][T].forced) {
                      var Q = A[m][M][T],
                        na = void 0
                      if ('hls' === k) na = new Bd(Q.resolvedUri, g, w)
                      else if ('dash' === k) {
                        if (
                          !Q.playlists.filter(function (oa) {
                            return Infinity !== oa.excludeUntil
                          }).length
                        )
                          return
                        na = new Jh(Q.playlists[0], g, w, W)
                      } else
                        'vhs-json' === k &&
                          (na = new Bd(Q.playlists ? Q.playlists[0] : Q.resolvedUri, g, w))
                      Q = U.mergeOptions({ id: T, playlistLoader: na }, Q)
                      Lm[m](m, Q.playlistLoader, l)
                      R[M].push(Q)
                      'undefined' === typeof H[T] &&
                        ((Q = f.addRemoteTextTrack(
                          {
                            id: T,
                            kind: 'subtitles',
                            default: Q['default'] && Q.autoselect,
                            language: Q.language,
                            label: T,
                          },
                          !1,
                        ).track),
                        (H[T] = Q))
                    }
                }
                u.on('error', Df[m](m, l))
              },
              'CLOSED-CAPTIONS': function (m, l) {
                var f = l.tech,
                  g = l.master.mediaGroups,
                  k = l.mediaTypes[m]
                l = k.groups
                k = k.tracks
                for (var u in g[m]) {
                  l[u] || (l[u] = [])
                  for (var w in g[m][u]) {
                    var A = g[m][u][w]
                    A.instreamId.match(/CC\d/) &&
                      (l[u].push(U.mergeOptions({ id: w }, A)),
                      'undefined' === typeof k[w] &&
                        ((A = f.addRemoteTextTrack(
                          {
                            id: A.instreamId,
                            kind: 'captions',
                            default: A['default'] && A.autoselect,
                            language: A.language,
                            label: w,
                          },
                          !1,
                        ).track),
                        (k[w] = A)))
                  }
                }
              },
            },
            Or = function (m, l) {
              return function (f) {
                var g = l.mediaTypes[m].groups,
                  k = l.masterPlaylistLoader.media()
                if (!k) return null
                var u = null
                k.attributes[m] && (u = g[k.attributes[m]])
                u = u || g.main
                return 'undefined' === typeof f
                  ? u
                  : null === f
                    ? null
                    : u.filter(function (w) {
                        return w.id === f.id
                      })[0] || null
              }
            },
            Pr = {
              AUDIO: function (m, l) {
                return function () {
                  var f = l.mediaTypes[m].tracks,
                    g
                  for (g in f) if (f[g].enabled) return f[g]
                  return null
                }
              },
              SUBTITLES: function (m, l) {
                return function () {
                  var f = l.mediaTypes[m].tracks,
                    g
                  for (g in f) if ('showing' === f[g].mode || 'hidden' === f[g].mode) return f[g]
                  return null
                }
              },
            },
            Qr = function (m) {
              ;['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (H) {
                Nr[H](H, m)
              })
              var l = m.mediaTypes,
                f = m.masterPlaylistLoader,
                g = m.tech,
                k = m.vhs
              ;['AUDIO', 'SUBTITLES'].forEach(function (H) {
                l[H].activeGroup = Or(H, m)
                l[H].activeTrack = Pr[H](H, m)
                l[H].onGroupChanged = Kr(H, m)
                l[H].onGroupChanging = Lr(H, m)
                l[H].onTrackChanged = Mr(H, m)
              })
              var u = l.AUDIO.activeGroup()
              u &&
                ((u = (
                  u.filter(function (H) {
                    return H['default']
                  })[0] || u[0]
                ).id),
                (l.AUDIO.tracks[u].enabled = !0),
                l.AUDIO.onTrackChanged())
              f.on('mediachange', function () {
                ;['AUDIO', 'SUBTITLES'].forEach(function (H) {
                  return l[H].onGroupChanged()
                })
              })
              f.on('mediachanging', function () {
                ;['AUDIO', 'SUBTITLES'].forEach(function (H) {
                  return l[H].onGroupChanging()
                })
              })
              var w = function () {
                l.AUDIO.onTrackChanged()
                g.trigger({ type: 'usage', name: 'vhs-audio-change' })
                g.trigger({ type: 'usage', name: 'hls-audio-change' })
              }
              g.audioTracks().addEventListener('change', w)
              g.remoteTextTracks().addEventListener('change', l.SUBTITLES.onTrackChanged)
              k.on('dispose', function () {
                g.audioTracks().removeEventListener('change', w)
                g.remoteTextTracks().removeEventListener('change', l.SUBTITLES.onTrackChanged)
              })
              g.clearTracks('audio')
              for (var A in l.AUDIO.tracks) g.audioTracks().addTrack(l.AUDIO.tracks[A])
            },
            Rr = function () {
              var m = {}
              ;['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (l) {
                m[l] = {
                  groups: {},
                  tracks: {},
                  activePlaylistLoader: null,
                  activeGroup: Ic,
                  activeTrack: Ic,
                  onGroupChanged: Ic,
                  onTrackChanged: Ic,
                }
              })
              return m
            },
            bd,
            Sr =
              'mediaRequests mediaRequestsAborted mediaRequestsTimedout mediaRequestsErrored mediaTransferDuration mediaBytesTransferred'.split(
                ' ',
              ),
            Tr = function (m) {
              return this.audioSegmentLoader_[m] + this.mainSegmentLoader_[m]
            },
            Ur = function (m) {
              var l = m.currentPlaylist,
                f = m.nextPlaylist,
                g = m.forwardBuffer,
                k = m.bufferLowWaterLine,
                u = m.bufferHighWaterLine,
                w = m.duration,
                A = m.experimentalBufferBasedABR
              m = m.log
              if (!f)
                return (
                  U.log.warn('We received no playlist to switch to. Please check your stream.'), !1
                )
              var H = 'allowing switch ' + ((l && l.id) || 'null') + ' -> ' + f.id
              if (!l || !l.endList)
                return m(H + ' as current playlist ' + (l ? 'is live' : 'is not set')), !0
              if (f.id === l.id) return !1
              var R = A ? lb.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : lb.MAX_BUFFER_LOW_WATER_LINE
              if (w < R)
                return m(H + ' as duration < max low water line (' + w + ' < ' + R + ')'), !0
              f = f.attributes.BANDWIDTH
              l = l.attributes.BANDWIDTH
              if (f < l && (!A || g < u))
                return (
                  (k = H + ' as next bandwidth < current bandwidth (' + f + ' < ' + l + ')'),
                  A && (k += ' and forwardBuffer < bufferHighWaterLine (' + g + ' < ' + u + ')'),
                  m(k),
                  !0
                )
              if ((!A || f > l) && g >= k)
                return (
                  (g = H + ' as forwardBuffer >= bufferLowWaterLine (' + g + ' >= ' + k + ')'),
                  A && (g += ' and next bandwidth > current bandwidth (' + f + ' > ' + l + ')'),
                  m(g),
                  !0
                )
              m('not ' + H + ' as no switching criteria met')
              return !1
            },
            Vr = (function (m) {
              function l(g) {
                var k = m.call(this) || this
                var u = g.src,
                  w = g.handleManifestRedirects,
                  A = g.withCredentials,
                  H = g.tech,
                  R = g.bandwidth,
                  W = g.externVhs,
                  M = g.useCueTags,
                  T = g.blacklistDuration,
                  Q = g.enableLowInitialPlaylist,
                  na = g.sourceType,
                  oa = g.cacheEncryptionKeys,
                  ya = g.handlePartialData,
                  da = g.experimentalBufferBasedABR
                if (!u) throw Error('A non-empty playlist URL or JSON manifest string is required')
                bd = W
                k.experimentalBufferBasedABR = !!da
                k.withCredentials = A
                k.tech_ = H
                k.vhs_ = H.vhs
                k.sourceType_ = na
                k.useCueTags_ = M
                k.blacklistDuration = T
                k.enableLowInitialPlaylist = Q
                k.useCueTags_ &&
                  ((k.cueTagsTrack_ = k.tech_.addTextTrack('metadata', 'ad-cues')),
                  (k.cueTagsTrack_.inBandMetadataTrackDispatchType = ''))
                k.requestOptions_ = {
                  withCredentials: A,
                  handleManifestRedirects: w,
                  timeout: null,
                }
                k.on('error', k.pauseLoading)
                k.mediaTypes_ = Rr()
                k.mediaSource = new ra.MediaSource()
                k.handleDurationChange_ = k.handleDurationChange_.bind(Xb(k))
                k.handleSourceOpen_ = k.handleSourceOpen_.bind(Xb(k))
                k.handleSourceEnded_ = k.handleSourceEnded_.bind(Xb(k))
                k.mediaSource.addEventListener('durationchange', k.handleDurationChange_)
                k.mediaSource.addEventListener('sourceopen', k.handleSourceOpen_)
                k.mediaSource.addEventListener('sourceended', k.handleSourceEnded_)
                k.seekable_ = U.createTimeRanges()
                k.hasPlayed_ = !1
                k.syncController_ = new Fr(g)
                k.segmentMetadataTrack_ = H.addRemoteTextTrack(
                  { kind: 'metadata', label: 'segment-metadata' },
                  !1,
                ).track
                k.decrypter_ = new Ir()
                k.sourceUpdater_ = new Im(k.mediaSource)
                k.inbandTextTracks_ = {}
                k.timelineChangeController_ = new Gr()
                w = {
                  vhs: k.vhs_,
                  parse708captions: g.parse708captions,
                  mediaSource: k.mediaSource,
                  currentTime: k.tech_.currentTime.bind(k.tech_),
                  seekable: function () {
                    return k.seekable()
                  },
                  seeking: function () {
                    return k.tech_.seeking()
                  },
                  duration: function () {
                    return k.duration()
                  },
                  hasPlayed: function () {
                    return k.hasPlayed_
                  },
                  goalBufferLength: function () {
                    return k.goalBufferLength()
                  },
                  bandwidth: R,
                  syncController: k.syncController_,
                  decrypter: k.decrypter_,
                  sourceType: k.sourceType_,
                  inbandTextTracks: k.inbandTextTracks_,
                  cacheEncryptionKeys: oa,
                  handlePartialData: ya,
                  sourceUpdater: k.sourceUpdater_,
                  timelineChangeController: k.timelineChangeController_,
                }
                k.masterPlaylistLoader_ =
                  'dash' === k.sourceType_
                    ? new Jh(u, k.vhs_, k.requestOptions_)
                    : new Bd(u, k.vhs_, k.requestOptions_)
                k.setupMasterPlaylistLoaderListeners_()
                k.mainSegmentLoader_ = new ei(
                  U.mergeOptions(w, {
                    segmentMetadataTrack: k.segmentMetadataTrack_,
                    loaderType: 'main',
                  }),
                  g,
                )
                k.audioSegmentLoader_ = new ei(U.mergeOptions(w, { loaderType: 'audio' }), g)
                k.subtitleSegmentLoader_ = new Er(
                  U.mergeOptions(w, {
                    loaderType: 'vtt',
                    featuresNativeTextTracks: k.tech_.featuresNativeTextTracks,
                  }),
                  g,
                )
                k.setupSegmentLoaderListeners_()
                k.experimentalBufferBasedABR &&
                  (k.masterPlaylistLoader_.one('loadedplaylist', function () {
                    return k.startABRTimer_()
                  }),
                  k.tech_.on('pause', function () {
                    return k.stopABRTimer_()
                  }),
                  k.tech_.on('play', function () {
                    return k.startABRTimer_()
                  }))
                Sr.forEach(function (ka) {
                  k[ka + '_'] = Tr.bind(Xb(k), ka)
                })
                k.logger_ = mc('MPC')
                k.triggeredFmp4Usage = !1
                'none' === k.tech_.preload()
                  ? ((k.loadOnPlay_ = function () {
                      k.loadOnPlay_ = null
                      k.masterPlaylistLoader_.load()
                    }),
                    k.tech_.one('play', k.loadOnPlay_))
                  : k.masterPlaylistLoader_.load()
                return k
              }
              xc(l, m)
              var f = l.prototype
              f.checkABR_ = function () {
                var g = this.selectPlaylist()
                this.shouldSwitchToMedia_(g) && this.masterPlaylistLoader_.media(g)
              }
              f.startABRTimer_ = function () {
                var g = this
                this.stopABRTimer_()
                this.abrTimer_ = ra.setInterval(function () {
                  return g.checkABR_()
                }, 250)
              }
              f.stopABRTimer_ = function () {
                ;(this.tech_.scrubbing && this.tech_.scrubbing()) ||
                  (ra.clearInterval(this.abrTimer_), (this.abrTimer_ = null))
              }
              f.setupMasterPlaylistLoaderListeners_ = function () {
                var g = this
                this.masterPlaylistLoader_.on('loadedmetadata', function () {
                  var k = g.masterPlaylistLoader_.media(),
                    u = 1500 * k.targetDuration
                  Fh(g.masterPlaylistLoader_.master, g.masterPlaylistLoader_.media())
                    ? (g.requestOptions_.timeout = 0)
                    : (g.requestOptions_.timeout = u)
                  k.endList &&
                    'none' !== g.tech_.preload() &&
                    (g.mainSegmentLoader_.playlist(k, g.requestOptions_),
                    g.mainSegmentLoader_.load())
                  Qr({
                    sourceType: g.sourceType_,
                    segmentLoaders: {
                      AUDIO: g.audioSegmentLoader_,
                      SUBTITLES: g.subtitleSegmentLoader_,
                      main: g.mainSegmentLoader_,
                    },
                    tech: g.tech_,
                    requestOptions: g.requestOptions_,
                    masterPlaylistLoader: g.masterPlaylistLoader_,
                    vhs: g.vhs_,
                    master: g.master(),
                    mediaTypes: g.mediaTypes_,
                    blacklistCurrentPlaylist: g.blacklistCurrentPlaylist.bind(g),
                  })
                  g.triggerPresenceUsage_(g.master(), k)
                  g.setupFirstPlay()
                  if (
                    !g.mediaTypes_.AUDIO.activePlaylistLoader ||
                    g.mediaTypes_.AUDIO.activePlaylistLoader.media()
                  )
                    g.trigger('selectedinitialmedia')
                  else
                    g.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {
                      g.trigger('selectedinitialmedia')
                    })
                })
                this.masterPlaylistLoader_.on('loadedplaylist', function () {
                  g.loadOnPlay_ && g.tech_.off('play', g.loadOnPlay_)
                  var k = g.masterPlaylistLoader_.media()
                  if (!k) {
                    g.excludeUnsupportedVariants_()
                    var u
                    g.enableLowInitialPlaylist && (u = g.selectInitialPlaylist())
                    u || (u = g.selectPlaylist())
                    if (!u || !g.shouldSwitchToMedia_(u)) return
                    g.initialMedia_ = u
                    g.masterPlaylistLoader_.media(g.initialMedia_)
                    if ('vhs-json' !== g.sourceType_ || !g.initialMedia_.segments) return
                    k = g.initialMedia_
                  }
                  g.handleUpdatedMediaPlaylist(k)
                })
                this.masterPlaylistLoader_.on('error', function () {
                  g.blacklistCurrentPlaylist(g.masterPlaylistLoader_.error)
                })
                this.masterPlaylistLoader_.on('mediachanging', function () {
                  g.mainSegmentLoader_.abort()
                  g.mainSegmentLoader_.pause()
                })
                this.masterPlaylistLoader_.on('mediachange', function () {
                  var k = g.masterPlaylistLoader_.media(),
                    u = 1500 * k.targetDuration
                  Fh(g.masterPlaylistLoader_.master, g.masterPlaylistLoader_.media())
                    ? (g.requestOptions_.timeout = 0)
                    : (g.requestOptions_.timeout = u)
                  g.mainSegmentLoader_.playlist(k, g.requestOptions_)
                  g.mainSegmentLoader_.load()
                  g.tech_.trigger({ type: 'mediachange', bubbles: !0 })
                })
                this.masterPlaylistLoader_.on('playlistunchanged', function () {
                  var k = g.masterPlaylistLoader_.media()
                  'playlist-unchanged' !== k.lastExcludeReason_ &&
                    g.stuckAtPlaylistEnd_(k) &&
                    (g.blacklistCurrentPlaylist({
                      message: 'Playlist no longer updating.',
                      reason: 'playlist-unchanged',
                    }),
                    g.tech_.trigger('playliststuck'))
                })
                this.masterPlaylistLoader_.on('renditiondisabled', function () {
                  g.tech_.trigger({ type: 'usage', name: 'vhs-rendition-disabled' })
                  g.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' })
                })
                this.masterPlaylistLoader_.on('renditionenabled', function () {
                  g.tech_.trigger({ type: 'usage', name: 'vhs-rendition-enabled' })
                  g.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' })
                })
              }
              f.handleUpdatedMediaPlaylist = function (g) {
                this.useCueTags_ && this.updateAdCues_(g)
                this.mainSegmentLoader_.playlist(g, this.requestOptions_)
                this.updateDuration(!g.endList)
                this.tech_.paused() ||
                  (this.mainSegmentLoader_.load(),
                  this.audioSegmentLoader_ && this.audioSegmentLoader_.load())
              }
              f.triggerPresenceUsage_ = function (g, k) {
                g = g.mediaGroups || {}
                var u = !0,
                  w = Object.keys(g.AUDIO),
                  A
                for (A in g.AUDIO) for (var H in g.AUDIO[A]) g.AUDIO[A][H].uri || (u = !1)
                u &&
                  (this.tech_.trigger({ type: 'usage', name: 'vhs-demuxed' }),
                  this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' }))
                Object.keys(g.SUBTITLES).length &&
                  (this.tech_.trigger({ type: 'usage', name: 'vhs-webvtt' }),
                  this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' }))
                bd.Playlist.isAes(k) &&
                  (this.tech_.trigger({ type: 'usage', name: 'vhs-aes' }),
                  this.tech_.trigger({ type: 'usage', name: 'hls-aes' }))
                w.length &&
                  1 < Object.keys(g.AUDIO[w[0]]).length &&
                  (this.tech_.trigger({ type: 'usage', name: 'vhs-alternate-audio' }),
                  this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' }))
                this.useCueTags_ &&
                  (this.tech_.trigger({ type: 'usage', name: 'vhs-playlist-cue-tags' }),
                  this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' }))
              }
              f.shouldSwitchToMedia_ = function (g) {
                var k = this.masterPlaylistLoader_.media(),
                  u = this.tech_.buffered()
                u = u.length ? u.end(u.length - 1) - this.tech_.currentTime() : 0
                var w = this.bufferLowWaterLine(),
                  A = this.bufferHighWaterLine()
                return Ur({
                  currentPlaylist: k,
                  nextPlaylist: g,
                  forwardBuffer: u,
                  bufferLowWaterLine: w,
                  bufferHighWaterLine: A,
                  duration: this.duration(),
                  experimentalBufferBasedABR: this.experimentalBufferBasedABR,
                  log: this.logger_,
                })
              }
              f.setupSegmentLoaderListeners_ = function () {
                var g = this
                this.experimentalBufferBasedABR ||
                  (this.mainSegmentLoader_.on('bandwidthupdate', function () {
                    var u = g.selectPlaylist()
                    g.shouldSwitchToMedia_(u) && g.masterPlaylistLoader_.media(u)
                    g.tech_.trigger('bandwidthupdate')
                  }),
                  this.mainSegmentLoader_.on('progress', function () {
                    g.trigger('progress')
                  }))
                this.mainSegmentLoader_.on('error', function () {
                  g.blacklistCurrentPlaylist(g.mainSegmentLoader_.error())
                })
                this.mainSegmentLoader_.on('appenderror', function () {
                  g.error = g.mainSegmentLoader_.error_
                  g.trigger('error')
                })
                this.mainSegmentLoader_.on('syncinfoupdate', function () {
                  g.onSyncInfoUpdate_()
                })
                this.mainSegmentLoader_.on('timestampoffset', function () {
                  g.tech_.trigger({ type: 'usage', name: 'vhs-timestamp-offset' })
                  g.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' })
                })
                this.audioSegmentLoader_.on('syncinfoupdate', function () {
                  g.onSyncInfoUpdate_()
                })
                this.audioSegmentLoader_.on('appenderror', function () {
                  g.error = g.audioSegmentLoader_.error_
                  g.trigger('error')
                })
                this.mainSegmentLoader_.on('ended', function () {
                  g.logger_('main segment loader ended')
                  g.onEndOfStream()
                })
                this.mainSegmentLoader_.on('earlyabort', function (u) {
                  g.experimentalBufferBasedABR ||
                    (g.delegateLoaders_('all', ['abort']),
                    g.blacklistCurrentPlaylist(
                      {
                        message:
                          "Aborted early because there isn't enough bandwidth to complete the request without rebuffering.",
                      },
                      120,
                    ))
                })
                var k = function () {
                  if (!g.sourceUpdater_.hasCreatedSourceBuffers())
                    return g.tryToCreateSourceBuffers_()
                  var u = g.getCodecsOrExclude_()
                  u && g.sourceUpdater_.addOrChangeSourceBuffers(u)
                }
                this.mainSegmentLoader_.on('trackinfo', k)
                this.audioSegmentLoader_.on('trackinfo', k)
                this.mainSegmentLoader_.on('fmp4', function () {
                  g.triggeredFmp4Usage ||
                    (g.tech_.trigger({ type: 'usage', name: 'vhs-fmp4' }),
                    g.tech_.trigger({ type: 'usage', name: 'hls-fmp4' }),
                    (g.triggeredFmp4Usage = !0))
                })
                this.audioSegmentLoader_.on('fmp4', function () {
                  g.triggeredFmp4Usage ||
                    (g.tech_.trigger({ type: 'usage', name: 'vhs-fmp4' }),
                    g.tech_.trigger({ type: 'usage', name: 'hls-fmp4' }),
                    (g.triggeredFmp4Usage = !0))
                })
                this.audioSegmentLoader_.on('ended', function () {
                  g.logger_('audioSegmentLoader ended')
                  g.onEndOfStream()
                })
              }
              f.mediaSecondsLoaded_ = function () {
                return Math.max(
                  this.audioSegmentLoader_.mediaSecondsLoaded +
                    this.mainSegmentLoader_.mediaSecondsLoaded,
                )
              }
              f.load = function () {
                this.mainSegmentLoader_.load()
                this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load()
                this.mediaTypes_.SUBTITLES.activePlaylistLoader &&
                  this.subtitleSegmentLoader_.load()
              }
              f.smoothQualityChange_ = function (g) {
                void 0 === g && (g = this.selectPlaylist())
                g !== this.masterPlaylistLoader_.media() &&
                  (this.masterPlaylistLoader_.media(g), this.mainSegmentLoader_.resetLoader())
              }
              f.fastQualityChange_ = function (g) {
                var k = this
                void 0 === g && (g = this.selectPlaylist())
                g === this.masterPlaylistLoader_.media()
                  ? this.logger_('skipping fastQualityChange because new media is same as old')
                  : (this.masterPlaylistLoader_.media(g),
                    this.mainSegmentLoader_.resetEverything(function () {
                      U.browser.IE_VERSION || U.browser.IS_EDGE
                        ? k.tech_.setCurrentTime(k.tech_.currentTime() + 0.04)
                        : k.tech_.setCurrentTime(k.tech_.currentTime())
                    }))
              }
              f.play = function () {
                if (!this.setupFirstPlay()) {
                  this.tech_.ended() && this.tech_.setCurrentTime(0)
                  this.hasPlayed_ && this.load()
                  var g = this.tech_.seekable()
                  if (Infinity === this.tech_.duration() && this.tech_.currentTime() < g.start(0))
                    return this.tech_.setCurrentTime(g.end(g.length - 1))
                }
              }
              f.setupFirstPlay = function () {
                var g = this,
                  k = this.masterPlaylistLoader_.media()
                if (!k || this.tech_.paused() || this.hasPlayed_) return !1
                if (!k.endList) {
                  var u = this.seekable()
                  if (!u.length) return !1
                  if (U.browser.IE_VERSION && 0 === this.tech_.readyState())
                    return (
                      this.tech_.one('loadedmetadata', function () {
                        g.trigger('firstplay')
                        g.tech_.setCurrentTime(u.end(0))
                        g.hasPlayed_ = !0
                      }),
                      !1
                    )
                  this.trigger('firstplay')
                  this.tech_.setCurrentTime(u.end(0))
                }
                this.hasPlayed_ = !0
                this.load()
                return !0
              }
              f.handleSourceOpen_ = function () {
                this.tryToCreateSourceBuffers_()
                if (this.tech_.autoplay()) {
                  var g = this.tech_.play()
                  'undefined' !== typeof g &&
                    'function' === typeof g.then &&
                    g.then(null, function (k) {})
                }
                this.trigger('sourceopen')
              }
              f.handleSourceEnded_ = function () {
                if (this.inbandTextTracks_.metadataTrack_) {
                  var g = this.inbandTextTracks_.metadataTrack_.cues
                  if (g && g.length) {
                    var k = this.duration()
                    g[g.length - 1].endTime =
                      isNaN(k) || Infinity === Math.abs(k) ? Number.MAX_VALUE : k
                  }
                }
              }
              f.handleDurationChange_ = function () {
                this.tech_.trigger('durationchange')
              }
              f.onEndOfStream = function () {
                var g = this.mainSegmentLoader_.ended_
                this.mediaTypes_.AUDIO.activePlaylistLoader &&
                  (g =
                    !this.mainSegmentLoader_.currentMediaInfo_ ||
                    this.mainSegmentLoader_.currentMediaInfo_.hasVideo
                      ? g && this.audioSegmentLoader_.ended_
                      : this.audioSegmentLoader_.ended_)
                g && (this.stopABRTimer_(), this.sourceUpdater_.endOfStream())
              }
              f.stuckAtPlaylistEnd_ = function (g) {
                if (!this.seekable().length) return !1
                var k = this.syncController_.getExpiredTime(g, this.duration())
                if (null === k) return !1
                g = bd.Playlist.playlistEnd(g, k)
                k = this.tech_.currentTime()
                var u = this.tech_.buffered()
                if (!u.length) return g - k <= nc
                u = u.end(u.length - 1)
                return u - k <= nc && g - u <= nc
              }
              f.blacklistCurrentPlaylist = function (g, k) {
                void 0 === g && (g = {})
                var u = g.playlist || this.masterPlaylistLoader_.media()
                k = k || g.blacklistDuration || this.blacklistDuration
                if (u) {
                  var w = this.masterPlaylistLoader_.master.playlists,
                    A = w.filter(pf)
                  A = 1 === A.length && A[0] === u
                  if (1 === w.length && Infinity !== k)
                    return (
                      U.log.warn(
                        'Problem encountered with playlist ' +
                          u.id +
                          '. Trying again since it is the only playlist.',
                      ),
                      this.tech_.trigger('retryplaylist'),
                      this.masterPlaylistLoader_.load(A)
                    )
                  if (A) {
                    var H = !1
                    w.forEach(function (R) {
                      if (R !== u) {
                        var W = R.excludeUntil
                        'undefined' !== typeof W &&
                          Infinity !== W &&
                          ((H = !0), delete R.excludeUntil)
                      }
                    })
                    H &&
                      (U.log.warn(
                        'Removing other playlists from the exclusion list because the last rendition is about to be excluded.',
                      ),
                      this.tech_.trigger('retryplaylist'))
                  }
                  u.excludeUntil = Date.now() + 1e3 * k
                  g.reason && (u.lastExcludeReason_ = g.reason)
                  this.tech_.trigger('blacklistplaylist')
                  this.tech_.trigger({ type: 'usage', name: 'vhs-rendition-blacklisted' })
                  this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' })
                  if ((k = this.selectPlaylist()))
                    return (
                      (g.internal ? this.logger_ : U.log.warn)(
                        (g.internal ? 'Internal problem' : 'Problem') +
                          ' encountered with playlist ' +
                          u.id +
                          '.' +
                          ((g.message ? ' ' + g.message : '') +
                            ' Switching to playlist ' +
                            k.id +
                            '.'),
                      ),
                      k.attributes.AUDIO !== u.attributes.AUDIO &&
                        this.delegateLoaders_('audio', ['abort', 'pause']),
                      k.attributes.SUBTITLES !== u.attributes.SUBTITLES &&
                        this.delegateLoaders_('subtitle', ['abort', 'pause']),
                      this.delegateLoaders_('main', ['abort', 'pause']),
                      (g = (k.targetDuration / 2) * 1e3 || 5e3),
                      (g = 'number' === typeof k.lastRequest && Date.now() - k.lastRequest <= g),
                      this.masterPlaylistLoader_.media(k, A || g)
                    )
                  this.error =
                    'Playback cannot continue. No available working or supported playlists.'
                  this.trigger('error')
                } else
                  (this.error = g),
                    'open' !== this.mediaSource.readyState
                      ? this.trigger('error')
                      : this.sourceUpdater_.endOfStream('network')
              }
              f.pauseLoading = function () {
                this.delegateLoaders_('all', ['abort', 'pause'])
                this.stopABRTimer_()
              }
              f.delegateLoaders_ = function (g, k) {
                var u = this,
                  w = [],
                  A = 'all' === g
                ;(A || 'main' === g) && w.push(this.masterPlaylistLoader_)
                var H = []
                ;(A || 'audio' === g) && H.push('AUDIO')
                if (A || 'subtitle' === g) H.push('CLOSED-CAPTIONS'), H.push('SUBTITLES')
                H.forEach(function (R) {
                  ;(R = u.mediaTypes_[R] && u.mediaTypes_[R].activePlaylistLoader) && w.push(R)
                })
                ;['main', 'audio', 'subtitle'].forEach(function (R) {
                  var W = u[R + 'SegmentLoader_']
                  !W || (g !== R && 'all' !== g) || w.push(W)
                })
                w.forEach(function (R) {
                  return k.forEach(function (W) {
                    if ('function' === typeof R[W]) R[W]()
                  })
                })
              }
              f.setCurrentTime = function (g) {
                var k = ke(this.tech_.buffered(), g)
                if (
                  !this.masterPlaylistLoader_ ||
                  !this.masterPlaylistLoader_.media() ||
                  !this.masterPlaylistLoader_.media().segments
                )
                  return 0
                if (k && k.length) return g
                this.mainSegmentLoader_.resetEverything()
                this.mainSegmentLoader_.abort()
                this.mediaTypes_.AUDIO.activePlaylistLoader &&
                  (this.audioSegmentLoader_.resetEverything(), this.audioSegmentLoader_.abort())
                this.mediaTypes_.SUBTITLES.activePlaylistLoader &&
                  (this.subtitleSegmentLoader_.resetEverything(),
                  this.subtitleSegmentLoader_.abort())
                this.load()
              }
              f.duration = function () {
                if (!this.masterPlaylistLoader_) return 0
                var g = this.masterPlaylistLoader_.media()
                return g
                  ? g.endList
                    ? this.mediaSource
                      ? this.mediaSource.duration
                      : bd.Playlist.duration(g)
                    : Infinity
                  : 0
              }
              f.seekable = function () {
                return this.seekable_
              }
              f.onSyncInfoUpdate_ = function () {
                if (this.masterPlaylistLoader_) {
                  var g = this.masterPlaylistLoader_.media()
                  if (g) {
                    var k = this.syncController_.getExpiredTime(g, this.duration())
                    if (null !== k) {
                      var u = this.masterPlaylistLoader_.master.suggestedPresentationDelay,
                        w = bd.Playlist.seekable(g, k, u)
                      if (0 !== w.length) {
                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                          g = this.mediaTypes_.AUDIO.activePlaylistLoader.media()
                          k = this.syncController_.getExpiredTime(g, this.duration())
                          if (null === k) return
                          var A = bd.Playlist.seekable(g, k, u)
                          if (0 === A.length) return
                        }
                        if (this.seekable_ && this.seekable_.length) {
                          var H = this.seekable_.end(0)
                          var R = this.seekable_.start(0)
                        }
                        A
                          ? A.start(0) > w.end(0) || w.start(0) > A.end(0)
                            ? (this.seekable_ = w)
                            : (this.seekable_ = U.createTimeRanges([
                                [
                                  A.start(0) > w.start(0) ? A.start(0) : w.start(0),
                                  A.end(0) < w.end(0) ? A.end(0) : w.end(0),
                                ],
                              ]))
                          : (this.seekable_ = w)
                        ;(this.seekable_ &&
                          this.seekable_.length &&
                          this.seekable_.end(0) === H &&
                          this.seekable_.start(0) === R) ||
                          (this.logger_('seekable updated [' + Gl(this.seekable_) + ']'),
                          this.tech_.trigger('seekablechanged'))
                      }
                    }
                  }
                }
              }
              f.updateDuration = function (g) {
                this.updateDuration_ &&
                  (this.mediaSource.removeEventListener('sourceopen', this.updateDuration_),
                  (this.updateDuration_ = null))
                if ('open' !== this.mediaSource.readyState)
                  (this.updateDuration_ = this.updateDuration.bind(this, g)),
                    this.mediaSource.addEventListener('sourceopen', this.updateDuration_)
                else if (g)
                  (g = this.seekable()),
                    g.length &&
                      (isNaN(this.mediaSource.duration) ||
                        this.mediaSource.duration < g.end(g.length - 1)) &&
                      this.sourceUpdater_.setDuration(g.end(g.length - 1))
                else {
                  g = this.tech_.buffered()
                  var k = bd.Playlist.duration(this.masterPlaylistLoader_.media())
                  0 < g.length && (k = Math.max(k, g.end(g.length - 1)))
                  this.mediaSource.duration !== k && this.sourceUpdater_.setDuration(k)
                }
              }
              f.dispose = function () {
                var g = this
                this.trigger('dispose')
                this.decrypter_.terminate()
                this.masterPlaylistLoader_.dispose()
                this.mainSegmentLoader_.dispose()
                this.loadOnPlay_ && this.tech_.off('play', this.loadOnPlay_)
                ;['AUDIO', 'SUBTITLES'].forEach(function (k) {
                  k = g.mediaTypes_[k].groups
                  for (var u in k)
                    k[u].forEach(function (w) {
                      w.playlistLoader && w.playlistLoader.dispose()
                    })
                })
                this.audioSegmentLoader_.dispose()
                this.subtitleSegmentLoader_.dispose()
                this.sourceUpdater_.dispose()
                this.timelineChangeController_.dispose()
                this.stopABRTimer_()
                this.updateDuration_ &&
                  this.mediaSource.removeEventListener('sourceopen', this.updateDuration_)
                this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_)
                this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_)
                this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_)
                this.off()
              }
              f.master = function () {
                return this.masterPlaylistLoader_.master
              }
              f.media = function () {
                return this.masterPlaylistLoader_.media() || this.initialMedia_
              }
              f.areMediaTypesKnown_ = function () {
                var g = !!this.mediaTypes_.AUDIO.activePlaylistLoader
                return !this.mainSegmentLoader_.currentMediaInfo_ ||
                  (g && !this.audioSegmentLoader_.currentMediaInfo_)
                  ? !1
                  : !0
              }
              f.getCodecsOrExclude_ = function () {
                var g = this,
                  k = {
                    main: this.mainSegmentLoader_.currentMediaInfo_ || {},
                    audio: this.audioSegmentLoader_.currentMediaInfo_ || {},
                  }
                k.video = k.main
                var u = pe(this.master(), this.media()),
                  w = {},
                  A = !!this.mediaTypes_.AUDIO.activePlaylistLoader
                k.main.hasVideo && (w.video = u.video || k.main.videoCodec || 'avc1.4d400d')
                k.main.isMuxed && (w.video += ',' + (u.audio || k.main.audioCodec || 'mp4a.40.2'))
                if ((k.main.hasAudio && !k.main.isMuxed) || k.audio.hasAudio || A)
                  (w.audio = u.audio || k.main.audioCodec || k.audio.audioCodec || 'mp4a.40.2'),
                    (k.audio.isFmp4 =
                      k.main.hasAudio && !k.main.isMuxed ? k.main.isFmp4 : k.audio.isFmp4)
                if (w.audio || w.video) {
                  var H = {},
                    R
                  ;['video', 'audio'].forEach(function (T) {
                    var Q
                    if ((Q = w.hasOwnProperty(T))) (Q = w[T]), (Q = !(k[T].isFmp4 ? mf(Q) : Ah(Q)))
                    Q &&
                      ((Q = k[T].isFmp4 ? 'browser' : 'muxer'),
                      (H[Q] = H[Q] || []),
                      H[Q].push(w[T]),
                      'audio' === T && (R = Q))
                  })
                  if (A && R && this.media().attributes.AUDIO) {
                    var W = this.media().attributes.AUDIO
                    this.master().playlists.forEach(function (T) {
                      ;(T.attributes && T.attributes.AUDIO) === W &&
                        T !== g.media() &&
                        (T.excludeUntil = Infinity)
                    })
                    this.logger_(
                      'excluding audio group ' +
                        W +
                        ' as ' +
                        R +
                        ' does not support codec(s): "' +
                        w.audio +
                        '"',
                    )
                  }
                  if (Object.keys(H).length)
                    (u =
                      Object.keys(H).reduce(function (T, Q) {
                        T && (T += ', ')
                        return (T += Q + ' does not support codec(s): "' + H[Q].join(',') + '"')
                      }, '') + '.'),
                      this.blacklistCurrentPlaylist({
                        playlist: this.media(),
                        internal: !0,
                        message: u,
                        blacklistDuration: Infinity,
                      })
                  else {
                    if (
                      this.sourceUpdater_.hasCreatedSourceBuffers() &&
                      !this.sourceUpdater_.canChangeType()
                    ) {
                      var M = []
                      ;['video', 'audio'].forEach(function (T) {
                        var Q = (yc(g.sourceUpdater_.codecs[T] || '')[0] || {}).type,
                          na = (yc(w[T] || '')[0] || {}).type
                        Q &&
                          na &&
                          Q.toLowerCase() !== na.toLowerCase() &&
                          M.push('"' + g.sourceUpdater_.codecs[T] + '" -> "' + w[T] + '"')
                      })
                      if (M.length) {
                        this.blacklistCurrentPlaylist({
                          playlist: this.media(),
                          message: 'Codec switching not supported: ' + M.join(', ') + '.',
                          blacklistDuration: Infinity,
                          internal: !0,
                        })
                        return
                      }
                    }
                    return w
                  }
                } else
                  this.blacklistCurrentPlaylist({
                    playlist: this.media(),
                    message: 'Could not determine codecs for playlist.',
                    blacklistDuration: Infinity,
                  })
              }
              f.tryToCreateSourceBuffers_ = function () {
                if (
                  'open' === this.mediaSource.readyState &&
                  !this.sourceUpdater_.hasCreatedSourceBuffers() &&
                  this.areMediaTypesKnown_()
                ) {
                  var g = this.getCodecsOrExclude_()
                  g &&
                    (this.sourceUpdater_.createSourceBuffers(g),
                    (g = [g.video, g.audio].filter(Boolean).join(',')),
                    this.excludeIncompatibleVariants_(g))
                }
              }
              f.excludeUnsupportedVariants_ = function () {
                var g = this,
                  k = this.master().playlists,
                  u = []
                Object.keys(k).forEach(function (w) {
                  w = k[w]
                  if (-1 === u.indexOf(w.id)) {
                    u.push(w.id)
                    var A = pe(g.master, w),
                      H = []
                    !A.audio || Ah(A.audio) || mf(A.audio) || H.push('audio codec ' + A.audio)
                    !A.video || Ah(A.video) || mf(A.video) || H.push('video codec ' + A.video)
                    A.text && 'stpp.ttml.im1t' === A.text && H.push('text codec ' + A.text)
                    H.length &&
                      ((w.excludeUntil = Infinity),
                      g.logger_('excluding ' + w.id + ' for unsupported: ' + H.join(', ')))
                  }
                })
              }
              f.excludeIncompatibleVariants_ = function (g) {
                var k = this,
                  u = [],
                  w = this.master().playlists
                g = ci(yc(g))
                var A = ym(g),
                  H = (g.video && yc(g.video)[0]) || null,
                  R = (g.audio && yc(g.audio)[0]) || null
                Object.keys(w).forEach(function (W) {
                  W = w[W]
                  if (-1 === u.indexOf(W.id) && Infinity !== W.excludeUntil) {
                    u.push(W.id)
                    var M = [],
                      T = pe(k.masterPlaylistLoader_.master, W),
                      Q = ym(T)
                    if (T.audio || T.video)
                      Q !== A && M.push('codec count "' + Q + '" !== "' + A + '"'),
                        k.sourceUpdater_.canChangeType() ||
                          ((Q = (T.video && yc(T.video)[0]) || null),
                          (T = (T.audio && yc(T.audio)[0]) || null),
                          Q &&
                            H &&
                            Q.type.toLowerCase() !== H.type.toLowerCase() &&
                            M.push('video codec "' + Q.type + '" !== "' + H.type + '"'),
                          T &&
                            R &&
                            T.type.toLowerCase() !== R.type.toLowerCase() &&
                            M.push('audio codec "' + T.type + '" !== "' + R.type + '"')),
                        M.length &&
                          ((W.excludeUntil = Infinity),
                          k.logger_('blacklisting ' + W.id + ': ' + M.join(' && ')))
                  }
                })
              }
              f.updateAdCues_ = function (g) {
                var k = 0,
                  u = this.seekable()
                u.length && (k = u.start(0))
                u = this.cueTagsTrack_
                void 0 === k && (k = 0)
                if (g.segments)
                  for (var w, A = 0; A < g.segments.length; A++) {
                    var H = g.segments[A]
                    if (!w)
                      b: {
                        w = k + H.duration / 2
                        for (var R = u.cues, W = 0; W < R.length; W++) {
                          var M = R[W]
                          if (w >= M.adStartTime && w <= M.adEndTime) {
                            w = M
                            break b
                          }
                        }
                        w = null
                      }
                    if (w) {
                      if ('cueIn' in H) {
                        w.endTime = k
                        w.adEndTime = k
                        k += H.duration
                        w = null
                        continue
                      }
                      if (k < w.endTime) {
                        k += H.duration
                        continue
                      }
                      w.endTime += H.duration
                    } else
                      'cueOut' in H &&
                        ((w = new ra.VTTCue(k, k + H.duration, H.cueOut)),
                        (w.adStartTime = k),
                        (w.adEndTime = k + parseFloat(H.cueOut)),
                        u.addCue(w)),
                        'cueOutCont' in H &&
                          ((w = H.cueOutCont.split('/').map(parseFloat)),
                          (R = w[0]),
                          (W = w[1]),
                          (w = new ra.VTTCue(k, k + H.duration, '')),
                          (w.adStartTime = k - R),
                          (w.adEndTime = w.adStartTime + W),
                          u.addCue(w))
                    k += H.duration
                  }
              }
              f.goalBufferLength = function () {
                var g = this.tech_.currentTime(),
                  k = lb.GOAL_BUFFER_LENGTH
                return Math.min(
                  k + g * lb.GOAL_BUFFER_LENGTH_RATE,
                  Math.max(k, lb.MAX_GOAL_BUFFER_LENGTH),
                )
              }
              f.bufferLowWaterLine = function () {
                var g = this.tech_.currentTime(),
                  k = lb.BUFFER_LOW_WATER_LINE,
                  u = Math.max(k, lb.MAX_BUFFER_LOW_WATER_LINE),
                  w = Math.max(k, lb.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE)
                return Math.min(
                  k + g * lb.BUFFER_LOW_WATER_LINE_RATE,
                  this.experimentalBufferBasedABR ? w : u,
                )
              }
              f.bufferHighWaterLine = function () {
                return lb.BUFFER_HIGH_WATER_LINE
              }
              return l
            })(U.EventTarget),
            Wr = function (m, l, f) {
              return function (g) {
                var k = m.master.playlists[l],
                  u = Eh(k),
                  w = pf(k)
                if ('undefined' === typeof g) return w
                g ? delete k.disabled : (k.disabled = !0)
                g === w ||
                  u ||
                  (f(), g ? m.trigger('renditionenabled') : m.trigger('renditiondisabled'))
                return g
              }
            },
            Xr = function (m, l, f) {
              var g = m.masterPlaylistController_,
                k =
                  g[(m.options_.smoothQualityChange ? 'smooth' : 'fast') + 'QualityChange_'].bind(g)
              if (l.attributes.RESOLUTION) {
                var u = l.attributes.RESOLUTION
                this.width = u.width
                this.height = u.height
              }
              this.bandwidth = l.attributes.BANDWIDTH
              this.codecs = pe(g.master(), l)
              this.playlist = l
              this.id = f
              this.enabled = Wr(m.playlists, l.id, k)
            },
            Yr = function (m) {
              var l = m.playlists
              m.representations = function () {
                return l && l.master && l.master.playlists
                  ? l.master.playlists
                      .filter(function (f) {
                        return !Eh(f)
                      })
                      .map(function (f, g) {
                        return new Xr(m, f, f.id)
                      })
                  : []
              }
            },
            Mm = ['seeking', 'seeked', 'pause', 'playing', 'error'],
            Zr = (function () {
              function m(f) {
                var g = this
                this.masterPlaylistController_ = f.masterPlaylistController
                this.tech_ = f.tech
                this.seekable = f.seekable
                this.allowSeeksWithinUnsafeLiveWindow = f.allowSeeksWithinUnsafeLiveWindow
                this.liveRangeSafeTimeDelta = f.liveRangeSafeTimeDelta
                this.media = f.media
                this.consecutiveUpdates = 0
                this.checkCurrentTimeTimeout_ = this.timer_ = this.lastRecordedTime = null
                this.logger_ = mc('PlaybackWatcher')
                this.logger_('initialize')
                var k = function () {
                    return g.monitorCurrentTime_()
                  },
                  u = function () {
                    return g.monitorCurrentTime_()
                  },
                  w = function () {
                    return g.techWaiting_()
                  },
                  A = function () {
                    return g.cancelTimer_()
                  },
                  H = function () {
                    return g.fixesBadSeeks_()
                  },
                  R = this.masterPlaylistController_,
                  W = ['main', 'subtitle', 'audio'],
                  M = {}
                W.forEach(function (T) {
                  M[T] = {
                    reset: function () {
                      return g.resetSegmentDownloads_(T)
                    },
                    updateend: function () {
                      return g.checkSegmentDownloads_(T)
                    },
                  }
                  R[T + 'SegmentLoader_'].on('appendsdone', M[T].updateend)
                  R[T + 'SegmentLoader_'].on('playlistupdate', M[T].reset)
                  g.tech_.on(['seeked', 'seeking'], M[T].reset)
                })
                this.tech_.on('seekablechanged', H)
                this.tech_.on('waiting', w)
                this.tech_.on(Mm, A)
                this.tech_.on('canplay', u)
                this.tech_.one('play', k)
                this.dispose = function () {
                  g.logger_('dispose')
                  g.tech_.off('seekablechanged', H)
                  g.tech_.off('waiting', w)
                  g.tech_.off(Mm, A)
                  g.tech_.off('canplay', u)
                  g.tech_.off('play', k)
                  W.forEach(function (T) {
                    R[T + 'SegmentLoader_'].off('appendsdone', M[T].updateend)
                    R[T + 'SegmentLoader_'].off('playlistupdate', M[T].reset)
                    g.tech_.off(['seeked', 'seeking'], M[T].reset)
                  })
                  g.checkCurrentTimeTimeout_ && ra.clearTimeout(g.checkCurrentTimeTimeout_)
                  g.cancelTimer_()
                }
              }
              var l = m.prototype
              l.monitorCurrentTime_ = function () {
                this.checkCurrentTime_()
                this.checkCurrentTimeTimeout_ && ra.clearTimeout(this.checkCurrentTimeTimeout_)
                this.checkCurrentTimeTimeout_ = ra.setTimeout(
                  this.monitorCurrentTime_.bind(this),
                  250,
                )
              }
              l.resetSegmentDownloads_ = function (f) {
                var g = this.masterPlaylistController_[f + 'SegmentLoader_']
                0 < this[f + 'StalledDownloads_'] &&
                  this.logger_('resetting possible stalled download count for ' + f + ' loader')
                this[f + 'StalledDownloads_'] = 0
                this[f + 'Buffered_'] = g.buffered_()
              }
              l.checkSegmentDownloads_ = function (f) {
                var g = this.masterPlaylistController_,
                  k = g[f + 'SegmentLoader_'],
                  u = k.buffered_(),
                  w = nq(this[f + 'Buffered_'], u)
                this[f + 'Buffered_'] = u
                w
                  ? this.resetSegmentDownloads_(f)
                  : (this[f + 'StalledDownloads_']++,
                    this.logger_(
                      'found #' +
                        this[f + 'StalledDownloads_'] +
                        ' ' +
                        f +
                        ' appends that did not increase buffer (possible stalled download)',
                      { playlistId: k.playlist_ && k.playlist_.id, buffered: $c(u) },
                    ),
                    10 > this[f + 'StalledDownloads_'] ||
                      (this.logger_(f + ' loader stalled download exclusion'),
                      this.resetSegmentDownloads_(f),
                      this.tech_.trigger({
                        type: 'usage',
                        name: 'vhs-' + f + '-download-exclusion',
                      }),
                      'subtitle' !== f &&
                        g.blacklistCurrentPlaylist(
                          { message: 'Excessive ' + f + ' segment downloading detected.' },
                          Infinity,
                        )))
              }
              l.checkCurrentTime_ = function () {
                if (this.tech_.seeking() && this.fixesBadSeeks_())
                  (this.consecutiveUpdates = 0), (this.lastRecordedTime = this.tech_.currentTime())
                else if (!this.tech_.paused() && !this.tech_.seeking()) {
                  var f = this.tech_.currentTime(),
                    g = this.tech_.buffered()
                  if (this.lastRecordedTime === f && (!g.length || f + nc >= g.end(g.length - 1)))
                    return this.techWaiting_()
                  5 <= this.consecutiveUpdates && f === this.lastRecordedTime
                    ? (this.consecutiveUpdates++, this.waiting_())
                    : f === this.lastRecordedTime
                      ? this.consecutiveUpdates++
                      : ((this.consecutiveUpdates = 0), (this.lastRecordedTime = f))
                }
              }
              l.cancelTimer_ = function () {
                this.consecutiveUpdates = 0
                this.timer_ && (this.logger_('cancelTimer_'), clearTimeout(this.timer_))
                this.timer_ = null
              }
              l.fixesBadSeeks_ = function () {
                if (!this.tech_.seeking()) return !1
                var f = this.seekable(),
                  g = this.tech_.currentTime(),
                  k
                this.afterSeekableWindow_(
                  f,
                  g,
                  this.media(),
                  this.allowSeeksWithinUnsafeLiveWindow,
                ) && (k = f.end(f.length - 1))
                this.beforeSeekableWindow_(f, g) &&
                  ((k = f.start(0)), (k += k === f.end(0) ? 0 : nc))
                if ('undefined' !== typeof k)
                  return (
                    this.logger_(
                      'Trying to seek outside of seekable at time ' +
                        g +
                        ' with seekable range ' +
                        (Gl(f) + '. Seeking to ') +
                        (k + '.'),
                    ),
                    this.tech_.setCurrentTime(k),
                    !0
                  )
                f = this.tech_.buffered()
                k = this.media().targetDuration
                return (
                  !f.length || f.end(0) - f.start(0) < 2 * k || g > f.start(0)
                    ? 0
                    : f.start(0) - g < k
                )
                  ? ((k = f.start(0) + nc),
                    this.logger_(
                      'Buffered region starts (' +
                        f.start(0) +
                        ')  just beyond seek point (' +
                        (g + '). Seeking to ' + k + '.'),
                    ),
                    this.tech_.setCurrentTime(k),
                    !0)
                  : !1
              }
              l.waiting_ = function () {
                if (!this.techWaiting_()) {
                  var f = this.tech_.currentTime(),
                    g = this.tech_.buffered()
                  g = ke(g, f)
                  g.length &&
                    f + 3 <= g.end(0) &&
                    (this.cancelTimer_(),
                    this.tech_.setCurrentTime(f),
                    this.logger_(
                      'Stopped at ' +
                        f +
                        ' while inside a buffered region [' +
                        (g.start(0) +
                          ' -> ' +
                          g.end(0) +
                          ']. Attempting to resume playback by seeking to the current time.'),
                    ),
                    this.tech_.trigger({ type: 'usage', name: 'vhs-unknown-waiting' }),
                    this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' }))
                }
              }
              l.techWaiting_ = function () {
                var f = this.seekable(),
                  g = this.tech_.currentTime()
                if (
                  (this.tech_.seeking() && this.fixesBadSeeks_()) ||
                  this.tech_.seeking() ||
                  null !== this.timer_
                )
                  return !0
                if (this.beforeSeekableWindow_(f, g))
                  return (
                    (f = f.end(f.length - 1)),
                    this.logger_(
                      'Fell out of live window at time ' +
                        g +
                        '. Seeking to live point (seekable end) ' +
                        f,
                    ),
                    this.cancelTimer_(),
                    this.tech_.setCurrentTime(f),
                    this.tech_.trigger({ type: 'usage', name: 'vhs-live-resync' }),
                    this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' }),
                    !0
                  )
                f = this.tech_.vhs.masterPlaylistController_.sourceUpdater_
                var k = this.tech_.buffered()
                if (
                  this.videoUnderflow_({
                    audioBuffered: f.audioBuffered(),
                    videoBuffered: f.videoBuffered(),
                    currentTime: g,
                  })
                )
                  return (
                    this.cancelTimer_(),
                    this.tech_.setCurrentTime(g),
                    this.tech_.trigger({ type: 'usage', name: 'vhs-video-underflow' }),
                    this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' }),
                    !0
                  )
                f = Dh(k, g)
                return 0 < f.length
                  ? ((k = f.start(0) - g),
                    this.logger_(
                      'Stopped at ' + g + ', setting timer for ' + k + ', seeking to ' + f.start(0),
                    ),
                    this.cancelTimer_(),
                    (this.timer_ = setTimeout(this.skipTheGap_.bind(this), 1e3 * k, g)),
                    !0)
                  : !1
              }
              l.afterSeekableWindow_ = function (f, g, k, u) {
                void 0 === u && (u = !1)
                if (!f.length) return !1
                var w = f.end(f.length - 1) + nc
                !k.endList && u && (w = f.end(f.length - 1) + 3 * k.targetDuration)
                return g > w ? !0 : !1
              }
              l.beforeSeekableWindow_ = function (f, g) {
                return f.length && 0 < f.start(0) && g < f.start(0) - this.liveRangeSafeTimeDelta
                  ? !0
                  : !1
              }
              l.videoUnderflow_ = function (f) {
                var g = f.videoBuffered,
                  k = f.audioBuffered
                f = f.currentTime
                if (g) {
                  var u
                  if (g.length && k.length) {
                    var w = ke(g, f - 3)
                    g = ke(g, f)
                    k = ke(k, f)
                    k.length && !g.length && w.length && (u = { start: w.end(0), end: k.end(0) })
                  } else Dh(g, f).length || (u = this.gapFromVideoUnderflow_(g, f))
                  return u
                    ? (this.logger_(
                        'Encountered a gap in video from ' +
                          u.start +
                          ' to ' +
                          u.end +
                          '. Seeking to current time ' +
                          f,
                      ),
                      !0)
                    : !1
                }
              }
              l.skipTheGap_ = function (f) {
                var g = this.tech_.buffered(),
                  k = this.tech_.currentTime()
                g = Dh(g, k)
                this.cancelTimer_()
                0 !== g.length &&
                  k === f &&
                  (this.logger_(
                    'skipTheGap_:',
                    'currentTime:',
                    k,
                    'scheduled currentTime:',
                    f,
                    'nextRange start:',
                    g.start(0),
                  ),
                  this.tech_.setCurrentTime(g.start(0) + Zc),
                  this.tech_.trigger({ type: 'usage', name: 'vhs-gap-skip' }),
                  this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' }))
              }
              l.gapFromVideoUnderflow_ = function (f, g) {
                if (2 > f.length) f = U.createTimeRanges()
                else {
                  for (var k = [], u = 1; u < f.length; u++) {
                    var w = f.end(u - 1),
                      A = f.start(u)
                    k.push([w, A])
                  }
                  f = U.createTimeRanges(k)
                }
                for (k = 0; k < f.length; k++)
                  if (((u = f.start(k)), (w = f.end(k)), 4 > g - u && 2 < g - u))
                    return { start: u, end: w }
                return null
              }
              return m
            })(),
            $r = {
              errorInterval: 30,
              getSource: function (m) {
                var l =
                  this.tech({ IWillNotUseThisInPlugins: !0 }).currentSource_ || this.currentSource()
                return m(l)
              },
            },
            as = function g(l, f) {
              var k = 0,
                u = 0,
                w = U.mergeOptions($r, f)
              l.ready(function () {
                l.trigger({ type: 'usage', name: 'vhs-error-reload-initialized' })
                l.trigger({ type: 'usage', name: 'hls-error-reload-initialized' })
              })
              var A = function () {
                  u && l.currentTime(u)
                },
                H = function (M) {
                  null !== M &&
                    void 0 !== M &&
                    ((u = (Infinity !== l.duration() && l.currentTime()) || 0),
                    l.one('loadedmetadata', A),
                    l.src(M),
                    l.trigger({ type: 'usage', name: 'vhs-error-reload' }),
                    l.trigger({ type: 'usage', name: 'hls-error-reload' }),
                    l.play())
                },
                R = function () {
                  if (Date.now() - k < 1e3 * w.errorInterval)
                    l.trigger({ type: 'usage', name: 'vhs-error-reload-canceled' }),
                      l.trigger({ type: 'usage', name: 'hls-error-reload-canceled' })
                  else {
                    if (w.getSource && 'function' === typeof w.getSource)
                      return (k = Date.now()), w.getSource.call(l, H)
                    U.log.error(
                      'ERROR: reloadSourceOnError - The option getSource must be a function!',
                    )
                  }
                },
                W = function T() {
                  l.off('loadedmetadata', A)
                  l.off('error', R)
                  l.off('dispose', T)
                }
              l.on('error', R)
              l.on('dispose', W)
              l.reloadSourceOnError = function (T) {
                W()
                g(l, T)
              }
            },
            Nm = function (l) {
              as(this, l)
            },
            qb = {
              PlaylistLoader: Bd,
              Playlist: Gb,
              utils: tq,
              STANDARD_PLAYLIST_SELECTOR: Bm,
              INITIAL_PLAYLIST_SELECTOR: function () {
                var l = this,
                  f = this.playlists.master.playlists.filter(Gb.isEnabled)
                qe(f, function (g, k) {
                  return di(g, k)
                })
                return (
                  f.filter(function (g) {
                    return !!pe(l.playlists.master, g).video
                  })[0] || null
                )
              },
              lastBandwidthSelector: Bm,
              movingAverageBandwidthSelector: function (l) {
                var f = -1
                if (0 > l || 1 < l)
                  throw Error('Moving average bandwidth decay must be between 0 and 1.')
                return function () {
                  var g = this.useDevicePixelRatio ? ra.devicePixelRatio || 1 : 1
                  0 > f && (f = this.systemBandwidth)
                  f = l * this.systemBandwidth + (1 - l) * f
                  return Am(
                    this.playlists.master,
                    f,
                    parseInt(Af(this.tech_.el(), 'width'), 10) * g,
                    parseInt(Af(this.tech_.el(), 'height'), 10) * g,
                    this.limitRenditionByPlayerDimensions,
                  )
                }
              },
              comparePlaylistBandwidth: di,
              comparePlaylistResolution: function (l, f) {
                if (l.attributes.RESOLUTION && l.attributes.RESOLUTION.width)
                  var g = l.attributes.RESOLUTION.width
                g = g || ra.Number.MAX_VALUE
                if (f.attributes.RESOLUTION && f.attributes.RESOLUTION.width)
                  var k = f.attributes.RESOLUTION.width
                k = k || ra.Number.MAX_VALUE
                return g === k && l.attributes.BANDWIDTH && f.attributes.BANDWIDTH
                  ? l.attributes.BANDWIDTH - f.attributes.BANDWIDTH
                  : g - k
              },
              xhr: Ol(),
            }
          Object.keys(lb).forEach(function (l) {
            Object.defineProperty(qb, l, {
              get: function () {
                U.log.warn('using Vhs.' + l + ' is UNSAFE be sure you know what you are doing')
                return lb[l]
              },
              set: function (f) {
                U.log.warn('using Vhs.' + l + ' is UNSAFE be sure you know what you are doing')
                'number' !== typeof f || 0 > f
                  ? U.log.warn('value of Vhs.' + l + ' must be greater than or equal to 0')
                  : (lb[l] = f)
              },
            })
          })
          var Om = function (l, f) {
              f = f.media()
              for (var g = -1, k = 0; k < l.length; k++)
                if (l[k].id === f.id) {
                  g = k
                  break
                }
              l.selectedIndex_ = g
              l.trigger({ selectedIndex: g, type: 'change' })
            },
            bs = function (l, f) {
              f.representations().forEach(function (g) {
                l.addQualityLevel(g)
              })
              Om(l, f.playlists)
            }
          qb.canPlaySource = function () {
            return U.log.warn(
              "HLS is no longer a tech. Please remove it from your player's techOrder.",
            )
          }
          var cs = function (l, f, g) {
              if (!l) return l
              var k = f && f.attributes && f.attributes.CODECS,
                u = g && g.attributes && g.attributes.CODECS
              !u &&
                k &&
                1 < k.split(',').length &&
                k.split(',').forEach(function (R) {
                  R = R.trim()
                  if (yl(R)) u = R
                  else {
                    var W = R
                    void 0 === W && (W = '')
                    Lc.video.test(W.trim().toLowerCase()) && (k = R)
                  }
                })
              g = k ? 'video/mp4;codecs="' + k + '"' : null
              var w = u ? 'audio/mp4;codecs="' + u + '"' : null,
                A = {},
                H
              for (H in l)
                (A[H] = { audioContentType: w, videoContentType: g }),
                  f.contentProtection &&
                    f.contentProtection[H] &&
                    f.contentProtection[H].pssh &&
                    (A[H].pssh = f.contentProtection[H].pssh),
                  'string' === typeof l[H] && (A[H].url = l[H])
              return U.mergeOptions(l, A)
            },
            ds = function (l, f) {
              return l.reduce(function (g, k) {
                if (!k.contentProtection) return g
                var u = f.reduce(function (w, A) {
                  var H = k.contentProtection[A]
                  H && H.pssh && (w[A] = { pssh: H.pssh })
                  return w
                }, {})
                Object.keys(u).length && g.push(u)
                return g
              }, [])
            },
            es = function (l) {
              var f = l.player,
                g = l.sourceKeySystems,
                k = l.audioMedia
              l = l.mainPlaylists
              if (!f.eme.initializeMediaKeys) return Promise.resolve()
              k = k ? l.concat([k]) : l
              var u = [],
                w = []
              ds(k, Object.keys(g)).forEach(function (A) {
                w.push(
                  new Promise(function (H, R) {
                    f.tech_.one('keysessioncreated', H)
                  }),
                )
                u.push(
                  new Promise(function (H, R) {
                    f.eme.initializeMediaKeys({ keySystems: A }, function (W) {
                      W ? R(W) : H()
                    })
                  }),
                )
              })
              return Promise.race([Promise.all(u), Promise.race(w)])
            },
            fs = function (l) {
              var f = l.player
              l = cs(l.sourceKeySystems, l.media, l.audioMedia)
              return l
                ? (f.currentSource().keySystems = l) && !f.eme
                  ? (U.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin'),
                    !1)
                  : !0
                : !1
            },
            Pm = function () {
              if (!ra.localStorage) return null
              var l = ra.localStorage.getItem('videojs-vhs')
              if (!l) return null
              try {
                return JSON.parse(l)
              } catch (f) {
                return null
              }
            },
            gs = function (l) {
              return 0 === l.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,')
                ? JSON.parse(l.substring(l.indexOf(',') + 1))
                : l
            }
          qb.supportsNativeHls = (function () {
            if (!fc || !fc.createElement) return !1
            var l = fc.createElement('video')
            return U.getTech('Html5').isSupported()
              ? 'application/vnd.apple.mpegurl audio/mpegurl audio/x-mpegurl application/x-mpegurl video/x-mpegurl video/mpegurl application/mpegurl'
                  .split(' ')
                  .some(function (f) {
                    return /maybe|probably/i.test(l.canPlayType(f))
                  })
              : !1
          })()
          var hs =
            fc && fc.createElement && U.getTech('Html5').isSupported()
              ? /maybe|probably/i.test(
                  fc.createElement('video').canPlayType('application/dash+xml'),
                )
              : !1
          qb.supportsNativeDash = hs
          qb.supportsTypeNatively = function (l) {
            return 'hls' === l ? qb.supportsNativeHls : 'dash' === l ? qb.supportsNativeDash : !1
          }
          qb.isSupported = function () {
            return U.log.warn(
              "HLS is no longer a tech. Please remove it from your player's techOrder.",
            )
          }
          var hi = (function (l) {
              function f(k, u, w) {
                var A = l.call(this, u, U.mergeOptions(w.hls, w.vhs)) || this
                w.hls &&
                  Object.keys(w.hls).length &&
                  U.log.warn('Using hls options is deprecated. Use vhs instead.')
                A.logger_ = mc('VhsHandler')
                u.options_ &&
                  u.options_.playerId &&
                  ((w = U(u.options_.playerId)),
                  w.hasOwnProperty('hls') ||
                    Object.defineProperty(w, 'hls', {
                      get: function () {
                        U.log.warn('player.hls is deprecated. Use player.tech().vhs instead.')
                        u.trigger({ type: 'usage', name: 'hls-player-access' })
                        return Xb(A)
                      },
                      configurable: !0,
                    }),
                  w.hasOwnProperty('vhs') ||
                    Object.defineProperty(w, 'vhs', {
                      get: function () {
                        U.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.')
                        u.trigger({ type: 'usage', name: 'vhs-player-access' })
                        return Xb(A)
                      },
                      configurable: !0,
                    }),
                  w.hasOwnProperty('dash') ||
                    Object.defineProperty(w, 'dash', {
                      get: function () {
                        U.log.warn('player.dash is deprecated. Use player.tech().vhs instead.')
                        return Xb(A)
                      },
                      configurable: !0,
                    }),
                  (A.player_ = w))
                A.tech_ = u
                A.source_ = k
                A.stats = {}
                A.ignoreNextSeekingEvent_ = !1
                A.setOptions_()
                if (
                  A.options_.overrideNative &&
                  u.overrideNativeAudioTracks &&
                  u.overrideNativeVideoTracks
                )
                  u.overrideNativeAudioTracks(!0), u.overrideNativeVideoTracks(!0)
                else if (
                  A.options_.overrideNative &&
                  (u.featuresNativeVideoTracks || u.featuresNativeAudioTracks)
                )
                  throw Error(
                    'Overriding native HLS requires emulated tracks. See https://git.io/vMpjB',
                  )
                A.on(
                  fc,
                  [
                    'fullscreenchange',
                    'webkitfullscreenchange',
                    'mozfullscreenchange',
                    'MSFullscreenChange',
                  ],
                  function (H) {
                    ;(H =
                      fc.fullscreenElement ||
                      fc.webkitFullscreenElement ||
                      fc.mozFullScreenElement ||
                      fc.msFullscreenElement) &&
                      H.contains(A.tech_.el()) &&
                      A.masterPlaylistController_.smoothQualityChange_()
                  },
                )
                A.on(A.tech_, 'seeking', function () {
                  this.ignoreNextSeekingEvent_
                    ? (this.ignoreNextSeekingEvent_ = !1)
                    : this.setCurrentTime(this.tech_.currentTime())
                })
                A.on(A.tech_, 'error', function () {
                  this.tech_.error() &&
                    this.masterPlaylistController_ &&
                    this.masterPlaylistController_.pauseLoading()
                })
                A.on(A.tech_, 'play', A.play)
                return A
              }
              xc(f, l)
              var g = f.prototype
              g.setOptions_ = function () {
                var k = this
                this.options_.withCredentials = this.options_.withCredentials || !1
                this.options_.handleManifestRedirects =
                  !1 === this.options_.handleManifestRedirects ? !1 : !0
                this.options_.limitRenditionByPlayerDimensions =
                  !1 === this.options_.limitRenditionByPlayerDimensions ? !1 : !0
                this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || !1
                this.options_.smoothQualityChange = this.options_.smoothQualityChange || !1
                this.options_.useBandwidthFromLocalStorage =
                  'undefined' !== typeof this.source_.useBandwidthFromLocalStorage
                    ? this.source_.useBandwidthFromLocalStorage
                    : this.options_.useBandwidthFromLocalStorage || !1
                this.options_.customTagParsers = this.options_.customTagParsers || []
                this.options_.customTagMappers = this.options_.customTagMappers || []
                this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || !1
                this.options_.handlePartialData = this.options_.handlePartialData || !1
                'number' !== typeof this.options_.blacklistDuration &&
                  (this.options_.blacklistDuration = 300)
                if (
                  'number' !== typeof this.options_.bandwidth &&
                  this.options_.useBandwidthFromLocalStorage
                ) {
                  var u = Pm()
                  u &&
                    u.bandwidth &&
                    ((this.options_.bandwidth = u.bandwidth),
                    this.tech_.trigger({ type: 'usage', name: 'vhs-bandwidth-from-local-storage' }),
                    this.tech_.trigger({ type: 'usage', name: 'hls-bandwidth-from-local-storage' }))
                  u &&
                    u.throughput &&
                    ((this.options_.throughput = u.throughput),
                    this.tech_.trigger({
                      type: 'usage',
                      name: 'vhs-throughput-from-local-storage',
                    }),
                    this.tech_.trigger({
                      type: 'usage',
                      name: 'hls-throughput-from-local-storage',
                    }))
                }
                'number' !== typeof this.options_.bandwidth &&
                  (this.options_.bandwidth = lb.INITIAL_BANDWIDTH)
                this.options_.enableLowInitialPlaylist =
                  this.options_.enableLowInitialPlaylist &&
                  this.options_.bandwidth === lb.INITIAL_BANDWIDTH
                'withCredentials useDevicePixelRatio limitRenditionByPlayerDimensions bandwidth smoothQualityChange customTagParsers customTagMappers handleManifestRedirects cacheEncryptionKeys handlePartialData playlistSelector initialPlaylistSelector experimentalBufferBasedABR liveRangeSafeTimeDelta'
                  .split(' ')
                  .forEach(function (w) {
                    'undefined' !== typeof k.source_[w] && (k.options_[w] = k.source_[w])
                  })
                this.limitRenditionByPlayerDimensions =
                  this.options_.limitRenditionByPlayerDimensions
                this.useDevicePixelRatio = this.options_.useDevicePixelRatio
              }
              g.src = function (k, u) {
                var w = this
                k &&
                  (this.setOptions_(),
                  (this.options_.src = gs(this.source_.src)),
                  (this.options_.tech = this.tech_),
                  (this.options_.externVhs = qb),
                  (this.options_.sourceType = Tk(u)),
                  (this.options_.seekTo = function (A) {
                    w.tech_.setCurrentTime(A)
                  }),
                  (this.masterPlaylistController_ = new Vr(this.options_)),
                  (k = U.mergeOptions({ liveRangeSafeTimeDelta: nc }, this.options_, {
                    seekable: function () {
                      return w.seekable()
                    },
                    media: function () {
                      return w.masterPlaylistController_.media()
                    },
                    masterPlaylistController: this.masterPlaylistController_,
                  })),
                  (this.playbackWatcher_ = new Zr(k)),
                  this.masterPlaylistController_.on('error', function () {
                    var A = U.players[w.tech_.options_.playerId],
                      H = w.masterPlaylistController_.error
                    'object' !== typeof H || H.code
                      ? 'string' === typeof H && (H = { message: H, code: 3 })
                      : (H.code = 3)
                    A.error(H)
                  }),
                  (k = this.options_.experimentalBufferBasedABR
                    ? qb.movingAverageBandwidthSelector(0.55)
                    : qb.STANDARD_PLAYLIST_SELECTOR),
                  (this.masterPlaylistController_.selectPlaylist = this.selectPlaylist
                    ? this.selectPlaylist.bind(this)
                    : k.bind(this)),
                  (this.masterPlaylistController_.selectInitialPlaylist =
                    qb.INITIAL_PLAYLIST_SELECTOR.bind(this)),
                  (this.playlists = this.masterPlaylistController_.masterPlaylistLoader_),
                  (this.mediaSource = this.masterPlaylistController_.mediaSource),
                  Object.defineProperties(this, {
                    selectPlaylist: {
                      get: function () {
                        return this.masterPlaylistController_.selectPlaylist
                      },
                      set: function (A) {
                        this.masterPlaylistController_.selectPlaylist = A.bind(this)
                      },
                    },
                    throughput: {
                      get: function () {
                        return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                      },
                      set: function (A) {
                        this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = A
                        this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                      },
                    },
                    bandwidth: {
                      get: function () {
                        return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                      },
                      set: function (A) {
                        this.masterPlaylistController_.mainSegmentLoader_.bandwidth = A
                        this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                          rate: 0,
                          count: 0,
                        }
                      },
                    },
                    systemBandwidth: {
                      get: function () {
                        return Math.floor(
                          1 /
                            (1 / (this.bandwidth || 1) +
                              (0 < this.throughput ? 1 / this.throughput : 0)),
                        )
                      },
                      set: function () {
                        U.log.error('The "systemBandwidth" property is read-only')
                      },
                    },
                  }),
                  this.options_.bandwidth && (this.bandwidth = this.options_.bandwidth),
                  this.options_.throughput && (this.throughput = this.options_.throughput),
                  Object.defineProperties(this.stats, {
                    bandwidth: {
                      get: function () {
                        return w.bandwidth || 0
                      },
                      enumerable: !0,
                    },
                    mediaRequests: {
                      get: function () {
                        return w.masterPlaylistController_.mediaRequests_() || 0
                      },
                      enumerable: !0,
                    },
                    mediaRequestsAborted: {
                      get: function () {
                        return w.masterPlaylistController_.mediaRequestsAborted_() || 0
                      },
                      enumerable: !0,
                    },
                    mediaRequestsTimedout: {
                      get: function () {
                        return w.masterPlaylistController_.mediaRequestsTimedout_() || 0
                      },
                      enumerable: !0,
                    },
                    mediaRequestsErrored: {
                      get: function () {
                        return w.masterPlaylistController_.mediaRequestsErrored_() || 0
                      },
                      enumerable: !0,
                    },
                    mediaTransferDuration: {
                      get: function () {
                        return w.masterPlaylistController_.mediaTransferDuration_() || 0
                      },
                      enumerable: !0,
                    },
                    mediaBytesTransferred: {
                      get: function () {
                        return w.masterPlaylistController_.mediaBytesTransferred_() || 0
                      },
                      enumerable: !0,
                    },
                    mediaSecondsLoaded: {
                      get: function () {
                        return w.masterPlaylistController_.mediaSecondsLoaded_() || 0
                      },
                      enumerable: !0,
                    },
                    buffered: {
                      get: function () {
                        return $c(w.tech_.buffered())
                      },
                      enumerable: !0,
                    },
                    currentTime: {
                      get: function () {
                        return w.tech_.currentTime()
                      },
                      enumerable: !0,
                    },
                    currentSource: {
                      get: function () {
                        return w.tech_.currentSource_
                      },
                      enumerable: !0,
                    },
                    currentTech: {
                      get: function () {
                        return w.tech_.name_
                      },
                      enumerable: !0,
                    },
                    duration: {
                      get: function () {
                        return w.tech_.duration()
                      },
                      enumerable: !0,
                    },
                    master: {
                      get: function () {
                        return w.playlists.master
                      },
                      enumerable: !0,
                    },
                    playerDimensions: {
                      get: function () {
                        return w.tech_.currentDimensions()
                      },
                      enumerable: !0,
                    },
                    seekable: {
                      get: function () {
                        return $c(w.tech_.seekable())
                      },
                      enumerable: !0,
                    },
                    timestamp: {
                      get: function () {
                        return Date.now()
                      },
                      enumerable: !0,
                    },
                    videoPlaybackQuality: {
                      get: function () {
                        return w.tech_.getVideoPlaybackQuality()
                      },
                      enumerable: !0,
                    },
                  }),
                  this.tech_.one(
                    'canplay',
                    this.masterPlaylistController_.setupFirstPlay.bind(
                      this.masterPlaylistController_,
                    ),
                  ),
                  this.tech_.on('bandwidthupdate', function () {
                    if (w.options_.useBandwidthFromLocalStorage) {
                      var A = { bandwidth: w.bandwidth, throughput: Math.round(w.throughput) }
                      if (ra.localStorage) {
                        var H = Pm()
                        H = H ? U.mergeOptions(H, A) : A
                        try {
                          ra.localStorage.setItem('videojs-vhs', JSON.stringify(H))
                        } catch (R) {}
                      }
                    }
                  }),
                  this.masterPlaylistController_.on('selectedinitialmedia', function () {
                    Yr(w)
                  }),
                  this.masterPlaylistController_.sourceUpdater_.on(
                    'createdsourcebuffers',
                    function () {
                      w.setupEme_()
                    },
                  ),
                  this.on(this.masterPlaylistController_, 'progress', function () {
                    this.tech_.trigger('progress')
                  }),
                  this.on(this.masterPlaylistController_, 'firstplay', function () {
                    this.ignoreNextSeekingEvent_ = !0
                  }),
                  this.setupQualityLevels_(),
                  this.tech_.el() &&
                    ((this.mediaSourceUrl_ = ra.URL.createObjectURL(
                      this.masterPlaylistController_.mediaSource,
                    )),
                    this.tech_.src(this.mediaSourceUrl_)))
              }
              g.setupEme_ = function () {
                var k = this,
                  u = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader,
                  w = fs({
                    player: this.player_,
                    sourceKeySystems: this.source_.keySystems,
                    media: this.playlists.media(),
                    audioMedia: u && u.media(),
                  })
                11 !== U.browser.IE_VERSION && w
                  ? (this.logger_('waiting for EME key session creation'),
                    es({
                      player: this.player_,
                      sourceKeySystems: this.source_.keySystems,
                      audioMedia: u && u.media(),
                      mainPlaylists: this.playlists.master.playlists,
                    })
                      .then(function () {
                        k.logger_('created EME key session')
                        k.masterPlaylistController_.sourceUpdater_.initializedEme()
                      })
                      ['catch'](function (A) {
                        k.logger_('error while creating EME key session', A)
                        k.player_.error({
                          message: 'Failed to initialize media keys for EME',
                          code: 3,
                        })
                      }))
                  : this.masterPlaylistController_.sourceUpdater_.initializedEme()
              }
              g.setupQualityLevels_ = function () {
                var k = this,
                  u = U.players[this.tech_.options_.playerId]
                u &&
                  u.qualityLevels &&
                  !this.qualityLevels_ &&
                  ((this.qualityLevels_ = u.qualityLevels()),
                  this.masterPlaylistController_.on('selectedinitialmedia', function () {
                    bs(k.qualityLevels_, k)
                  }),
                  this.playlists.on('mediachange', function () {
                    Om(k.qualityLevels_, k.playlists)
                  }))
              }
              f.version = function () {
                return {
                  '@videojs/http-streaming': '2.6.4',
                  'mux.js': '5.10.0',
                  'mpd-parser': '0.15.4',
                  'm3u8-parser': '4.5.2',
                  'aes-decrypter': '3.1.2',
                }
              }
              g.version = function () {
                return this.constructor.version()
              }
              g.canChangeType = function () {
                return Im.canChangeType()
              }
              g.play = function () {
                this.masterPlaylistController_.play()
              }
              g.setCurrentTime = function (k) {
                this.masterPlaylistController_.setCurrentTime(k)
              }
              g.duration = function () {
                return this.masterPlaylistController_.duration()
              }
              g.seekable = function () {
                return this.masterPlaylistController_.seekable()
              }
              g.dispose = function () {
                this.playbackWatcher_ && this.playbackWatcher_.dispose()
                this.masterPlaylistController_ && this.masterPlaylistController_.dispose()
                this.qualityLevels_ && this.qualityLevels_.dispose()
                this.player_ &&
                  (delete this.player_.vhs, delete this.player_.dash, delete this.player_.hls)
                this.tech_ && this.tech_.vhs && delete this.tech_.vhs
                this.tech_ && delete this.tech_.hls
                this.mediaSourceUrl_ &&
                  ra.URL.revokeObjectURL &&
                  (ra.URL.revokeObjectURL(this.mediaSourceUrl_), (this.mediaSourceUrl_ = null))
                l.prototype.dispose.call(this)
              }
              g.convertToProgramTime = function (k, u) {
                return yq({
                  playlist: this.masterPlaylistController_.media(),
                  time: k,
                  callback: u,
                })
              }
              g.seekToProgramTime = function (k, u, w, A) {
                void 0 === w && (w = !0)
                void 0 === A && (A = 2)
                return zq({
                  programTime: k,
                  playlist: this.masterPlaylistController_.media(),
                  retryCount: A,
                  pauseAfterSeek: w,
                  seekTo: this.options_.seekTo,
                  tech: this.options_.tech,
                  callback: u,
                })
              }
              return f
            })(U.getComponent('Component')),
            Ef = {
              name: 'videojs-http-streaming',
              VERSION: '2.6.4',
              canHandleSource: function (l, f) {
                void 0 === f && (f = {})
                f = U.mergeOptions(U.options, f)
                return Ef.canPlayType(l.type, f)
              },
              handleSource: function (l, f, g) {
                void 0 === g && (g = {})
                g = U.mergeOptions(U.options, g)
                f.vhs = new hi(l, f, g)
                U.hasOwnProperty('hls') ||
                  Object.defineProperty(f, 'hls', {
                    get: function () {
                      U.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.')
                      return f.vhs
                    },
                    configurable: !0,
                  })
                f.vhs.xhr = Ol()
                f.vhs.src(l.src, l.type)
                return f.vhs
              },
              canPlayType: function (l, f) {
                void 0 === f && (f = {})
                f = U.mergeOptions(U.options, f).vhs.overrideNative
                f = void 0 === f ? !U.browser.IS_ANY_SAFARI : f
                l = Tk(l)
                return !l || (qb.supportsTypeNatively(l) && !f) ? '' : 'maybe'
              },
            }
          mf('avc1.4d400d,mp4a.40.2') && U.getTech('Html5').registerSourceHandler(Ef, 0)
          U.VhsHandler = hi
          Object.defineProperty(U, 'HlsHandler', {
            get: function () {
              U.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.')
              return hi
            },
            configurable: !0,
          })
          U.VhsSourceHandler = Ef
          Object.defineProperty(U, 'HlsSourceHandler', {
            get: function () {
              U.log.warn(
                'videojs.HlsSourceHandler is deprecated. Use videojs.VhsSourceHandler instead.',
              )
              return Ef
            },
            configurable: !0,
          })
          U.Vhs = qb
          Object.defineProperty(U, 'Hls', {
            get: function () {
              U.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.')
              return qb
            },
            configurable: !0,
          })
          U.use || (U.registerComponent('Hls', qb), U.registerComponent('Vhs', qb))
          U.options.vhs = U.options.vhs || {}
          U.options.hls = U.options.hls || {}
          U.registerPlugin
            ? U.registerPlugin('reloadSourceOnError', Nm)
            : U.plugin('reloadSourceOnError', Nm)
          z.exports = U
        }),
      ),
      js = (function () {
        return function (z) {
          var F = this
          this.config = z
          this.log = function (y) {
            F.videoEvent &&
              (F.videoEvent('setEntity', { video: nb.__assign(nb.__assign({}, F.basePayload), y) }),
              F.videoEvent('log', { schemaId: F.schemaId }, { ent: 'all' }))
          }
          this.schemaId = z.schemaId
          this.basePayload = { player: 'Brila', parentElementId: z.parentElementId }
          window.csa &&
            (this.videoEvent = window.csa('Events', {
              producerId: z.producerId,
              lob: window.ue_lob ? window.ue_lob : '',
            }))
        }
      })(),
      Qm = function (z) {
        var F = z.emit,
          y = z.durationMs,
          fa = z.contentIdInfoMap,
          Z = null,
          S = '',
          X = function () {
            if (null !== Z) {
              window.clearTimeout(Z)
              Z = null
              var aa = null === fa || void 0 === fa ? void 0 : fa.get(S)
              if (aa) {
                var qa = Date.now()
                fa.set(S, {
                  complete: aa.complete,
                  timeWatchedMs: qa - aa.lastPlayedTimestamp,
                  lastPlayedTimestamp: qa,
                })
                S = ''
              }
            }
          },
          ia = function (aa, qa) {
            0 >= aa
              ? X()
              : (Z = window.setTimeout(function () {
                  Z = null
                  F()
                  null === fa || void 0 === fa
                    ? void 0
                    : fa.set(qa, { complete: !0, timeWatchedMs: y, lastPlayedTimestamp: -1 })
                }, aa))
          }
        return {
          stop: function () {
            X()
          },
          start: function (aa) {
            S = aa
            void 0 === fa.get(aa) &&
              fa.set(aa, { complete: !1, timeWatchedMs: 0, lastPlayedTimestamp: Date.now() })
            aa = null === fa || void 0 === fa ? void 0 : fa.get(aa)
            void 0 === aa || aa.complete || null !== Z || ia(y - aa.timeWatchedMs, S)
          },
        }
      },
      ks = (function () {
        function z(F) {
          var y = this,
            fa
          this.config = F
          this.sessionStartEmitted = this.ptffEmitted = this.playbackStartEmitted = !1
          this.ptffStartTimestamp = 0
          this.isSegmentStarted = !1
          this.prevSegmentStopTime = this.segmentStartTime = 0
          this.isRebuffering = this.closedCaptionsEnabled = !1
          this.pauseTime =
            this.lastUpdatedTime =
            this.currentTime =
            this.totalDuration =
            this.prevPlayHeadTime =
            this.rebufferDuration =
            this.rebufferCount =
            this.rebufferStartTime =
              0
          this.isPaused = this.isPausedWhileSeeking = !1
          this.seekingTime = 0
          this.isEnded =
            this.thirdQuartileReached =
            this.midpointReached =
            this.firstQuartileReached =
            this.hasSeekedAwaitingPlayback =
              !1
          this.hbWatchTotalDuration = this.hbSystemStartTime = this.hbWatchSegmentStartTime = 0
          this.ospAttributionReported = !1
          this.timeSinceLastMinWatched =
            this.minWatchedStartTime =
            this.lastMinWatchedTime =
            this.loggingInterval =
            this.initialLoggingDelay =
            this.secondsFromLastEvent =
            this.lastLoggedEventInterval =
              0
          this.minWatchedOffset = 1e3 * Math.floor(60 * Math.random())
          this.widgetInViewportReported = this.isMinWatchStarted = !1
          this.isMetricEmissionActive = !0
          this.initialize = function () {
            y.hbWatchInterval = null
            y.playheadInterval = null
            y.rebufferDetectionInterval = null
            y.playerInstance.on(Aa[Aa.loadstart], y.loadStartHandler)
            y.playerInstance.on(Aa[Aa.playing], y.playingHandler)
            y.playerInstance.on(Aa[Aa.pause], y.pauseHandler)
            y.playerInstance.on(Aa[Aa.timeupdate], y.timeupdateHandler)
            y.playerInstance.on(Aa[Aa.rebuffering], y.rebufferingHandler)
            y.playerInstance.on(Aa[Aa.seeking], y.seekingHandler)
            y.playerInstance.on(Aa[Aa.seeked], y.seekedHandler)
            y.playerInstance.on(Aa[Aa.error], y.errorHandler)
            y.playerInstance.on(Aa[Aa.ended], y.endedHandler)
            y.playerInstance.on(Aa[Aa.requestmute], y.muteHandler)
            y.playerInstance.on(Aa[Aa.requestunmute], y.unmuteHandler)
            y.playerInstance.on(Aa[Aa.requestpause], y.pauseRequestHandler)
            y.playerInstance.on(Aa[Aa.requestplay], y.playRequestHandler)
            y.playerInstance.on(Aa[Aa.invokeplay], y.invokePlayHandler)
            y.addPageNavigationHandler()
          }
          this.addPageNavigationHandler = function () {
            V['default'].capabilities.ios && V['default'].capabilities.isSafari
              ? (window.onpagehide = y.publishBeforeDispose)
              : (window.onbeforeunload = y.publishBeforeDispose)
          }
          this.publishBeforeDispose = function () {
            y.isEnded || (y.segmentStop(!1), y.publishEndOfSessionMetrics())
          }
          this.updateContentId = function (S) {
            y.isEnded || (y.segmentStop(!1), y.publishEndOfSessionMetrics())
            y.contentId = S
          }
          this.updateRankingStrategy = function (S) {
            y.rankingStrategy = S
          }
          this.updateAciContentId = function (S) {
            y.aciContentId = S
          }
          this.updatePlacementContext = function (S) {
            y.playerPlacementSuffix = S
          }
          this.updateOspData = function (S) {
            var X
            ;(X = V['default'].objectIsEmpty(S)) ||
              (X = cd(S) || cd(S.vendorTrackingId) || cd(S.videoReferenceId) || cd(S.productAsin))
            X
              ? ((V['default'].objectIsEmpty(S) ||
                  (V['default'].objectIsEmpty(S.vendorTrackingId) &&
                    V['default'].objectIsEmpty(S.videoReferenceId) &&
                    V['default'].objectIsEmpty(S.productAsin))) &&
                  y.emitOspMetrics('vse:osp:tag:invalid:record'),
                (y.ospAttributionReported = !0))
              : ((y.ospTrackingId = S.vendorTrackingId),
                (y.ospReferenceId = S.videoReferenceId),
                (y.ospProductAsin = S.productAsin),
                (y.ospAttributionReported = !1))
          }
          this.updateTextTrackMetrics = function () {
            var S = y.playerInstance.videoJS.remoteTextTracks()
            if (S)
              for (
                var X = function (aa) {
                    var qa = S[aa]
                    qa.on('modechange', function () {
                      var xa = 'showing' === qa.mode
                      xa !== y.closedCaptionsEnabled &&
                        (xa
                          ? ((y.closedCaptionsEnabled = !0),
                            (xa = y.buildCsmPlayerEvent('primary.closedCaptionsOn', '', 1)),
                            (ea.isClosedCaptionsEnabled = !0),
                            y.logCSAEvent('CAPTIONS_ON'))
                          : ((y.closedCaptionsEnabled = !1),
                            (xa = y.buildCsmPlayerEvent('primary.closedCaptionsOff', '', 1)),
                            (ea.isClosedCaptionsEnabled = !1),
                            y.logCSAEvent('CAPTIONS_OFF')),
                        La(xa))
                    })
                  },
                  ia = 0;
                ia < S.length;
                ++ia
              )
                X(ia)
          }
          this.buildOspAttributionTag = function () {
            var S = '/gp/mobile/tag/ref=' + y.ospReftag,
              X = 'tag=' + y.ospTrackingId,
              ia = 'creativeASIN=' + y.ospProductAsin,
              aa = 'linkCode=' + y.linkCode,
              qa = 'ascsubtag=' + y.ospReferenceId,
              xa = ''
            cd(y.aciContentId) || (xa = '&asc_item-id=' + y.aciContentId)
            return S + '?' + X + '&' + aa + '&' + ia + '&' + qa + xa
          }
          this.reportOspAttribution = function (S, X) {
            void 0 === S && (S = 0)
            void 0 === X && (X = '')
            if (!0 === y.enableClickBasedAttribution) return (y.ospAttributionReported = !0)
            if (3 <= S)
              X && X.includes(y.ospReferenceId) && (y.ospAttributionReported = !0),
                y.emitOspMetrics('vse:osp:tag:emitted:error')
            else if (
              0 < S ||
              30 <= y.hbWatchTotalDuration ||
              (30 < y.playerInstance.getMediaDuration() &&
                y.hbWatchTotalDuration >= y.playerInstance.getMediaDuration() - 1 &&
                y.isEnded)
            ) {
              var ia = X || y.buildOspAttributionTag()
              V['default'].get(ia, {
                success: function () {
                  ia && ia.includes(y.ospReferenceId) && (y.ospAttributionReported = !0)
                  y.emitOspMetrics('vse:osp:tag:emitted:success')
                  La(y.buildCsmPlayerEvent('tagEmitted', y.ospTrackingId, 1))
                },
                error: function () {
                  y.reportOspAttribution(++S, ia)
                },
              })
            }
          }
          this.reportVideoViewingMetric = function () {
            var S = y.buildCsmPlayerEvent(
              'primary.viewedDuration',
              '',
              Math.round(1e3 * y.hbWatchTotalDuration),
            )
            La(S)
          }
          this.heartbeatWatchIntervalHandler = function () {
            var S = y.playerInstance.getCurrentTime()
            y.hbWatchTotalDuration += S - y.hbWatchSegmentStartTime
            y.ospAttributionReported || y.reportOspAttribution()
            y.reportVideoViewingMetric()
            y.hbWatchSegmentStartTime = S
            y.hbSystemStartTime = V['default'].now()
          }
          this.heartbeatWatchStop = function (S) {
            var X = y.playerInstance.getCurrentTime() - y.hbWatchSegmentStartTime
            y.hbWatchTotalDuration += X
            clearInterval(y.hbWatchInterval)
            y.hbWatchInterval = null
            if (
              S &&
              ((S = Math.round(1e3 * X)),
              (X = V['default'].now() - y.hbSystemStartTime),
              2200 < S || -200 > S || S < X - 200 || S > X + 200)
            )
              return
            y.ospAttributionReported || y.reportOspAttribution()
          }
          this.waitForPlaybackToBegin = function (S) {
            if (null === y.playheadInterval) {
              var X = y.playerInstance.getCurrentTime()
              y.playheadInterval = V['default'].interval(function () {
                try {
                  y.playerInstance.getCurrentTime() > X + 0.05 &&
                    (clearInterval(y.playheadInterval), (y.playheadInterval = null), S())
                } catch (ia) {
                  clearInterval(y.playheadInterval), (y.playheadInterval = null)
                }
              }, 10)
            }
          }
          this.setupRebufferDetection = function () {
            null === y.rebufferDetectionInterval &&
              ((y.prevPlayHeadTime = y.playerInstance.getCurrentTime()),
              clearInterval(y.rebufferDetectionInterval),
              (y.rebufferDetectionInterval = V['default'].interval(
                y.rebufferDetectionIntervalHandler,
                250,
              )))
          }
          this.rebufferDetectionIntervalHandler = function () {
            var S = y.playerInstance.getCurrentTime()
            S === y.prevPlayHeadTime &&
              0 !== y.prevPlayHeadTime &&
              y.playerInstance.videoJS.trigger(Aa[Aa.rebuffering])
            y.prevPlayHeadTime = S
          }
          this.playingHandler = function () {
            if (y.videoPlayLatency) {
              var S = Date.now() - y.videoPlayLatency
              nb.__assign(
                { isMuted: y.playerInstance.isMuted(), eventType: 'videoPlay', int_payload: S },
                y.playerInstance.getActiveAsset(),
              )
              y.videoPlayLatency = null
            }
            S = V['default'].now()
            y.logCSAEvent('PLAYING')
            y.addCSAEventHandler()
            if (y.isRebuffering) {
              var X = S - y.rebufferStartTime
              y.rebufferDuration += X
              y.isRebuffering = !1
              X = y.buildCsmPlayerEvent('primary.rebufferInstance', '', X)
              La(X)
            }
            y.segmentStart()
            y.hasSeekedAwaitingPlayback = !1
            y.stopMinWatched()
            y.startMinWatchedInterval()
            y.startPlayInViewPort(y.contentId)
            y.playbackStartEmitted ||
              ((X = y.buildCsmPlayerEvent('primary.startCount', '', 1)),
              La(X),
              (X = y.buildCsmClickstreamEvent('DISCOVERY', 'IVEVideoView')),
              Gf(X, ni),
              (y.playbackStartEmitted = !0))
            y.ptffEmitted ||
              ((X = y.buildCsmPlayerEvent(
                'playToFirstFrameDuration',
                '',
                S - y.ptffStartTimestamp,
              )),
              La(X),
              (y.ptffEmitted = !0))
            y.reportWidgetInViewportWithDelay()
            y.isEnded = !1
          }
          this.pauseHandler = function () {
            y.isPaused = !0
            y.pauseTime = y.playerInstance.getCurrentTime()
            y.isPausedWhileSeeking = y.playerInstance.isSeeking()
            y.segmentStop(!0)
            y.stopMinWatched()
            y.stopPlayInViewPort()
            y.clearWidgetInViewportTimeoutId()
          }
          this.loadStartHandler = function () {
            y.videoPlayLatency = Date.now()
          }
          this.invokePlayHandler = function () {
            if (!y.sessionStartEmitted && !y.ptffEmitted) {
              y.ptffStartTimestamp = V['default'].now()
              var S = y.buildCsmPlayerEvent('titleSessionStart', '', 1)
              La(S)
              S = y.buildCsmPlayerEvent(
                'titleSessionStartInstant',
                y.ptffStartTimestamp.toString(),
                0,
              )
              La(S)
              y.sessionStartEmitted = !0
            }
          }
          this.pauseRequestHandler = function () {
            var S = y.buildCsmPlayerEvent('primary.pause', '', 1)
            La(S)
            y.logCSAEvent('STOPPED')
            y.removeCSAEventHandler()
          }
          this.playRequestHandler = function () {
            if (y.isPaused) {
              y.isPaused = !1
              var S = y.buildCsmPlayerEvent('primary.resume', '', 1)
              La(S)
            }
          }
          this.timeupdateHandler = function () {
            y.lastUpdatedTime = y.currentTime
            y.currentTime = y.playerInstance.getCurrentTime()
            var S = y.playerInstance.getMediaDuration()
            if (0 !== S) {
              if (y.currentTime > 0.75 * S && !y.thirdQuartileReached) {
                var X = y.buildCsmPlayerEvent('primary.thirdQuartileCount', '', 1)
                La(X)
                y.thirdQuartileReached = !0
              }
              y.currentTime > 0.5 * S &&
                !y.midpointReached &&
                ((X = y.buildCsmPlayerEvent('primary.midpointCount', '', 1)),
                La(X),
                (y.midpointReached = !0))
              y.currentTime > 0.25 * S &&
                !y.firstQuartileReached &&
                ((X = y.buildCsmPlayerEvent('primary.firstQuartileCount', '', 1)),
                La(X),
                (y.firstQuartileReached = !0))
            }
          }
          this.endedHandler = function () {
            y.isEnded = !0
            y.stopMinWatched()
            y.stopPlayInViewPort()
            y.ospAttributionReported || y.reportOspAttribution()
            var S = y.buildCsmPlayerEvent('primary.complete', '', 1)
            La(S)
            y.logCSAEvent('ENDED')
            y.publishEndOfSessionMetrics()
          }
          this.rebufferingHandler = function () {
            y.segmentStop(!1)
            y.rebufferStartTime = V['default'].now()
            y.isRebuffering = !0
            y.rebufferCount += 1
          }
          this.seekingHandler = function () {
            y.seekingTime = y.playerInstance.getCurrentTime()
            clearInterval(y.playheadInterval)
            y.playheadInterval = null
            clearInterval(y.rebufferDetectionInterval)
            y.rebufferDetectionInterval = null
            y.isPausedWhileSeeking &&
              ((y.totalDuration -= y.pauseTime - y.lastUpdatedTime),
              y.recordSkipEvent(),
              (y.isPausedWhileSeeking = !1))
          }
          this.seekedHandler = function () {
            y.hasSeekedAwaitingPlayback || (y.recordSkipEvent(), (y.hasSeekedAwaitingPlayback = !0))
          }
          this.errorHandler = function () {
            var S = y.playerInstance.videoJS.error().code
            y.stopMinWatched()
            y.stopPlayInViewPort()
            if (1 === S || 2 === S) var X = 'primary.loadError'
            else
              3 === S || 5 === S
                ? ((X = 'primary.interpretError'),
                  (S = y.buildCsmPlayerEvent(
                    3 === S ? 'primary.interpretDecodeError' : 'primary.interpretEncryptedError',
                    '',
                    1,
                  )),
                  La(S))
                : (X = 4 === S ? 'primary.videoUnsupportedError' : 'primary.undefinedError')
            X = y.buildCsmPlayerEvent(X, '', 1)
            La(X)
          }
          this.segmentStart = function () {
            y.isSegmentStarted = !0
            y.segmentStartTime = y.playerInstance.getCurrentTime()
            null === y.hbWatchInterval &&
              ((y.hbWatchSegmentStartTime = y.playerInstance.getCurrentTime()),
              (y.hbSystemStartTime = Date.now()),
              (y.hbWatchInterval = V['default'].interval(y.heartbeatWatchIntervalHandler, 2e3)))
            y.waitForPlaybackToBegin(y.setupRebufferDetection)
          }
          this.segmentStop = function (S) {
            y.isSegmentStarted &&
              ((y.isSegmentStarted = !1),
              clearInterval(y.playheadInterval),
              (y.playheadInterval = null),
              clearInterval(y.rebufferDetectionInterval),
              (y.rebufferDetectionInterval = null),
              null !== y.hbWatchInterval && y.heartbeatWatchStop(S),
              (S = y.playerInstance.getCurrentTime()),
              void 0 !== y.segmentStartTime &&
                S !== y.prevSegmentStopTime &&
                ((y.totalDuration += S - y.segmentStartTime), (y.prevSegmentStopTime = S)))
          }
          this.recordSkipEvent = function () {
            if (y.seekingTime > y.lastUpdatedTime) {
              var S = y.buildCsmPlayerEvent('primary.skipForward', '', 1)
              La(S)
            } else
              y.seekingTime < y.lastUpdatedTime &&
                ((S = y.buildCsmPlayerEvent('primary.skipBackward', '', 1)), La(S))
          }
          this.muteHandler = function () {
            var S = y.buildCsmPlayerEvent('primary.mute', '', 1)
            La(S)
            y.logCSAEvent('MUTED')
            nb.__assign(
              {
                eventType: 'mute',
                eventTriggerType: 'userClick',
                isMuted: y.playerInstance.isMuted(),
              },
              y.playerInstance.getActiveAsset(),
            )
          }
          this.unmuteHandler = function () {
            var S = y.buildCsmPlayerEvent('primary.unmute', '', 1)
            La(S)
            y.logCSAEvent('UNMUTED')
            nb.__assign(
              {
                eventType: 'unmute',
                eventTriggerType: 'userClick',
                isMuted: y.playerInstance.isMuted(),
              },
              y.playerInstance.getActiveAsset(),
            )
          }
          this.publishEndOfSessionMetrics = function () {
            if (!(0 >= y.totalDuration)) {
              var S = V['default'].now().toString(),
                X = Math.round(1e3 * y.totalDuration),
                ia = Math.round(1e3 * y.playerInstance.getMediaDuration()),
                aa = Math.round(y.rebufferDuration),
                qa = ((100 * y.totalDuration) / y.playerInstance.getMediaDuration()).toFixed(2)
              ia = y.buildCsmPlayerEvent('primary.mediaDuration', '', ia)
              La(ia)
              ia = y.buildCsmPlayerEvent('primary.viewedDuration', '', X)
              La(ia)
              ia = y.buildCsmPlayerEvent('primary.viewedPercentage', qa, 0)
              La(ia)
              ia = y.buildCsmPlayerEvent('titleSessionEndInstant', S, 0)
              La(ia)
              ia = y.buildCsmPlayerEvent('primary.rebufferDuration', '', aa)
              La(ia)
              ia = y.buildCsmPlayerEvent('primary.rebufferCount', '', y.rebufferCount)
              La(ia)
              ia = y.buildCsmPlayerEvent(
                'primary.rebufferOccurred',
                '',
                0 < y.rebufferCount ? 1 : 0,
              )
              La(ia)
              y.playbackStartEmitted = !1
              y.sessionStartEmitted = !1
              y.ptffEmitted = !1
              y.isSegmentStarted = !1
              y.segmentStartTime = 0
              y.prevSegmentStopTime = 0
              y.playheadInterval = null
              y.rebufferDetectionInterval = null
              y.isRebuffering = !1
              y.rebufferStartTime = 0
              y.rebufferCount = 0
              y.rebufferDuration = 0
              y.prevPlayHeadTime = 0
              y.totalDuration = 0
              y.currentTime = 0
              y.lastUpdatedTime = 0
              y.pauseTime = 0
              y.isPausedWhileSeeking = !1
              y.seekingTime = 0
              y.hasSeekedAwaitingPlayback = !1
              y.firstQuartileReached = !1
              y.midpointReached = !1
              y.thirdQuartileReached = !1
              y.hbWatchSegmentStartTime = 0
              y.hbWatchInterval = null
              y.hbSystemStartTime = 0
              y.hbWatchTotalDuration = 0
              y.titleSessionId = y.generateTitleSessionId()
            }
          }
          this.getTitleSessionId = function () {
            return y.titleSessionId
          }
          this.generateTitleSessionId = function () {
            return (1e19 * Math.random()).toString()
          }
          this.emitOspMetrics = function (S) {
            var X = V['default'].objectIsEmpty(y.ospTrackingId)
              ? 'InvalidVendorTrackingId'
              : y.ospTrackingId
            S = y.buildCsmPlayerEvent(S, X, 1)
            X = y.linkCode
            void 0 === X && (X = 'vgw')
            if (!cd(S.eventName)) {
              var ia = S.eventName
              Oc.count(ia, 1)
              Oc.count(ia + ':' + X, 1)
              La(S)
              S.eventName = ia + ':' + X
              La(S)
            }
          }
          this.buildCsmPlayerEvent = function (S, X, ia) {
            var aa, qa, xa
            S = ea.buildCsmPayload({
              titleSessionId: y.titleSessionId,
              eventName: S,
              stringPayload: X,
              intPayload: ia,
              videoAsin: y.contentId,
              rankingStrategy:
                null !==
                  (xa =
                    null ===
                      (qa =
                        null === (aa = y.config.playerInstance) || void 0 === aa
                          ? void 0
                          : aa.getActiveAsset()) || void 0 === qa
                      ? void 0
                      : qa.rankingStrategy) && void 0 !== xa
                  ? xa
                  : '',
              refMarkers: y.config.refTag,
              scrubberPosition: y.playerInstance.getCurrentTime(),
              pageUrl: null !== window.location.href ? window.location.href.substring(0, 500) : '',
            })
            S.placementContext = y.playerPlacementBase + '.' + y.playerPlacementSuffix
            return S
          }
          this.buildCsmClickstreamEvent = function (S, X) {
            return {
              actionType: S,
              eventOwner: y.config.nexusConfig.producerId,
              eventType: X,
              productId: y.ospProductAsin,
            }
          }
          this.addCSAEventHandler = function () {
            y.lastLoggedEventInterval = V['default'].interval(function () {
              y.secondsFromLastEvent++
            }, 1e3)
            y.initialLoggingDelay = V['default'].delay(function () {
              y.logCSAEvent('PLAYING')
              y.loggingInterval = V['default'].interval(function () {
                y.logCSAEvent('NONE')
              }, 3e4)
            }, 2e3)
          }
          this.removeCSAEventHandler = function () {
            clearInterval(y.lastLoggedEventInterval)
            clearInterval(y.loggingInterval)
            clearTimeout(y.initialLoggingDelay)
            y.secondsFromLastEvent = 0
            y.loggingInterval = 0
            y.initialLoggingDelay = 0
          }
          this.resetCSAEventHandler = function () {
            y.removeCSAEventHandler()
            y.addCSAEventHandler()
          }
          this.updateCSAEventHandler = function (S) {
            switch (S) {
              case 'MODE_CHANGED':
              case 'MUTED':
              case 'UNMUTED':
              case 'CAPTIONS_OFF':
              case 'CAPTIONS_ON':
                y.resetCSAEventHandler()
                break
              case 'ENDED':
              case 'STOPPED':
                y.removeCSAEventHandler()
            }
          }
          this.playerInstance = F.playerInstance
          this.setupCSAMetrics()
          mi = {
            schemaId: F.nexusConfig.playerSchemaId,
            producerId: F.nexusConfig.producerId,
            requiredNumOfFields: 13,
          }
          ni = {
            schemaId: F.nexusConfig.clickstreamSchemaId,
            producerId: F.nexusConfig.producerId,
            requiredNumOfFields: 9,
          }
          ri('Player')
          this.titleSessionId = this.generateTitleSessionId()
          var Z = ea.metricsPlacement.split('.')
          Z.pop()
          this.playerPlacementBase = Z.join('.')
          this.playerPlacementSuffix =
            null !== (fa = F.metricsSuffix) && void 0 !== fa ? fa : 'ingress'
          this.ospReftag = F.refTag
          this.enableClickBasedAttribution = F.enableClickBasedAttribution
          this.linkCode = F.linkCode
          this.playInViewPortMetrics = {
            video2sPlayInViewPort: Qm({
              emit: this.emit2SecViewMetric.bind(this),
              durationMs: 2e3,
              contentIdInfoMap: new Map(),
            }),
            video30sPlayInViewPort: Qm({
              emit: this.emit30SecViewMetric.bind(this),
              durationMs: 3e4,
              contentIdInfoMap: new Map(),
            }),
          }
          this.playerInstance.getActiveAsset()
            ? ((this.contentId = this.playerInstance.getActiveAsset().contentId),
              (this.rankingStrategy = this.playerInstance.getActiveAsset().rankingStrategy),
              (this.aciContentId = this.playerInstance.getActiveAsset().aciContentId),
              (F = {
                vendorTrackingId: this.playerInstance.getActiveAsset().vendorTrackingId,
                videoReferenceId: this.playerInstance.getActiveAsset().videoReferenceId,
                productAsin: this.playerInstance.getActiveAsset().productAsin,
              }),
              this.updateOspData(F))
            : (this.ospProductAsin =
                this.ospReferenceId =
                this.ospTrackingId =
                this.aciContentId =
                this.contentId =
                  '')
        }
        z.prototype.calcTimeSinceLastMinWatched = function () {
          return this.lastMinWatchedTime || this.minWatchedStartTime
            ? Date.now() - (this.lastMinWatchedTime || this.minWatchedStartTime)
            : 0
        }
        z.prototype.getTimeToNextMinWatched = function (F) {
          void 0 === F && (F = !1)
          return this.lastMinWatchedTime
            ? 6e4 - this.calcTimeSinceLastMinWatched()
            : F
              ? (this.minWatchedOffset -= this.timeSinceLastMinWatched)
              : this.minWatchedOffset - this.calcTimeSinceLastMinWatched()
        }
        z.prototype.startMinWatchedInterval = function () {
          var F = this
          this.isMetricEmissionActive &&
            !this.isMinWatchStarted &&
            ((this.minWatchedStartTime = Date.now()),
            (this.minWatchTimeoutId = window.setTimeout(function () {
              F.minWatchTimeoutId = 0
              F.emitMinWatched()
              F.minWatchedIntervalId = window.setInterval(function () {
                F.emitMinWatched()
              }, 6e4)
            }, this.getTimeToNextMinWatched(!0))),
            (this.isMinWatchStarted = !0))
        }
        z.prototype.stopMinWatched = function () {
          this.clearMinWatchedInterval()
          this.clearMinWatchedTimeout()
          this.minWatchedStartTime &&
            (this.timeSinceLastMinWatched = this.calcTimeSinceLastMinWatched())
          this.minWatchedStartTime = 0
          this.isMinWatchStarted = !1
        }
        z.prototype.emitMinWatched = function () {
          this.lastMinWatchedTime = Date.now()
          this.playerInstance.getActiveAsset()
          this.playerInstance.isMuted()
        }
        z.prototype.emit2SecViewMetric = function () {
          var F = this.playerInstance.getActiveAsset(),
            y = this.playerInstance.isMuted()
          nb.__assign({ isMuted: y }, F)
        }
        z.prototype.emit30SecViewMetric = function () {
          var F = this.playerInstance.getActiveAsset(),
            y = this.playerInstance.isMuted()
          nb.__assign({ isMuted: y }, F)
        }
        z.prototype.setMetricEmissionActive = function (F) {
          this.isMetricEmissionActive = F
        }
        z.prototype.startPlayInViewPort = function (F) {
          this.isMetricEmissionActive &&
            (this.playInViewPortMetrics.video2sPlayInViewPort.start(F),
            this.playInViewPortMetrics.video30sPlayInViewPort.start(F))
        }
        z.prototype.clearWidgetInViewportTimeoutId = function () {
          this.widgetInViewportTimeoutId &&
            (window.clearTimeout(this.widgetInViewportTimeoutId),
            (this.widgetInViewportTimeoutId = null))
        }
        z.prototype.stopPlayInViewPort = function () {
          this.playInViewPortMetrics.video2sPlayInViewPort.stop()
          this.playInViewPortMetrics.video30sPlayInViewPort.stop()
        }
        z.prototype.reportWidgetInViewportWithDelay = function () {
          var F = this
          !this.isMetricEmissionActive ||
            this.widgetInViewportReported ||
            this.widgetInViewportTimeoutId ||
            (this.widgetInViewportTimeoutId = window.setTimeout(function () {
              nb.__assign(
                { isMuted: F.playerInstance.isMuted(), eventType: 'widgetInViewport' },
                F.playerInstance.getActiveAsset(),
              )
              F.widgetInViewportReported = !0
            }, 1e3))
        }
        z.prototype.clearMinWatchedInterval = function () {
          this.minWatchedIntervalId && window.clearInterval(this.minWatchedIntervalId)
        }
        z.prototype.clearMinWatchedTimeout = function () {
          this.minWatchTimeoutId && window.clearTimeout(this.minWatchTimeoutId)
        }
        z.prototype.getCSAConfig = function () {
          return {
            parentElementId: V['default']
              .$('.' + ea.cardId)
              .closest('[data-csa-c-id]')
              .data('csa-c-id'),
            schemaId: 'csa.VideoInteractions.2',
            producerId: 'vsemetrics_csa_instrumentation',
          }
        }
        z.prototype.setupCSAMetrics = function () {
          var F = this
          this.csa = new js(this.getCSAConfig())
          V['default'].on(ea.cardId + 'PLAYER_METRIC_EMITTED', function (y, fa) {
            F.logCSAEvent(y)
          })
        }
        z.prototype.logCSAEvent = function (F) {
          if ('' !== this.aciContentId) {
            var y = {
              contentId: this.aciContentId,
              viewDuration: this.secondsFromLastEvent.toString(),
              playerMode: ea.isIvxOpen ? 'IMMERSIVE_VIEW' : 'INLINE',
              isAutoPlayed: ea.isIvxOpen ? 'false' : 'true',
              isCaptionOn: this.closedCaptionsEnabled.toString(),
              isAudioOn: (!this.playerInstance.isMuted()).toString(),
              videoRequestId: this.titleSessionId.toString(),
              eventName: F,
            }
            this.csa.log(y)
          }
          this.secondsFromLastEvent = 0
          this.updateCSAEventHandler(F)
        }
        return z
      })(),
      ls = (function () {
        return function (z) {
          var F = this
          this.updateTextTrack = function (y) {
            y.forEach(function (fa) {
              F.videoJS.addRemoteTextTrack(
                {
                  src: fa.url,
                  kind: 'subtitles',
                  srclang: fa.locale,
                  label: 'English (Automated)',
                  default: !1,
                },
                !1,
              )
            })
          }
          this.removeCurrentTextTracks = function () {
            var y,
              fa = F.videoJS.remoteTextTracks()
            if (fa)
              try {
                for (var Z = nb.__values(fa), S = Z.next(); !S.done; S = Z.next())
                  F.videoJS.removeRemoteTextTrack(S.value)
              } catch (ia) {
                var X = { error: ia }
              } finally {
                try {
                  S && !S.done && (y = Z.return) && y.call(Z)
                } finally {
                  if (X) throw X.error
                }
              }
          }
          this.enableCurrentTextTrack = function (y) {
            void 0 === y && (y = 'en')
            F.changeTextTrackMode(y, 'showing')
          }
          this.disableCurrentTextTrack = function (y) {
            void 0 === y && (y = 'en')
            F.changeTextTrackMode(y, 'disabled')
          }
          this.getTextTrackMode = function (y) {
            var fa,
              Z = F.videoJS.remoteTextTracks()
            if (Z)
              try {
                for (var S = nb.__values(Z), X = S.next(); !X.done; X = S.next()) {
                  var ia = X.value
                  if (F.isTextTrackEligible(ia, y)) return ia.mode
                }
              } catch (qa) {
                var aa = { error: qa }
              } finally {
                try {
                  X && !X.done && (fa = S.return) && fa.call(S)
                } finally {
                  if (aa) throw aa.error
                }
              }
            return 'disabled'
          }
          this.changeTextTrackMode = function (y, fa) {
            var Z,
              S = F.videoJS.remoteTextTracks()
            if (S)
              try {
                for (var X = nb.__values(S), ia = X.next(); !ia.done; ia = X.next()) {
                  var aa = ia.value
                  F.isTextTrackEligible(aa, y) && (aa.mode = fa)
                }
              } catch (xa) {
                var qa = { error: xa }
              } finally {
                try {
                  ia && !ia.done && (Z = X.return) && Z.call(X)
                } finally {
                  if (qa) throw qa.error
                }
              }
          }
          this.isTextTrackEligible = function (y, fa) {
            return ('subtitles' === y.kind && y.language === fa) || 'captions' === y.kind
          }
          this.videoJS = z
        }
      })(),
      ms = (function () {
        return function (z) {
          var F = this,
            y
          this.setActiveAsset = function (aa) {
            F.activeAsset = aa
          }
          this.getActiveAsset = function () {
            return F.activeAsset
          }
          this.hasActiveAsset = function () {
            return !!F.activeAsset
          }
          this.on = function (aa, qa) {
            F.videoJS.on(aa, qa)
          }
          this.off = function (aa, qa) {
            F.videoJS.off(aa, qa)
          }
          this.fluid = function (aa) {
            F.videoJS.fluid(aa)
          }
          this.fill = function (aa) {
            F.videoJS.fill(aa)
          }
          this.aspectRatio = function (aa) {
            F.videoJS.aspectRatio(aa)
          }
          this.resume = function () {
            F.videoJS.play()
          }
          this.isPaused = function () {
            return F.videoJS.paused()
          }
          this.isEnded = function () {
            return F.videoJS.ended()
          }
          this.isPlaying = function () {
            return !F.isPaused()
          }
          this.isSeeking = function () {
            return F.videoJS.seeking()
          }
          this.pause = function (aa) {
            F.videoJS.pause(aa)
          }
          this.setCurrentTime = function (aa) {
            F.videoJS.trigger(Aa[Aa.invokeplay])
            F.videoJS.currentTime(aa)
          }
          this.getCurrentTime = function () {
            return F.videoJS.currentTime()
          }
          this.getMediaDuration = function () {
            return isNaN(F.videoJS.duration()) ? 0 : F.videoJS.duration()
          }
          this.mute = function () {
            F.videoJS.muted(!0)
          }
          this.unMute = function () {
            F.videoJS.muted(!1)
          }
          this.isMuted = function () {
            return F.videoJS.muted()
          }
          this.seek = function (aa) {
            F.videoJS.currentTime(aa)
          }
          this.showPoster = function (aa) {
            F.videoJS.poster(aa.imageUrl)
            F.wrapper.querySelector('.vjs-poster').style.display = 'inline-block'
          }
          this.hidePoster = function () {
            F.wrapper.querySelector('.vjs-poster').style.display = 'none'
          }
          this.updateSrc = function (aa) {
            F.videoJS.src({ src: aa.videoUrl, type: aa.videoMimeType })
          }
          this.play = function () {
            F.videoJS.trigger(Aa[Aa.invokeplay])
            var aa = F.videoJS.play()
            void 0 !== aa &&
              aa
                .then(function (qa) {
                  Ra('insituPlayerStartedAutoplay')
                })
                .catch(function (qa) {
                  ;-1 === qa.toString().indexOf('AbortError') &&
                    (Ib('Cannot autoplay video on Brila Player. Exception details: ' + qa, 'WARN'),
                    Ra('insituPlayerFailedAutoplay'))
                })
          }
          this.initializePlayerClickMetrics = function () {
            F.initializePlayPauseMetrics()
            F.initializeMuteUnmuteMetrics()
          }
          this.initializePlayPauseMetrics = function () {
            var aa, qa, xa
            null ===
              (xa =
                null ===
                  (qa =
                    null === (aa = F.videoJS.player()) || void 0 === aa ? void 0 : aa.controlBar) ||
                void 0 === qa
                  ? void 0
                  : qa.playToggle) || void 0 === xa
              ? void 0
              : xa.on('click', function () {
                  F.triggerVideoJSPlayPauseEvents()
                })
          }
          this.triggerVideoJSPlayPauseEvents = function () {
            F.isPlaying()
              ? F.videoJS.trigger(Aa[Aa.requestplay])
              : F.videoJS.trigger(Aa[Aa.requestpause])
          }
          this.initializeMuteUnmuteMetrics = function () {
            var aa, qa, xa
            null ===
              (xa =
                null ===
                  (qa =
                    null === (aa = F.videoJS.player()) || void 0 === aa ? void 0 : aa.controlBar) ||
                void 0 === qa
                  ? void 0
                  : qa.muteToggle) || void 0 === xa
              ? void 0
              : xa.on('click', function () {
                  F.triggerVideoJSMuteUnmuteEvents()
                })
          }
          this.makeVideoControlsTabAccessible = function (aa) {
            F.videoJS.player().on('canplay', function () {
              V['default'].$(aa).attr('tabindex', 0)
            })
          }
          this.triggerVideoJSMuteUnmuteEvents = function () {
            F.isMuted()
              ? F.videoJS.trigger(Aa[Aa.requestmute])
              : F.videoJS.trigger(Aa[Aa.requestunmute])
          }
          this.prepareForPlaying = function (aa) {
            F.setInitialData(aa)
          }
          this.requestFullscreen = function () {
            F.videoJS.requestFullscreen()
          }
          this.exitFullscreen = function () {
            F.videoJS.exitFullscreen()
          }
          this.isFullscreen = function () {
            return F.videoJS.isFullscreen()
          }
          this.destroy = function () {
            F.metricsModule && F.metricsModule.publishBeforeDispose()
            F.videoJS.dispose()
          }
          this.updatePlacementContext = function (aa) {
            F.metricsModule.updatePlacementContext(aa)
          }
          this.getTitleSessionId = function () {
            return F.metricsModule.getTitleSessionId()
          }
          this.error = function () {
            return F.videoJS.error()
          }
          this.setInitialData = function (aa) {
            F.metricsModule &&
              (F.metricsModule.updateContentId(aa.contentId),
              F.metricsModule.updateRankingStrategy(aa.rankingStrategy),
              F.metricsModule.updateAciContentId(aa.aciContentId),
              F.metricsModule.updateOspData({
                vendorTrackingId: aa.vendorTrackingId ? aa.vendorTrackingId : '',
                videoReferenceId: aa.videoReferenceId ? aa.videoReferenceId : '',
                productAsin: aa.productAsin ? aa.productAsin : '',
              }))
            F.config.enableAutoPlay && F.videoJS.autoplay(!aa.isLivestreamEnded)
            F.setActiveAsset(aa)
            F.updateSrc(aa)
            if (F.config.showClosedCaptions) {
              var qa = F.textTrackHelper.getTextTrackMode('en')
              F.textTrackHelper.removeCurrentTextTracks()
              F.textTrackHelper.updateTextTrack(aa.closedCaptions)
              F.metricsModule && F.metricsModule.updateTextTrackMetrics()
              'showing' === qa && F.textTrackHelper.enableCurrentTextTrack()
            }
          }
          try {
            this.config = z
            this.wrapper = rb['default'].cardRoot.getElementsByClassName(z.parentCssClass)[0]
            var fa = this.wrapper.getElementsByClassName(z.videoPlayerClass)[0],
              Z = z.cardId + '-' + z.parentCssClass + '-element'
            fa.id = Z
            fa.className = 'video-js brila-vjs'
            fa.setAttribute('playsinline', 'true')
            fa.setAttribute('disablepictureinpicture', 'true')
            this.config.enableControls && fa.setAttribute('controls', 'true')
            this.config.enableAutoPlay &&
              (fa.setAttribute('autoplay', 'true'), fa.setAttribute('muted', 'true'))
            this.config.enablePreload || fa.setAttribute('preload', 'none')
            var S = {
              techOrder: ['html5'],
              html5: {
                vhs: { overrideNative: !V['default'].capabilities.isSafari },
                nativeAudioTracks: !1,
                nativeVideoTracks: !1,
                nativeTextTracks: !1,
              },
            }
            z.controls && (S.controlBar = { children: z.controls })
            this.videoJS = is(Z, S)
            var X = this.config.playerModeConfig
            X &&
              ('boolean' === typeof X.fillMode && this.fill(X.fillMode),
              'boolean' === typeof X.fluidMode && this.fluid(X.fluidMode))
            this.textTrackHelper = new ls(this.videoJS)
            var ia = {
              playerInstance: this,
              nexusConfig: {
                producerId: 'vsemetrics_playercards',
                playerSchemaId: 'vse.VSECardsPlayerEvents.7',
                clickstreamSchemaId: 'clickstream.CustomerEvent.4',
              },
              refTag: null !== (y = z.refTag) && void 0 !== y ? y : 'vse_insitu_player',
              enableClickBasedAttribution: z.enableClickBasedAttribution,
              linkCode: z.linkCode,
              metricsSuffix: z.metricsSuffix,
            }
            this.metricsModule = new ks(ia)
            this.metricsModule.initialize()
          } catch (aa) {
            Ib(
              'fatal exception has occurred while creating player. Exception details: ' + aa,
              'FATAL',
            )
          }
        }
      })(),
      ns = function (z, F) {
        void 0 === F && (F = !1)
        var y = V['default'].capabilities.mobile
        return {
          carouselItemClassName: F ? z.vsePlc : z.carouselElement,
          widgetMetricsHandler: function (fa, Z) {
            var S = V['default'].throttle(
              function () {
                fa()
              },
              500,
              { leading: !1 },
            )
            V['default'].on(V['default'].constants.BROWSER_EVENTS.RESIZE, function () {
              fa()
            })
            V['default'].$('.' + ea.cardId + ' .a-carousel-goto-prevpage').click(function () {
              Z('left')
              S()
            })
            V['default'].$('.' + ea.cardId + ' .a-carousel-goto-nextpage').click(function () {
              Z('right')
              S()
            })
            y &&
              (V['default'].off('a:carousel:vse-cards-vw-dp:change:pageNumber'),
              V['default'].on('a:carousel:vse-cards-vw-dp:change:pageNumber', S))
          },
        }
      },
      se,
      Rm,
      Sm,
      Tm,
      te = {},
      cb,
      Ff,
      ii = !1,
      Um = null,
      qs = function (z, F) {
        return nb.__awaiter(void 0, void 0, void 0, function () {
          var y, fa, Z, S, X, ia, aa, qa, xa, Wa, Ua, Bb, Jb
          return nb.__generator(this, function (Na) {
            y = V['default'].capabilities.mobile
            Oc.count(F + ':rendered', 1)
            if (
              (fa = rb['default'].cardRoot.getElementsByClassName(z.vseWidgetPageState)) &&
              fa[0] &&
              fa[0].dataset
            )
              (se = fa[0].dataset),
                qi(se, y ? 'mobile' : 'desktop', 'ive_vftp_hero_cx'),
                oi('vse.VSECardsEvents.8', 'vsemetrics_widgetcards')
            else return Ra('pageStateNotFound'), [2]
            Rm = rb['default'].cardRoot.querySelector('.video-items-metadata')
            Tm = JSON.parse(Rm.getAttribute('data-video-items'))
            Sm = xi(Tm, se)
            Z = Sm.map(function (Ja) {
              return ue(Ja, null)
            })
            Z.forEach(function (Ja) {
              return (te[Ja.contentId] = Ja)
            })
            1 == Z.length && (ea.isSingleVideoPresent = !0)
            S = {
              showClosedCaptions: !0,
              enablePreload: !1,
              enableAutoPlay: !0,
              enableControls: !1,
              controls: [
                'playToggle',
                'progressControl',
                'remainingTimeDisplay',
                'subsCapsButton',
                'muteToggle',
              ],
              videoPlayerClass: z.heroPlayer,
              playerModeConfig: { fillMode: !0 },
              parentCssClass: z.heroPlayerWrapper,
              styleInput: z,
              cardId: se.cardId,
              enableClickBasedAttribution: 'true' === se.enableClickBasedAttribution,
              linkCode: 'vwd',
              refTag: 'vse-cards-ingress_hero',
              metricsSuffix: 'ive_vftp_hero_cx',
            }
            cb = new ms(S)
            X = function (Ja) {
              cb.prepareForPlaying(Ja)
              cb.makeVideoControlsTabAccessible(
                '.' + z.vseVideoWidgetContainer + ' .vjs-subs-caps-button .vjs-menu-item',
              )
              ea.isClosedCaptionsEnabled && cb.textTrackHelper.enableCurrentTextTrack()
              cb.play()
              os(z)
              Ff = Ja
              ea.playerInstance = cb
            }
            ia = function (Ja) {
              V['default']
                .$('.' + S.cardId + ' #vse-placeholder-related-videos')
                .delegate('.a-carousel-card a', 'click', function (Kb) {
                  var db = V['default'].$(Kb.currentTarget).closest('li').index()
                  db = Ja[db]
                  db.contentId === Ff.contentId ? Kb.preventDefault() : (X(db), Vm(db, z))
                })
            }
            aa = function () {
              var Ja = cb.getActiveAsset()
              Ja = qa(Ja)
              X(Ja)
              Vm(Ja, z)
              V['default'].trigger(
                'vse:ns:partialcomponents:' + ea.clientPrefix + ':relatedvideos:rotate',
                Ja,
              )
            }
            qa = function (Ja) {
              var Kb = Object.keys(te),
                db = Kb.findIndex(function (Lb) {
                  return te[Lb].contentId === Ja.contentId
                })
              return -1 !== db && db + 1 < Kb.length ? te[Kb[db + 1]] : te[Kb[0]]
            }
            xa = function () {
              var Ja = V['default'].$('.' + S.cardId + ' .vse-hero-widget')
              V['default'].onScreen(Ja)
                ? cb.hasActiveAsset()
                  ? Ua()
                  : (X(Z[0]), cb.initializePlayerClickMetrics(), ps(z))
                : (cb.mute(), Wa())
            }
            Wa = function () {
              cb && cb.isPlaying() && cb.pause()
            }
            Ua = function () {
              cb && cb.isPaused() && !ii && cb.resume()
            }
            nn(function (Ja) {
              Ja ? Ua() : Wa()
            })
            Bb = function () {
              ii = !0
            }
            Jb = function () {
              ii = !1
            }
            V['default'].on(V['default'].constants.BROWSER_EVENTS.SCROLL, xa)
            cb.on(Aa[Aa.ended], aa)
            cb.on(Aa[Aa.requestpause], Bb)
            cb.on(Aa[Aa.requestplay], Jb)
            ia(Z)
            return [2, cb]
          })
        })
      },
      Vm = function (z, F) {
        var y,
          fa = rb['default'].cardRoot.querySelector('.' + F.vseHeroThumbnailProfile)
        if (fa) {
          var Z = fa.querySelector('img')
          Z && (Z.src = z.profileImageUrl)
          if ((Z = fa.querySelector('.' + F.vseProfileName))) Z.innerText = z.vendorName
          if ((Z = fa.querySelector('.' + F.vseProfileDescriptor))) Z.innerText = z.title
          if ((Z = fa.querySelector('.' + F.vseProfileAvatar)))
            (Z.href = z.profileLink),
              'Seller' === z.creatorType || 'Vendor' === z.creatorType
                ? Z.classList.add('aok-hidden')
                : Z.classList.remove('aok-hidden')
          if ((Z = fa.querySelector('.' + F.vseProfileNameLink)))
            (Z.href = z.profileLink),
              ('Seller' !== z.creatorType && 'Vendor' !== z.creatorType) ||
                Z.removeAttribute('href')
          if ((Z = fa.querySelector('.' + F.vseDisclosureLink)))
            (Z.href = z.disclosureLink || ''),
              (Z.title = z.disclosureLabel || ''),
              z.disclosureLink ? Z.classList.remove('aok-hidden') : Z.classList.add('aok-hidden')
          if ((F = fa.querySelector('.' + F.vseProfileDescriptorPrefix)))
            null === (y = F.classList) || void 0 === y
              ? void 0
              : y.toggle('aok-hidden', 'AOD60' !== z.vendorCode)
        }
      },
      ps = function (z) {
        ;(z = rb['default'].cardRoot.querySelector('.' + z.vseProfileAvatar)) &&
          z.addEventListener('click', function () {
            var F = ea.buildCsmPayload({
              eventName: ea.clientPrefix + ':profileClick',
              intPayload: 1,
              videoAsin: Ff.contentId,
              stringPayload: Ff.index.toString(),
              titleSessionId: If(),
            })
            $b(F)
          })
      },
      os = function (z) {
        clearTimeout(Um)
        V['default'].$('.' + z.heroPlayerWrapper).addClass('ppvr-vsbl')
        Um = setTimeout(function () {
          ea.isHeroPopoverVisible ||
            V['default'].$('.' + z.heroPlayerWrapper).removeClass('ppvr-vsbl')
        }, 3e3)
      },
      Fd = {
        thumbnailUpdates: '_dnNlL_thumbnailUpdates_3sx2a',
        vseVideoImageWrapper: '_dnNlL_vseVideoImageWrapper_3Sk54',
        vseCarouselItem: '_dnNlL_vseCarouselItem_3IvFU',
        vseCarouselItemHovering: '_dnNlL_vseCarouselItemHovering_3nydI',
        vseHoverSection: '_dnNlL_vseHoverSection_1n4YC',
        carouselElement: '_dnNlL_carouselElement_AVBU9',
        vseMobileVideoWidget: '_dnNlL_vseMobileVideoWidget_17sDD',
        vseDesktopCarousel: '_dnNlL_vseDesktopCarousel_1UwLK',
        vseVideoDuration: '_dnNlL_vseVideoDuration_vDK4S',
        vseVideoTitle: '_dnNlL_vseVideoTitle_sPgV5',
        vseVideoTitleBlockOverlay: '_dnNlL_vseVideoTitleBlockOverlay_ZyhF4',
        vseThumbnailSecondaryImg: '_dnNlL_vseThumbnailSecondaryImg_2eoNE',
        vseVideoTitleBlock: '_dnNlL_vseVideoTitleBlock_Qp7Od',
        vseVideoTitleText: '_dnNlL_vseVideoTitleText_1lJWI',
        vseVideoTitleWithCreator: '_dnNlL_vseVideoTitleWithCreator_1Meqf',
        vseHasProfile: '_dnNlL_vseHasProfile_28XGY',
        vseVideoCreatorName: '_dnNlL_vseVideoCreatorName_3M1B_',
        vseProfilePlaceholder: '_dnNlL_vseProfilePlaceholder_34FkJ',
        vseVideoThumbnailProfile: '_dnNlL_vseVideoThumbnailProfile_1TFKR',
        vsePlc: '_dnNlL_vsePlc_MSGp5',
        heroPlayerWrapper: '_dnNlL_heroPlayerWrapper_3NfkM',
        vseHeroThumbnailProfile: '_dnNlL_vseHeroThumbnailProfile_UThmB',
        vsePlcR: '_dnNlL_vsePlcR_30suw',
        vsePlcL: '_dnNlL_vsePlcL_1PgKI',
        vseRP: '_dnNlL_vseRP_nLfJL',
        vseRV: '_dnNlL_vseRV_2ei5g',
        skeletalPFO: '_dnNlL_skeletalPFO_1All6',
        skeletalVideo: '_dnNlL_skeletalVideo_1BfuK',
        skeCard: '_dnNlL_skeCard_2uwXM',
        skeVideoCard: '_dnNlL_skeVideoCard_ljya2',
        skeImg: '_dnNlL_skeImg_lDBMN',
        skeVideoImg: '_dnNlL_skeVideoImg_26S_H',
        skeProduct: '_dnNlL_skeProduct_SSJKm',
        skeTextGroup: '_dnNlL_skeTextGroup_1PuEZ',
        skeVideoTextGroup: '_dnNlL_skeVideoTextGroup_wJYsE',
        skeTitle: '_dnNlL_skeTitle_1Uu9U',
        skeVideoTitle: '_dnNlL_skeVideoTitle_3zFEJ',
        skeVendor: '_dnNlL_skeVendor_2__Ic',
        skeVideoVendor: '_dnNlL_skeVideoVendor_77OL4',
        skeDescription: '_dnNlL_skeDescription_1nfDH',
        skeVideoDescription: '_dnNlL_skeVideoDescription_1OaI9',
        loadingShimmer: '_dnNlL_loadingShimmer_dg65G',
        vseFlex: '_dnNlL_vseFlex_DKOUj',
        heroPlayer: '_dnNlL_heroPlayer_18YHJ',
        vsePlcPC: '_dnNlL_vsePlcPC_1jYt1',
        videoTitleOverlay: '_dnNlL_videoTitleOverlay_36k_O',
        titleWithCreator: '_dnNlL_titleWithCreator_13D5L',
        videoTitle: '_dnNlL_videoTitle_3MA5S',
        vseVideoCreatorContainer: '_dnNlL_vseVideoCreatorContainer_38PNg',
        videoCreator: '_dnNlL_videoCreator_3g0KQ',
        vseProfileAvatar: '_dnNlL_vseProfileAvatar_2hzhG',
        vseProfileContent: '_dnNlL_vseProfileContent_1meBt',
        vseProfileName: '_dnNlL_vseProfileName_1rA1_',
        vseProfileDescriptorWrapper: '_dnNlL_vseProfileDescriptorWrapper_2CMkw',
        vseProfileNameLink: '_dnNlL_vseProfileNameLink_n6oG8',
        vseProfileDescriptorPrefix: '_dnNlL_vseProfileDescriptorPrefix_1-G8U',
        vseProfileDescriptor: '_dnNlL_vseProfileDescriptor_1C5j5',
        vseProfileNameDisclosure: '_dnNlL_vseProfileNameDisclosure_17gGd',
        vseVideoDisclosure: '_dnNlL_vseVideoDisclosure_1KRaJ',
        vseDisclosureLink: '_dnNlL_vseDisclosureLink_3n6SK',
        vseHeroWidgetHeaderBlock: '_dnNlL_vseHeroWidgetHeaderBlock_25gLA',
        vseHeroWidgetHeader: '_dnNlL_vseHeroWidgetHeader_3fFur',
        iveHeroRowGrid: '_dnNlL_iveHeroRowGrid_1Sgt3',
        vseLazyLoadSpinner: '_dnNlL_vseLazyLoadSpinner_2XtFC',
        vseVideoWidgetHeader: '_dnNlL_vseVideoWidgetHeader_30B2I',
        vseVideoSegmentHeader: '_dnNlL_vseVideoSegmentHeader_14ouc',
        vseFirstItem: '_dnNlL_vseFirstItem_3h4BK',
        vseVideoWidgetHeaderBlock: '_dnNlL_vseVideoWidgetHeaderBlock_2t4B0',
        vseWidgetPageState: '_dnNlL_vseWidgetPageState_2eblq',
        vseVideoWidgetContainer: '_dnNlL_vseVideoWidgetContainer_3HDIT',
        vseIngressCarousel: '_dnNlL_vseIngressCarousel_2Knkb',
        vseThumbnailPreviewImg: '_dnNlL_vseThumbnailPreviewImg_3dlho',
        vseCardsVideoThumbnail: '_dnNlL_vseCardsVideoThumbnail_3xlzJ',
        vseWidgetLbVideoBlock: '_dnNlL_vseWidgetLbVideoBlock_VfqBF',
        vseWidgetLbVideoBlockWrapper: '_dnNlL_vseWidgetLbVideoBlockWrapper_v6yOr',
        vseWidgetLbAbsolute: '_dnNlL_vseWidgetLbAbsolute_bgBq7',
        vseWidgetLbSpinner: '_dnNlL_vseWidgetLbSpinner_yjdTV',
        vseVerticalLightbox: '_dnNlL_vseVerticalLightbox_12YT2',
        vseRemoveAbsolute: '_dnNlL_vseRemoveAbsolute_2xmeK',
        vseUploadButton: '_dnNlL_vseUploadButton_5QCM8',
        vseUploadButtonIcon: '_dnNlL_vseUploadButtonIcon_2-eZR',
        vseVideoDataItem: '_dnNlL_vseVideoDataItem_2A7tm',
        vseVwdpWidgetPageState: '_dnNlL_vseVwdpWidgetPageState_283lp',
        vseSbVideoDataItem: '_dnNlL_vseSbVideoDataItem_1TmVd',
        thumbnailPreviewWrap: '_dnNlL_thumbnailPreviewWrap_2sqTc',
        vseSearchVideosInput: '_dnNlL_vseSearchVideosInput_2CfoS',
        videoPreviewWrapper: '_dnNlL_videoPreviewWrapper_vvNVU',
        clearSearchInput: '_dnNlL_clearSearchInput_3ZK67',
        sponsoredVideoLabel: '_dnNlL_sponsoredVideoLabel_23SsR',
      },
      Wm
    ji._operationNames = []
    ji.card = function () {
      return nb.__awaiter(void 0, void 0, void 0, function () {
        var z, F, y, fa, Z, S, X
        return nb.__generator(this, function (ia) {
          switch (ia.label) {
            case 0:
              Oc.count('ive-vwdp-v2-card:rendered', 1)
              z = [
                '.vse-segment-title-G1',
                '.vse-segment-title-RVS_G1',
                '.vse-segment-title-RVS_G2',
                '.vse-segment-title-RVS_G1_T1',
                '.vse-segment-title-RVS_G2_T1',
              ]
              z.forEach(function (aa) {
                V['default']
                  .$('.vse-video-widget-dp-container .' + Fd.vseVideoDataItem)
                  .find('' + aa)
                  .first()
                  .addClass(Fd.vseFirstItem)
              })
              F = V['default'].capabilities.mobile
              if (
                (y = rb['default'].cardRoot.getElementsByClassName(Fd.vseWidgetPageState)) &&
                y[0] &&
                y[0].dataset
              )
                Wm = y[0].dataset
              else return Ra('pageStateNotFound'), [2]
              fa = 'true' === Wm.desktopIngressCxUpdated
              Z = ns(Fd, fa)
              X = void 0
              return fa ? [4, qs(Fd, 'ive-vwdp-v2-card')] : [3, 2]
            case 1:
              ;(S = ia.sent()), (X = 'ive_vftp_hero_cx'), (ia.label = 2)
            case 2:
              return [4, wn(F, Fd, null, Z, !0, !0, !1, X, S)]
            case 3:
              return ia.sent(), [2]
          }
        })
      })
    }
  },
)
